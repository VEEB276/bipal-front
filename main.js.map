{"version":3,"sources":["node_modules/.pnpm/@ngrx+effects@20.0.1_@angular+core@19.2.14_rxjs@7.8.2_zone.js@0.15.1__@ngrx+store@20.0._5bd980bb72d7256ff412fd8935e9d963/node_modules/@ngrx/effects/fesm2022/ngrx-effects.mjs","node_modules/.pnpm/@ngrx+store-devtools@20.0.1_@angular+core@19.2.14_rxjs@7.8.2_zone.js@0.15.1__@ngrx+stor_2dab6fc7f49ac78e99b9bf709156c53c/node_modules/@ngrx/store-devtools/fesm2022/ngrx-store-devtools.mjs","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/sidenav.mjs","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/toolbar.mjs","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/module-C9K6ZqpI.mjs","src/app/layout/layout.component.ts","src/app/layout/layout.component.html","src/app/modules/hojadevida/guard/hoja-de-vida-auth.guard.ts","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/checkbox.mjs","src/app/modules/auth/authentication.component.ts","src/app/modules/auth/authentication.component.html","src/app/modules/auth/components/registrarse/registrarse.component.ts","src/app/modules/auth/components/registrarse/registrarse.component.html","src/app/modules/auth/components/iniciar-sesion/iniciar-sesion.component.ts","src/app/modules/auth/components/iniciar-sesion/iniciar-sesion.component.html","src/app/modules/auth/components/full-container-auth/full-container-auth.component.ts","src/app/modules/auth/components/full-container-auth/full-container-auth.component.html","src/app/core/auth/auth-user.guard.ts","src/app/modules/auth/Validators/passwordValidators.ts","src/app/modules/auth/components/password-form/password-form.component.ts","src/app/modules/auth/components/password-form/password-form.component.html","src/app/modules/auth/pages/reset-password/reset-pasword-component.component.ts","src/app/modules/auth/pages/reset-password/reset-pasword-component.component.html","src/app/modules/auth/components/recuperar-cuenta/recuperar-cuenta.component.ts","src/app/modules/auth/components/recuperar-cuenta/recuperar-cuenta.component.html","src/app/modules/auth/components/container-auth/container-auth.component.ts","src/app/modules/auth/components/container-auth/container-auth.component.html","src/app/modules/auth/components/comprobar-codigo/comprobar-codigo.component.ts","src/app/modules/auth/components/comprobar-codigo/comprobar-codigo.component.html","src/app/modules/auth/pages/crear-clave/crear-clave.component.ts","src/app/modules/auth/pages/crear-clave/crear-clave.component.html","src/app/app.routes.ts","node_modules/.pnpm/@ngx-translate+core@16.0.4_@angular+common@19.2.14_@angular+core@19.2.14_rxjs@7.8.2_zon_300112abf40b1f3f15d500b4a191c465/node_modules/@ngx-translate/core/fesm2022/ngx-translate-core.mjs","src/app/core/i18n/i18n.service.ts","node_modules/.pnpm/@ngx-translate+http-loader@16.0.1_@angular+common@19.2.14_@angular+core@19.2.14_rxjs@7._2b9a449174edc53d0594c719da1518e4/node_modules/@ngx-translate/http-loader/fesm2022/ngx-translate-http-loader.mjs","src/app/core/i18n/i18n.config.ts","src/app/core/i18n/language-selector.component.ts","src/app/core/interceptor/auth.interceptor.ts","src/app/core/interceptor/date-parse.interceptor.ts","src/app/core/interceptor/loading.interceptor.ts","src/app/app.config.ts","src/app/app.component.ts","src/app/app.component.html","src/main.ts"],"sourcesContent":["import * as i1 from 'rxjs';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { ignoreElements, materialize, map, catchError, filter, groupBy, mergeMap, exhaustMap, dematerialize, take } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Inject, Injectable, Optional, NgModule, inject, makeEnvironmentProviders, provideEnvironmentInitializer } from '@angular/core';\nimport * as i3 from '@ngrx/store';\nimport { ScannedActionsSubject, createAction, ROOT_STORE_PROVIDER, FEATURE_STATE_PROVIDER, Store } from '@ngrx/store';\nconst DEFAULT_EFFECT_CONFIG = {\n  dispatch: true,\n  functional: false,\n  useEffectsErrorHandler: true\n};\nconst CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n\n/**\n * @description\n *\n * Creates an effect from a source and an `EffectConfig`.\n *\n * @param source A function which returns an observable or observable factory.\n * @param config A `EffectConfig` to configure the effect. By default,\n * `dispatch` is true, `functional` is false, and `useEffectsErrorHandler` is\n * true.\n * @returns If `EffectConfig`#`functional` is true, returns the source function.\n * Else, returns the source function result. When `EffectConfig`#`dispatch` is\n * true, the source function result needs to be `Observable<Action>`.\n *\n * @usageNotes\n *\n * ### Class Effects\n *\n * ```ts\n * @Injectable()\n * export class FeatureEffects {\n *   // mapping to a different action\n *   readonly effect1$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionOne),\n *       map(() => FeatureActions.actionTwo())\n *     )\n *   );\n *\n *   // non-dispatching effect\n *   readonly effect2$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionTwo),\n *       tap(() => console.log('Action Two Dispatched'))\n *     ),\n *     { dispatch: false } // FeatureActions.actionTwo is not dispatched\n *   );\n *\n *   constructor(private readonly actions$: Actions) {}\n * }\n * ```\n *\n * ### Functional Effects\n *\n * ```ts\n * // mapping to a different action\n * export const loadUsers = createEffect(\n *   (actions$ = inject(Actions), usersService = inject(UsersService)) => {\n *     return actions$.pipe(\n *       ofType(UsersPageActions.opened),\n *       exhaustMap(() => {\n *         return usersService.getAll().pipe(\n *           map((users) => UsersApiActions.usersLoadedSuccess({ users })),\n *           catchError((error) =>\n *             of(UsersApiActions.usersLoadedFailure({ error }))\n *           )\n *         );\n *       })\n *     );\n *   },\n *   { functional: true }\n * );\n *\n * // non-dispatching functional effect\n * export const logDispatchedActions = createEffect(\n *   () => inject(Actions).pipe(tap(console.log)),\n *   { functional: true, dispatch: false }\n * );\n * ```\n */\nfunction createEffect(source, config = {}) {\n  const effect = config.functional ? source : source();\n  const value = {\n    ...DEFAULT_EFFECT_CONFIG,\n    ...config // Overrides any defaults if values are provided\n  };\n  Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n    value\n  });\n  return effect;\n}\nfunction getCreateEffectMetadata(instance) {\n  const propertyNames = Object.getOwnPropertyNames(instance);\n  const metadata = propertyNames.filter(propertyName => {\n    if (instance[propertyName] && instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY)) {\n      // If the property type has overridden `hasOwnProperty` we need to ensure\n      // that the metadata is valid (containing a `dispatch` property)\n      // https://github.com/ngrx/platform/issues/2975\n      const property = instance[propertyName];\n      return property[CREATE_EFFECT_METADATA_KEY].hasOwnProperty('dispatch');\n    }\n    return false;\n  }).map(propertyName => {\n    const metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n    return {\n      propertyName,\n      ...metaData\n    };\n  });\n  return metadata;\n}\nfunction getEffectsMetadata(instance) {\n  return getSourceMetadata(instance).reduce((acc, {\n    propertyName,\n    dispatch,\n    useEffectsErrorHandler\n  }) => {\n    acc[propertyName] = {\n      dispatch,\n      useEffectsErrorHandler\n    };\n    return acc;\n  }, {});\n}\nfunction getSourceMetadata(instance) {\n  return getCreateEffectMetadata(instance);\n}\nfunction getSourceForInstance(instance) {\n  return Object.getPrototypeOf(instance);\n}\nfunction isClassInstance(obj) {\n  return !!obj.constructor && obj.constructor.name !== 'Object' && obj.constructor.name !== 'Function';\n}\nfunction isClass(classOrRecord) {\n  return typeof classOrRecord === 'function';\n}\nfunction getClasses(classesAndRecords) {\n  return classesAndRecords.filter(isClass);\n}\nfunction isToken(tokenOrRecord) {\n  return tokenOrRecord instanceof InjectionToken || isClass(tokenOrRecord);\n}\nfunction mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n  const source = getSourceForInstance(sourceInstance);\n  const isClassBasedEffect = !!source && source.constructor.name !== 'Object';\n  const sourceName = isClassBasedEffect ? source.constructor.name : null;\n  const observables$ = getSourceMetadata(sourceInstance).map(({\n    propertyName,\n    dispatch,\n    useEffectsErrorHandler\n  }) => {\n    const observable$ = typeof sourceInstance[propertyName] === 'function' ? sourceInstance[propertyName]() : sourceInstance[propertyName];\n    const effectAction$ = useEffectsErrorHandler ? effectsErrorHandler(observable$, globalErrorHandler) : observable$;\n    if (dispatch === false) {\n      return effectAction$.pipe(ignoreElements());\n    }\n    const materialized$ = effectAction$.pipe(materialize());\n    return materialized$.pipe(map(notification => ({\n      effect: sourceInstance[propertyName],\n      notification,\n      propertyName,\n      sourceName,\n      sourceInstance\n    })));\n  });\n  return merge(...observables$);\n}\nconst MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\nfunction defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft = MAX_NUMBER_OF_RETRY_ATTEMPTS) {\n  return observable$.pipe(catchError(error => {\n    if (errorHandler) errorHandler.handleError(error);\n    if (retryAttemptLeft <= 1) {\n      return observable$; // last attempt\n    }\n    // Return observable that produces this particular effect\n    return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n  }));\n}\nclass Actions extends Observable {\n  constructor(source) {\n    super();\n    if (source) {\n      this.source = source;\n    }\n  }\n  lift(operator) {\n    const observable = new Actions();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function Actions_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Actions)(i0.ɵɵinject(ScannedActionsSubject));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Actions,\n      factory: Actions.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Actions, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.Observable,\n    decorators: [{\n      type: Inject,\n      args: [ScannedActionsSubject]\n    }]\n  }], null);\n})();\n/**\n * `ofType` filters an Observable of `Actions` into an Observable of the actions\n * whose type strings are passed to it.\n *\n * For example, if `actions` has type `Actions<AdditionAction|SubstractionAction>`, and\n * the type of the `Addition` action is `add`, then\n * `actions.pipe(ofType('add'))` returns an `Observable<AdditionAction>`.\n *\n * Properly typing this function is hard and requires some advanced TS tricks\n * below.\n *\n * Type narrowing automatically works, as long as your `actions` object\n * starts with a `Actions<SomeUnionOfActions>` instead of generic `Actions`.\n *\n * For backwards compatibility, when one passes a single type argument\n * `ofType<T>('something')` the result is an `Observable<T>`. Note, that `T`\n * completely overrides any possible inference from 'something'.\n *\n * Unfortunately, for unknown 'actions: Actions' these types will produce\n * 'Observable<never>'. In such cases one has to manually set the generic type\n * like `actions.ofType<AdditionAction>('add')`.\n *\n * @usageNotes\n *\n * Filter the Actions stream on the \"customers page loaded\" action\n *\n * ```ts\n * import { ofType } from '@ngrx/effects';\n * import * fromCustomers from '../customers';\n *\n * this.actions$.pipe(\n *  ofType(fromCustomers.pageLoaded)\n * )\n * ```\n */\nfunction ofType(...allowedTypes) {\n  return filter(action => allowedTypes.some(typeOrActionCreator => {\n    if (typeof typeOrActionCreator === 'string') {\n      // Comparing the string to type\n      return typeOrActionCreator === action.type;\n    }\n    // We are filtering by ActionCreator\n    return typeOrActionCreator.type === action.type;\n  }));\n}\nconst _ROOT_EFFECTS_GUARD = new InjectionToken('@ngrx/effects Internal Root Guard');\nconst USER_PROVIDED_EFFECTS = new InjectionToken('@ngrx/effects User Provided Effects');\nconst _ROOT_EFFECTS = new InjectionToken('@ngrx/effects Internal Root Effects');\nconst _ROOT_EFFECTS_INSTANCES = new InjectionToken('@ngrx/effects Internal Root Effects Instances');\nconst _FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Internal Feature Effects');\nconst _FEATURE_EFFECTS_INSTANCE_GROUPS = new InjectionToken('@ngrx/effects Internal Feature Effects Instance Groups');\nconst EFFECTS_ERROR_HANDLER = new InjectionToken('@ngrx/effects Effects Error Handler', {\n  providedIn: 'root',\n  factory: () => defaultEffectsErrorHandler\n});\nconst ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nconst rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\nfunction reportInvalidActions(output, reporter) {\n  if (output.notification.kind === 'N') {\n    const action = output.notification.value;\n    const isInvalidAction = !isAction(action);\n    if (isInvalidAction) {\n      reporter.handleError(new Error(`Effect ${getEffectName(output)} dispatched an invalid action: ${stringify(action)}`));\n    }\n  }\n}\nfunction isAction(action) {\n  return typeof action !== 'function' && action && action.type && typeof action.type === 'string';\n}\nfunction getEffectName({\n  propertyName,\n  sourceInstance,\n  sourceName\n}) {\n  const isMethod = typeof sourceInstance[propertyName] === 'function';\n  const isClassBasedEffect = !!sourceName;\n  return isClassBasedEffect ? `\"${sourceName}.${String(propertyName)}${isMethod ? '()' : ''}\"` : `\"${String(propertyName)}()\"`;\n}\nfunction stringify(action) {\n  try {\n    return JSON.stringify(action);\n  } catch {\n    return action;\n  }\n}\nconst onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\nfunction isOnIdentifyEffects(instance) {\n  return isFunction(instance, onIdentifyEffectsKey);\n}\nconst onRunEffectsKey = 'ngrxOnRunEffects';\nfunction isOnRunEffects(instance) {\n  return isFunction(instance, onRunEffectsKey);\n}\nconst onInitEffects = 'ngrxOnInitEffects';\nfunction isOnInitEffects(instance) {\n  return isFunction(instance, onInitEffects);\n}\nfunction isFunction(instance, functionName) {\n  return instance && functionName in instance && typeof instance[functionName] === 'function';\n}\nclass EffectSources extends Subject {\n  constructor(errorHandler, effectsErrorHandler) {\n    super();\n    this.errorHandler = errorHandler;\n    this.effectsErrorHandler = effectsErrorHandler;\n  }\n  addEffects(effectSourceInstance) {\n    this.next(effectSourceInstance);\n  }\n  /**\n   * @internal\n   */\n  toActions() {\n    return this.pipe(groupBy(effectsInstance => isClassInstance(effectsInstance) ? getSourceForInstance(effectsInstance) : effectsInstance), mergeMap(source$ => {\n      return source$.pipe(groupBy(effectsInstance));\n    }), mergeMap(source$ => {\n      const effect$ = source$.pipe(exhaustMap(sourceInstance => {\n        return resolveEffectSource(this.errorHandler, this.effectsErrorHandler)(sourceInstance);\n      }), map(output => {\n        reportInvalidActions(output, this.errorHandler);\n        return output.notification;\n      }), filter(notification => notification.kind === 'N' && notification.value != null), dematerialize());\n      // start the stream with an INIT action\n      // do this only for the first Effect instance\n      const init$ = source$.pipe(take(1), filter(isOnInitEffects), map(instance => instance.ngrxOnInitEffects()));\n      return merge(effect$, init$);\n    }));\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function EffectSources_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EffectSources)(i0.ɵɵinject(i0.ErrorHandler), i0.ɵɵinject(EFFECTS_ERROR_HANDLER));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: EffectSources,\n      factory: EffectSources.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EffectSources, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.ErrorHandler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [EFFECTS_ERROR_HANDLER]\n    }]\n  }], null);\n})();\nfunction effectsInstance(sourceInstance) {\n  if (isOnIdentifyEffects(sourceInstance)) {\n    return sourceInstance.ngrxOnIdentifyEffects();\n  }\n  return '';\n}\nfunction resolveEffectSource(errorHandler, effectsErrorHandler) {\n  return sourceInstance => {\n    const mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n    if (isOnRunEffects(sourceInstance)) {\n      return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n    }\n    return mergedEffects$;\n  };\n}\nclass EffectsRunner {\n  get isStarted() {\n    return !!this.effectsSubscription;\n  }\n  constructor(effectSources, store) {\n    this.effectSources = effectSources;\n    this.store = store;\n    this.effectsSubscription = null;\n  }\n  start() {\n    if (!this.effectsSubscription) {\n      this.effectsSubscription = this.effectSources.toActions().subscribe(this.store);\n    }\n  }\n  ngOnDestroy() {\n    if (this.effectsSubscription) {\n      this.effectsSubscription.unsubscribe();\n      this.effectsSubscription = null;\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function EffectsRunner_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EffectsRunner)(i0.ɵɵinject(EffectSources), i0.ɵɵinject(i3.Store));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: EffectsRunner,\n      factory: EffectsRunner.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EffectsRunner, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: EffectSources\n  }, {\n    type: i3.Store\n  }], null);\n})();\nclass EffectsRootModule {\n  constructor(sources, runner, store, rootEffectsInstances, storeRootModule, storeFeatureModule, guard) {\n    this.sources = sources;\n    runner.start();\n    for (const effectsInstance of rootEffectsInstances) {\n      sources.addEffects(effectsInstance);\n    }\n    store.dispatch({\n      type: ROOT_EFFECTS_INIT\n    });\n  }\n  addEffects(effectsInstance) {\n    this.sources.addEffects(effectsInstance);\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function EffectsRootModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EffectsRootModule)(i0.ɵɵinject(EffectSources), i0.ɵɵinject(EffectsRunner), i0.ɵɵinject(i3.Store), i0.ɵɵinject(_ROOT_EFFECTS_INSTANCES), i0.ɵɵinject(i3.StoreRootModule, 8), i0.ɵɵinject(i3.StoreFeatureModule, 8), i0.ɵɵinject(_ROOT_EFFECTS_GUARD, 8));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: EffectsRootModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EffectsRootModule, [{\n    type: NgModule,\n    args: [{}]\n  }], () => [{\n    type: EffectSources\n  }, {\n    type: EffectsRunner\n  }, {\n    type: i3.Store\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [_ROOT_EFFECTS_INSTANCES]\n    }]\n  }, {\n    type: i3.StoreRootModule,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i3.StoreFeatureModule,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [_ROOT_EFFECTS_GUARD]\n    }]\n  }], null);\n})();\nclass EffectsFeatureModule {\n  constructor(effectsRootModule, effectsInstanceGroups, storeRootModule, storeFeatureModule) {\n    const effectsInstances = effectsInstanceGroups.flat();\n    for (const effectsInstance of effectsInstances) {\n      effectsRootModule.addEffects(effectsInstance);\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function EffectsFeatureModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EffectsFeatureModule)(i0.ɵɵinject(EffectsRootModule), i0.ɵɵinject(_FEATURE_EFFECTS_INSTANCE_GROUPS), i0.ɵɵinject(i3.StoreRootModule, 8), i0.ɵɵinject(i3.StoreFeatureModule, 8));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: EffectsFeatureModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EffectsFeatureModule, [{\n    type: NgModule,\n    args: [{}]\n  }], () => [{\n    type: EffectsRootModule\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [_FEATURE_EFFECTS_INSTANCE_GROUPS]\n    }]\n  }, {\n    type: i3.StoreRootModule,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i3.StoreFeatureModule,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\nclass EffectsModule {\n  static forFeature(...featureEffects) {\n    const effects = featureEffects.flat();\n    const effectsClasses = getClasses(effects);\n    return {\n      ngModule: EffectsFeatureModule,\n      providers: [effectsClasses, {\n        provide: _FEATURE_EFFECTS,\n        multi: true,\n        useValue: effects\n      }, {\n        provide: USER_PROVIDED_EFFECTS,\n        multi: true,\n        useValue: []\n      }, {\n        provide: _FEATURE_EFFECTS_INSTANCE_GROUPS,\n        multi: true,\n        useFactory: createEffectsInstances,\n        deps: [_FEATURE_EFFECTS, USER_PROVIDED_EFFECTS]\n      }]\n    };\n  }\n  static forRoot(...rootEffects) {\n    const effects = rootEffects.flat();\n    const effectsClasses = getClasses(effects);\n    return {\n      ngModule: EffectsRootModule,\n      providers: [effectsClasses, {\n        provide: _ROOT_EFFECTS,\n        useValue: [effects]\n      }, {\n        provide: _ROOT_EFFECTS_GUARD,\n        useFactory: _provideForRootGuard\n      }, {\n        provide: USER_PROVIDED_EFFECTS,\n        multi: true,\n        useValue: []\n      }, {\n        provide: _ROOT_EFFECTS_INSTANCES,\n        useFactory: createEffectsInstances,\n        deps: [_ROOT_EFFECTS, USER_PROVIDED_EFFECTS]\n      }]\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function EffectsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EffectsModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: EffectsModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EffectsModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\nfunction createEffectsInstances(effectsGroups, userProvidedEffectsGroups) {\n  const effects = [];\n  for (const effectsGroup of effectsGroups) {\n    effects.push(...effectsGroup);\n  }\n  for (const userProvidedEffectsGroup of userProvidedEffectsGroups) {\n    effects.push(...userProvidedEffectsGroup);\n  }\n  return effects.map(effectsTokenOrRecord => isToken(effectsTokenOrRecord) ? inject(effectsTokenOrRecord) : effectsTokenOrRecord);\n}\nfunction _provideForRootGuard() {\n  const runner = inject(EffectsRunner, {\n    optional: true,\n    skipSelf: true\n  });\n  const rootEffects = inject(_ROOT_EFFECTS, {\n    self: true\n  });\n  // check whether any effects are actually passed\n  const hasEffects = !(rootEffects.length === 1 && rootEffects[0].length === 0);\n  if (hasEffects && runner) {\n    throw new TypeError(`EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.`);\n  }\n  return 'guarded';\n}\n\n/**\n * @usageNotes\n *\n * ### Providing effects at the root level\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideEffects(RouterEffects)],\n * });\n * ```\n *\n * ### Providing effects at the feature level\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideEffects(BooksApiEffects)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nfunction provideEffects(...effects) {\n  const effectsClassesAndRecords = effects.flat();\n  const effectsClasses = getClasses(effectsClassesAndRecords);\n  return makeEnvironmentProviders([effectsClasses, provideEnvironmentInitializer(() => {\n    inject(ROOT_STORE_PROVIDER);\n    inject(FEATURE_STATE_PROVIDER, {\n      optional: true\n    });\n    const effectsRunner = inject(EffectsRunner);\n    const effectSources = inject(EffectSources);\n    const shouldInitEffects = !effectsRunner.isStarted;\n    if (shouldInitEffects) {\n      effectsRunner.start();\n    }\n    for (const effectsClassOrRecord of effectsClassesAndRecords) {\n      const effectsInstance = isClass(effectsClassOrRecord) ? inject(effectsClassOrRecord) : effectsClassOrRecord;\n      effectSources.addEffects(effectsInstance);\n    }\n    if (shouldInitEffects) {\n      const store = inject(Store);\n      store.dispatch(rootEffectsInit());\n    }\n  })]);\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Actions, EFFECTS_ERROR_HANDLER, EffectSources, EffectsFeatureModule, EffectsModule, EffectsRootModule, EffectsRunner, ROOT_EFFECTS_INIT, USER_PROVIDED_EFFECTS, createEffect, defaultEffectsErrorHandler, getEffectsMetadata, mergeEffects, ofType, provideEffects, rootEffectsInit };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgZone, Injectable, Inject, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport * as i2 from '@ngrx/store';\nimport { ActionsSubject, UPDATE, INIT, INITIAL_STATE, StateObservable, ReducerManagerDispatcher } from '@ngrx/store';\nimport { EMPTY, Observable, of, merge, queueScheduler, ReplaySubject } from 'rxjs';\nimport { share, filter, map, concatMap, timeout, debounceTime, catchError, take, takeUntil, switchMap, skip, observeOn, withLatestFrom, scan } from 'rxjs/operators';\nimport { toSignal } from '@angular/core/rxjs-interop';\nconst PERFORM_ACTION = 'PERFORM_ACTION';\nconst REFRESH = 'REFRESH';\nconst RESET = 'RESET';\nconst ROLLBACK = 'ROLLBACK';\nconst COMMIT = 'COMMIT';\nconst SWEEP = 'SWEEP';\nconst TOGGLE_ACTION = 'TOGGLE_ACTION';\nconst SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\nconst JUMP_TO_STATE = 'JUMP_TO_STATE';\nconst JUMP_TO_ACTION = 'JUMP_TO_ACTION';\nconst IMPORT_STATE = 'IMPORT_STATE';\nconst LOCK_CHANGES = 'LOCK_CHANGES';\nconst PAUSE_RECORDING = 'PAUSE_RECORDING';\nclass PerformAction {\n  constructor(action, timestamp) {\n    this.action = action;\n    this.timestamp = timestamp;\n    this.type = PERFORM_ACTION;\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n  }\n}\nclass Refresh {\n  constructor() {\n    this.type = REFRESH;\n  }\n}\nclass Reset {\n  constructor(timestamp) {\n    this.timestamp = timestamp;\n    this.type = RESET;\n  }\n}\nclass Rollback {\n  constructor(timestamp) {\n    this.timestamp = timestamp;\n    this.type = ROLLBACK;\n  }\n}\nclass Commit {\n  constructor(timestamp) {\n    this.timestamp = timestamp;\n    this.type = COMMIT;\n  }\n}\nclass Sweep {\n  constructor() {\n    this.type = SWEEP;\n  }\n}\nclass ToggleAction {\n  constructor(id) {\n    this.id = id;\n    this.type = TOGGLE_ACTION;\n  }\n}\nclass SetActionsActive {\n  constructor(start, end, active = true) {\n    this.start = start;\n    this.end = end;\n    this.active = active;\n    this.type = SET_ACTIONS_ACTIVE;\n  }\n}\nclass JumpToState {\n  constructor(index) {\n    this.index = index;\n    this.type = JUMP_TO_STATE;\n  }\n}\nclass JumpToAction {\n  constructor(actionId) {\n    this.actionId = actionId;\n    this.type = JUMP_TO_ACTION;\n  }\n}\nclass ImportState {\n  constructor(nextLiftedState) {\n    this.nextLiftedState = nextLiftedState;\n    this.type = IMPORT_STATE;\n  }\n}\nclass LockChanges {\n  constructor(status) {\n    this.status = status;\n    this.type = LOCK_CHANGES;\n  }\n}\nclass PauseRecording {\n  constructor(status) {\n    this.status = status;\n    this.type = PAUSE_RECORDING;\n  }\n}\n\n/**\n * Chrome extension documentation\n * @see https://github.com/reduxjs/redux-devtools/blob/main/extension/docs/API/Arguments.md\n * Firefox extension documentation\n * @see https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md\n */\nclass StoreDevtoolsConfig {\n  constructor() {\n    /**\n     * Maximum allowed actions to be stored in the history tree (default: `false`)\n     */\n    this.maxAge = false;\n  }\n}\nconst STORE_DEVTOOLS_CONFIG = new InjectionToken('@ngrx/store-devtools Options');\n/**\n * Used to provide a `StoreDevtoolsConfig` for the store-devtools.\n */\nconst INITIAL_OPTIONS = new InjectionToken('@ngrx/store-devtools Initial Config');\nfunction noMonitor() {\n  return null;\n}\nconst DEFAULT_NAME = 'NgRx Store DevTools';\nfunction createConfig(optionsInput) {\n  const DEFAULT_OPTIONS = {\n    maxAge: false,\n    monitor: noMonitor,\n    actionSanitizer: undefined,\n    stateSanitizer: undefined,\n    name: DEFAULT_NAME,\n    serialize: false,\n    logOnly: false,\n    autoPause: false,\n    trace: false,\n    traceLimit: 75,\n    // Add all features explicitly. This prevent buggy behavior for\n    // options like \"lock\" which might otherwise not show up.\n    features: {\n      pause: true,\n      // Start/pause recording of dispatched actions\n      lock: true,\n      // Lock/unlock dispatching actions and side effects\n      persist: true,\n      // Persist states on page reloading\n      export: true,\n      // Export history of actions in a file\n      import: 'custom',\n      // Import history of actions from a file\n      jump: true,\n      // Jump back and forth (time travelling)\n      skip: true,\n      // Skip (cancel) actions\n      reorder: true,\n      // Drag and drop actions in the history list\n      dispatch: true,\n      // Dispatch custom actions or action creators\n      test: true // Generate tests for the selected actions\n    },\n    connectInZone: false\n  };\n  const options = typeof optionsInput === 'function' ? optionsInput() : optionsInput;\n  const logOnly = options.logOnly ? {\n    pause: true,\n    export: true,\n    test: true\n  } : false;\n  const features = options.features || logOnly || DEFAULT_OPTIONS.features;\n  if (features.import === true) {\n    features.import = 'custom';\n  }\n  const config = Object.assign({}, DEFAULT_OPTIONS, {\n    features\n  }, options);\n  if (config.maxAge && config.maxAge < 2) {\n    throw new Error(`Devtools 'maxAge' cannot be less than 2, got ${config.maxAge}`);\n  }\n  return config;\n}\nfunction difference(first, second) {\n  return first.filter(item => second.indexOf(item) < 0);\n}\n/**\n * Provides an app's view into the state of the lifted store.\n */\nfunction unliftState(liftedState) {\n  const {\n    computedStates,\n    currentStateIndex\n  } = liftedState;\n  // At start up NgRx dispatches init actions,\n  // When these init actions are being filtered out by the predicate or safe/block list options\n  // we don't have a complete computed states yet.\n  // At this point it could happen that we're out of bounds, when this happens we fall back to the last known state\n  if (currentStateIndex >= computedStates.length) {\n    const {\n      state\n    } = computedStates[computedStates.length - 1];\n    return state;\n  }\n  const {\n    state\n  } = computedStates[currentStateIndex];\n  return state;\n}\nfunction unliftAction(liftedState) {\n  return liftedState.actionsById[liftedState.nextActionId - 1];\n}\n/**\n * Lifts an app's action into an action on the lifted store.\n */\nfunction liftAction(action) {\n  return new PerformAction(action, +Date.now());\n}\n/**\n * Sanitizes given actions with given function.\n */\nfunction sanitizeActions(actionSanitizer, actions) {\n  return Object.keys(actions).reduce((sanitizedActions, actionIdx) => {\n    const idx = Number(actionIdx);\n    sanitizedActions[idx] = sanitizeAction(actionSanitizer, actions[idx], idx);\n    return sanitizedActions;\n  }, {});\n}\n/**\n * Sanitizes given action with given function.\n */\nfunction sanitizeAction(actionSanitizer, action, actionIdx) {\n  return {\n    ...action,\n    action: actionSanitizer(action.action, actionIdx)\n  };\n}\n/**\n * Sanitizes given states with given function.\n */\nfunction sanitizeStates(stateSanitizer, states) {\n  return states.map((computedState, idx) => ({\n    state: sanitizeState(stateSanitizer, computedState.state, idx),\n    error: computedState.error\n  }));\n}\n/**\n * Sanitizes given state with given function.\n */\nfunction sanitizeState(stateSanitizer, state, stateIdx) {\n  return stateSanitizer(state, stateIdx);\n}\n/**\n * Read the config and tell if actions should be filtered\n */\nfunction shouldFilterActions(config) {\n  return config.predicate || config.actionsSafelist || config.actionsBlocklist;\n}\n/**\n * Return a full filtered lifted state\n */\nfunction filterLiftedState(liftedState, predicate, safelist, blocklist) {\n  const filteredStagedActionIds = [];\n  const filteredActionsById = {};\n  const filteredComputedStates = [];\n  liftedState.stagedActionIds.forEach((id, idx) => {\n    const liftedAction = liftedState.actionsById[id];\n    if (!liftedAction) return;\n    if (idx && isActionFiltered(liftedState.computedStates[idx], liftedAction, predicate, safelist, blocklist)) {\n      return;\n    }\n    filteredActionsById[id] = liftedAction;\n    filteredStagedActionIds.push(id);\n    filteredComputedStates.push(liftedState.computedStates[idx]);\n  });\n  return {\n    ...liftedState,\n    stagedActionIds: filteredStagedActionIds,\n    actionsById: filteredActionsById,\n    computedStates: filteredComputedStates\n  };\n}\n/**\n * Return true is the action should be ignored\n */\nfunction isActionFiltered(state, action, predicate, safelist, blockedlist) {\n  const predicateMatch = predicate && !predicate(state, action.action);\n  const safelistMatch = safelist && !action.action.type.match(safelist.map(s => escapeRegExp(s)).join('|'));\n  const blocklistMatch = blockedlist && action.action.type.match(blockedlist.map(s => escapeRegExp(s)).join('|'));\n  return predicateMatch || safelistMatch || blocklistMatch;\n}\n/**\n * Return string with escaped RegExp special characters\n * https://stackoverflow.com/a/6969486/1337347\n */\nfunction escapeRegExp(s) {\n  return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nfunction injectZoneConfig(connectInZone) {\n  const ngZone = connectInZone ? inject(NgZone) : null;\n  return {\n    ngZone,\n    connectInZone\n  };\n}\nclass DevtoolsDispatcher extends ActionsSubject {\n  /** @nocollapse */static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵDevtoolsDispatcher_BaseFactory;\n      return function DevtoolsDispatcher_Factory(__ngFactoryType__) {\n        return (ɵDevtoolsDispatcher_BaseFactory || (ɵDevtoolsDispatcher_BaseFactory = i0.ɵɵgetInheritedFactory(DevtoolsDispatcher)))(__ngFactoryType__ || DevtoolsDispatcher);\n      };\n    })();\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DevtoolsDispatcher,\n      factory: DevtoolsDispatcher.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DevtoolsDispatcher, [{\n    type: Injectable\n  }], null, null);\n})();\nconst ExtensionActionTypes = {\n  START: 'START',\n  DISPATCH: 'DISPATCH',\n  STOP: 'STOP',\n  ACTION: 'ACTION'\n};\nconst REDUX_DEVTOOLS_EXTENSION = new InjectionToken('@ngrx/store-devtools Redux Devtools Extension');\nclass DevtoolsExtension {\n  constructor(devtoolsExtension, config, dispatcher) {\n    this.config = config;\n    this.dispatcher = dispatcher;\n    this.zoneConfig = injectZoneConfig(this.config.connectInZone);\n    this.devtoolsExtension = devtoolsExtension;\n    this.createActionStreams();\n  }\n  notify(action, state) {\n    if (!this.devtoolsExtension) {\n      return;\n    }\n    // Check to see if the action requires a full update of the liftedState.\n    // If it is a simple action generated by the user's app and the recording\n    // is not locked/paused, only send the action and the current state (fast).\n    //\n    // A full liftedState update (slow: serializes the entire liftedState) is\n    // only required when:\n    //   a) redux-devtools-extension fires the @@Init action (ignored by\n    //      @ngrx/store-devtools)\n    //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n    //      or @ngrx/store/update-reducers)\n    //   c) the state has been recomputed due to time-traveling\n    //   d) any action that is not a PerformAction to err on the side of\n    //      caution.\n    if (action.type === PERFORM_ACTION) {\n      if (state.isLocked || state.isPaused) {\n        return;\n      }\n      const currentState = unliftState(state);\n      if (shouldFilterActions(this.config) && isActionFiltered(currentState, action, this.config.predicate, this.config.actionsSafelist, this.config.actionsBlocklist)) {\n        return;\n      }\n      const sanitizedState = this.config.stateSanitizer ? sanitizeState(this.config.stateSanitizer, currentState, state.currentStateIndex) : currentState;\n      const sanitizedAction = this.config.actionSanitizer ? sanitizeAction(this.config.actionSanitizer, action, state.nextActionId) : action;\n      this.sendToReduxDevtools(() => this.extensionConnection.send(sanitizedAction, sanitizedState));\n    } else {\n      // Requires full state update\n      const sanitizedLiftedState = {\n        ...state,\n        stagedActionIds: state.stagedActionIds,\n        actionsById: this.config.actionSanitizer ? sanitizeActions(this.config.actionSanitizer, state.actionsById) : state.actionsById,\n        computedStates: this.config.stateSanitizer ? sanitizeStates(this.config.stateSanitizer, state.computedStates) : state.computedStates\n      };\n      this.sendToReduxDevtools(() => this.devtoolsExtension.send(null, sanitizedLiftedState, this.getExtensionConfig(this.config)));\n    }\n  }\n  createChangesObservable() {\n    if (!this.devtoolsExtension) {\n      return EMPTY;\n    }\n    return new Observable(subscriber => {\n      const connection = this.zoneConfig.connectInZone ?\n      // To reduce change detection cycles, we need to run the `connect` method\n      // outside of the Angular zone. The `connect` method adds a `message`\n      // event listener to communicate with an extension using `window.postMessage`\n      // and handle message events.\n      this.zoneConfig.ngZone.runOutsideAngular(() => this.devtoolsExtension.connect(this.getExtensionConfig(this.config))) : this.devtoolsExtension.connect(this.getExtensionConfig(this.config));\n      this.extensionConnection = connection;\n      connection.init();\n      connection.subscribe(change => subscriber.next(change));\n      return connection.unsubscribe;\n    });\n  }\n  createActionStreams() {\n    // Listens to all changes\n    const changes$ = this.createChangesObservable().pipe(share());\n    // Listen for the start action\n    const start$ = changes$.pipe(filter(change => change.type === ExtensionActionTypes.START));\n    // Listen for the stop action\n    const stop$ = changes$.pipe(filter(change => change.type === ExtensionActionTypes.STOP));\n    // Listen for lifted actions\n    const liftedActions$ = changes$.pipe(filter(change => change.type === ExtensionActionTypes.DISPATCH), map(change => this.unwrapAction(change.payload)), concatMap(action => {\n      if (action.type === IMPORT_STATE) {\n        // State imports may happen in two situations:\n        // 1. Explicitly by user\n        // 2. User activated the \"persist state accross reloads\" option\n        //    and now the state is imported during reload.\n        // Because of option 2, we need to give possible\n        // lazy loaded reducers time to instantiate.\n        // As soon as there is no UPDATE action within 1 second,\n        // it is assumed that all reducers are loaded.\n        return this.dispatcher.pipe(filter(action => action.type === UPDATE), timeout(1000), debounceTime(1000), map(() => action), catchError(() => of(action)), take(1));\n      } else {\n        return of(action);\n      }\n    }));\n    // Listen for unlifted actions\n    const actions$ = changes$.pipe(filter(change => change.type === ExtensionActionTypes.ACTION), map(change => this.unwrapAction(change.payload)));\n    const actionsUntilStop$ = actions$.pipe(takeUntil(stop$));\n    const liftedUntilStop$ = liftedActions$.pipe(takeUntil(stop$));\n    this.start$ = start$.pipe(takeUntil(stop$));\n    // Only take the action sources between the start/stop events\n    this.actions$ = this.start$.pipe(switchMap(() => actionsUntilStop$));\n    this.liftedActions$ = this.start$.pipe(switchMap(() => liftedUntilStop$));\n  }\n  unwrapAction(action) {\n    // indirect eval according to https://esbuild.github.io/content-types/#direct-eval\n    return typeof action === 'string' ? (0, eval)(`(${action})`) : action;\n  }\n  getExtensionConfig(config) {\n    const extensionOptions = {\n      name: config.name,\n      features: config.features,\n      serialize: config.serialize,\n      autoPause: config.autoPause ?? false,\n      trace: config.trace ?? false,\n      traceLimit: config.traceLimit ?? 75\n      // The action/state sanitizers are not added to the config\n      // because sanitation is done in this class already.\n      // It is done before sending it to the devtools extension for consistency:\n      // - If we call extensionConnection.send(...),\n      //   the extension would call the sanitizers.\n      // - If we call devtoolsExtension.send(...) (aka full state update),\n      //   the extension would NOT call the sanitizers, so we have to do it ourselves.\n    };\n    if (config.maxAge !== false /* support === 0 */) {\n      extensionOptions.maxAge = config.maxAge;\n    }\n    return extensionOptions;\n  }\n  sendToReduxDevtools(send) {\n    try {\n      send();\n    } catch (err) {\n      console.warn('@ngrx/store-devtools: something went wrong inside the redux devtools', err);\n    }\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function DevtoolsExtension_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DevtoolsExtension)(i0.ɵɵinject(REDUX_DEVTOOLS_EXTENSION), i0.ɵɵinject(STORE_DEVTOOLS_CONFIG), i0.ɵɵinject(DevtoolsDispatcher));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DevtoolsExtension,\n      factory: DevtoolsExtension.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DevtoolsExtension, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [REDUX_DEVTOOLS_EXTENSION]\n    }]\n  }, {\n    type: StoreDevtoolsConfig,\n    decorators: [{\n      type: Inject,\n      args: [STORE_DEVTOOLS_CONFIG]\n    }]\n  }, {\n    type: DevtoolsDispatcher\n  }], null);\n})();\nconst INIT_ACTION = {\n  type: INIT\n};\nconst RECOMPUTE = '@ngrx/store-devtools/recompute';\nconst RECOMPUTE_ACTION = {\n  type: RECOMPUTE\n};\n/**\n * Computes the next entry in the log by applying an action.\n */\nfunction computeNextEntry(reducer, action, state, error, errorHandler) {\n  if (error) {\n    return {\n      state,\n      error: 'Interrupted by an error up the chain'\n    };\n  }\n  let nextState = state;\n  let nextError;\n  try {\n    nextState = reducer(state, action);\n  } catch (err) {\n    nextError = err.toString();\n    errorHandler.handleError(err);\n  }\n  return {\n    state: nextState,\n    error: nextError\n  };\n}\n/**\n * Runs the reducer on invalidated actions to get a fresh computation log.\n */\nfunction recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused) {\n  // Optimization: exit early and return the same reference\n  // if we know nothing could have changed.\n  if (minInvalidatedStateIndex >= computedStates.length && computedStates.length === stagedActionIds.length) {\n    return computedStates;\n  }\n  const nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n  // If the recording is paused, recompute all states up until the pause state,\n  // else recompute all states.\n  const lastIncludedActionId = stagedActionIds.length - (isPaused ? 1 : 0);\n  for (let i = minInvalidatedStateIndex; i < lastIncludedActionId; i++) {\n    const actionId = stagedActionIds[i];\n    const action = actionsById[actionId].action;\n    const previousEntry = nextComputedStates[i - 1];\n    const previousState = previousEntry ? previousEntry.state : committedState;\n    const previousError = previousEntry ? previousEntry.error : undefined;\n    const shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n    const entry = shouldSkip ? previousEntry : computeNextEntry(reducer, action, previousState, previousError, errorHandler);\n    nextComputedStates.push(entry);\n  }\n  // If the recording is paused, the last state will not be recomputed,\n  // because it's essentially not part of the state history.\n  if (isPaused) {\n    nextComputedStates.push(computedStates[computedStates.length - 1]);\n  }\n  return nextComputedStates;\n}\nfunction liftInitialState(initialCommittedState, monitorReducer) {\n  return {\n    monitorState: monitorReducer(undefined, {}),\n    nextActionId: 1,\n    actionsById: {\n      0: liftAction(INIT_ACTION)\n    },\n    stagedActionIds: [0],\n    skippedActionIds: [],\n    committedState: initialCommittedState,\n    currentStateIndex: 0,\n    computedStates: [],\n    isLocked: false,\n    isPaused: false\n  };\n}\n/**\n * Creates a history state reducer from an app's reducer.\n */\nfunction liftReducerWith(initialCommittedState, initialLiftedState, errorHandler, monitorReducer, options = {}) {\n  /**\n   * Manages how the history actions modify the history state.\n   */\n  return reducer => (liftedState, liftedAction) => {\n    let {\n      monitorState,\n      actionsById,\n      nextActionId,\n      stagedActionIds,\n      skippedActionIds,\n      committedState,\n      currentStateIndex,\n      computedStates,\n      isLocked,\n      isPaused\n    } = liftedState || initialLiftedState;\n    if (!liftedState) {\n      // Prevent mutating initialLiftedState\n      actionsById = Object.create(actionsById);\n    }\n    function commitExcessActions(n) {\n      // Auto-commits n-number of excess actions.\n      let excess = n;\n      let idsToDelete = stagedActionIds.slice(1, excess + 1);\n      for (let i = 0; i < idsToDelete.length; i++) {\n        if (computedStates[i + 1].error) {\n          // Stop if error is found. Commit actions up to error.\n          excess = i;\n          idsToDelete = stagedActionIds.slice(1, excess + 1);\n          break;\n        } else {\n          delete actionsById[idsToDelete[i]];\n        }\n      }\n      skippedActionIds = skippedActionIds.filter(id => idsToDelete.indexOf(id) === -1);\n      stagedActionIds = [0, ...stagedActionIds.slice(excess + 1)];\n      committedState = computedStates[excess].state;\n      computedStates = computedStates.slice(excess);\n      currentStateIndex = currentStateIndex > excess ? currentStateIndex - excess : 0;\n    }\n    function commitChanges() {\n      // Consider the last committed state the new starting point.\n      // Squash any staged actions into a single committed state.\n      actionsById = {\n        0: liftAction(INIT_ACTION)\n      };\n      nextActionId = 1;\n      stagedActionIds = [0];\n      skippedActionIds = [];\n      committedState = computedStates[currentStateIndex].state;\n      currentStateIndex = 0;\n      computedStates = [];\n    }\n    // By default, aggressively recompute every state whatever happens.\n    // This has O(n) performance, so we'll override this to a sensible\n    // value whenever we feel like we don't have to recompute the states.\n    let minInvalidatedStateIndex = 0;\n    switch (liftedAction.type) {\n      case LOCK_CHANGES:\n        {\n          isLocked = liftedAction.status;\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n      case PAUSE_RECORDING:\n        {\n          isPaused = liftedAction.status;\n          if (isPaused) {\n            // Add a pause action to signal the devtools-user the recording is paused.\n            // The corresponding state will be overwritten on each update to always contain\n            // the latest state (see Actions.PERFORM_ACTION).\n            stagedActionIds = [...stagedActionIds, nextActionId];\n            actionsById[nextActionId] = new PerformAction({\n              type: '@ngrx/devtools/pause'\n            }, +Date.now());\n            nextActionId++;\n            minInvalidatedStateIndex = stagedActionIds.length - 1;\n            computedStates = computedStates.concat(computedStates[computedStates.length - 1]);\n            if (currentStateIndex === stagedActionIds.length - 2) {\n              currentStateIndex++;\n            }\n            minInvalidatedStateIndex = Infinity;\n          } else {\n            commitChanges();\n          }\n          break;\n        }\n      case RESET:\n        {\n          // Get back to the state the store was created with.\n          actionsById = {\n            0: liftAction(INIT_ACTION)\n          };\n          nextActionId = 1;\n          stagedActionIds = [0];\n          skippedActionIds = [];\n          committedState = initialCommittedState;\n          currentStateIndex = 0;\n          computedStates = [];\n          break;\n        }\n      case COMMIT:\n        {\n          commitChanges();\n          break;\n        }\n      case ROLLBACK:\n        {\n          // Forget about any staged actions.\n          // Start again from the last committed state.\n          actionsById = {\n            0: liftAction(INIT_ACTION)\n          };\n          nextActionId = 1;\n          stagedActionIds = [0];\n          skippedActionIds = [];\n          currentStateIndex = 0;\n          computedStates = [];\n          break;\n        }\n      case TOGGLE_ACTION:\n        {\n          // Toggle whether an action with given ID is skipped.\n          // Being skipped means it is a no-op during the computation.\n          const {\n            id: actionId\n          } = liftedAction;\n          const index = skippedActionIds.indexOf(actionId);\n          if (index === -1) {\n            skippedActionIds = [actionId, ...skippedActionIds];\n          } else {\n            skippedActionIds = skippedActionIds.filter(id => id !== actionId);\n          }\n          // Optimization: we know history before this action hasn't changed\n          minInvalidatedStateIndex = stagedActionIds.indexOf(actionId);\n          break;\n        }\n      case SET_ACTIONS_ACTIVE:\n        {\n          // Toggle whether an action with given ID is skipped.\n          // Being skipped means it is a no-op during the computation.\n          const {\n            start,\n            end,\n            active\n          } = liftedAction;\n          const actionIds = [];\n          for (let i = start; i < end; i++) actionIds.push(i);\n          if (active) {\n            skippedActionIds = difference(skippedActionIds, actionIds);\n          } else {\n            skippedActionIds = [...skippedActionIds, ...actionIds];\n          }\n          // Optimization: we know history before this action hasn't changed\n          minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n          break;\n        }\n      case JUMP_TO_STATE:\n        {\n          // Without recomputing anything, move the pointer that tell us\n          // which state is considered the current one. Useful for sliders.\n          currentStateIndex = liftedAction.index;\n          // Optimization: we know the history has not changed.\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n      case JUMP_TO_ACTION:\n        {\n          // Jumps to a corresponding state to a specific action.\n          // Useful when filtering actions.\n          const index = stagedActionIds.indexOf(liftedAction.actionId);\n          if (index !== -1) currentStateIndex = index;\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n      case SWEEP:\n        {\n          // Forget any actions that are currently being skipped.\n          stagedActionIds = difference(stagedActionIds, skippedActionIds);\n          skippedActionIds = [];\n          currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);\n          break;\n        }\n      case PERFORM_ACTION:\n        {\n          // Ignore action and return state as is if recording is locked\n          if (isLocked) {\n            return liftedState || initialLiftedState;\n          }\n          if (isPaused || liftedState && isActionFiltered(liftedState.computedStates[currentStateIndex], liftedAction, options.predicate, options.actionsSafelist, options.actionsBlocklist)) {\n            // If recording is paused or if the action should be ignored, overwrite the last state\n            // (corresponds to the pause action) and keep everything else as is.\n            // This way, the app gets the new current state while the devtools\n            // do not record another action.\n            const lastState = computedStates[computedStates.length - 1];\n            computedStates = [...computedStates.slice(0, -1), computeNextEntry(reducer, liftedAction.action, lastState.state, lastState.error, errorHandler)];\n            minInvalidatedStateIndex = Infinity;\n            break;\n          }\n          // Auto-commit as new actions come in.\n          if (options.maxAge && stagedActionIds.length === options.maxAge) {\n            commitExcessActions(1);\n          }\n          if (currentStateIndex === stagedActionIds.length - 1) {\n            currentStateIndex++;\n          }\n          const actionId = nextActionId++;\n          // Mutation! This is the hottest path, and we optimize on purpose.\n          // It is safe because we set a new key in a cache dictionary.\n          actionsById[actionId] = liftedAction;\n          stagedActionIds = [...stagedActionIds, actionId];\n          // Optimization: we know that only the new action needs computing.\n          minInvalidatedStateIndex = stagedActionIds.length - 1;\n          break;\n        }\n      case IMPORT_STATE:\n        {\n          // Completely replace everything.\n          ({\n            monitorState,\n            actionsById,\n            nextActionId,\n            stagedActionIds,\n            skippedActionIds,\n            committedState,\n            currentStateIndex,\n            computedStates,\n            isLocked,\n            isPaused\n          } = liftedAction.nextLiftedState);\n          break;\n        }\n      case INIT:\n        {\n          // Always recompute states on hot reload and init.\n          minInvalidatedStateIndex = 0;\n          if (options.maxAge && stagedActionIds.length > options.maxAge) {\n            // States must be recomputed before committing excess.\n            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n            commitExcessActions(stagedActionIds.length - options.maxAge);\n            // Avoid double computation.\n            minInvalidatedStateIndex = Infinity;\n          }\n          break;\n        }\n      case UPDATE:\n        {\n          const stateHasErrors = computedStates.filter(state => state.error).length > 0;\n          if (stateHasErrors) {\n            // Recompute all states\n            minInvalidatedStateIndex = 0;\n            if (options.maxAge && stagedActionIds.length > options.maxAge) {\n              // States must be recomputed before committing excess.\n              computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n              commitExcessActions(stagedActionIds.length - options.maxAge);\n              // Avoid double computation.\n              minInvalidatedStateIndex = Infinity;\n            }\n          } else {\n            // If not paused/locked, add a new action to signal devtools-user\n            // that there was a reducer update.\n            if (!isPaused && !isLocked) {\n              if (currentStateIndex === stagedActionIds.length - 1) {\n                currentStateIndex++;\n              }\n              // Add a new action to only recompute state\n              const actionId = nextActionId++;\n              actionsById[actionId] = new PerformAction(liftedAction, +Date.now());\n              stagedActionIds = [...stagedActionIds, actionId];\n              minInvalidatedStateIndex = stagedActionIds.length - 1;\n              computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n            }\n            // Recompute state history with latest reducer and update action\n            computedStates = computedStates.map(cmp => ({\n              ...cmp,\n              state: reducer(cmp.state, RECOMPUTE_ACTION)\n            }));\n            currentStateIndex = stagedActionIds.length - 1;\n            if (options.maxAge && stagedActionIds.length > options.maxAge) {\n              commitExcessActions(stagedActionIds.length - options.maxAge);\n            }\n            // Avoid double computation.\n            minInvalidatedStateIndex = Infinity;\n          }\n          break;\n        }\n      default:\n        {\n          // If the action is not recognized, it's a monitor action.\n          // Optimization: a monitor action can't change history.\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n    }\n    computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n    monitorState = monitorReducer(monitorState, liftedAction);\n    return {\n      monitorState,\n      actionsById,\n      nextActionId,\n      stagedActionIds,\n      skippedActionIds,\n      committedState,\n      currentStateIndex,\n      computedStates,\n      isLocked,\n      isPaused\n    };\n  };\n}\nclass StoreDevtools {\n  constructor(dispatcher, actions$, reducers$, extension, scannedActions, errorHandler, initialState, config) {\n    const liftedInitialState = liftInitialState(initialState, config.monitor);\n    const liftReducer = liftReducerWith(initialState, liftedInitialState, errorHandler, config.monitor, config);\n    const liftedAction$ = merge(merge(actions$.asObservable().pipe(skip(1)), extension.actions$).pipe(map(liftAction)), dispatcher, extension.liftedActions$).pipe(observeOn(queueScheduler));\n    const liftedReducer$ = reducers$.pipe(map(liftReducer));\n    const zoneConfig = injectZoneConfig(config.connectInZone);\n    const liftedStateSubject = new ReplaySubject(1);\n    this.liftedStateSubscription = liftedAction$.pipe(withLatestFrom(liftedReducer$),\n    // The extension would post messages back outside of the Angular zone\n    // because we call `connect()` wrapped with `runOutsideAngular`. We run change\n    // detection only once at the end after all the required asynchronous tasks have\n    // been processed (for instance, `setInterval` scheduled by the `timeout` operator).\n    // We have to re-enter the Angular zone before the `scan` since it runs the reducer\n    // which must be run within the Angular zone.\n    emitInZone(zoneConfig), scan(({\n      state: liftedState\n    }, [action, reducer]) => {\n      let reducedLiftedState = reducer(liftedState, action);\n      // On full state update\n      // If we have actions filters, we must filter completely our lifted state to be sync with the extension\n      if (action.type !== PERFORM_ACTION && shouldFilterActions(config)) {\n        reducedLiftedState = filterLiftedState(reducedLiftedState, config.predicate, config.actionsSafelist, config.actionsBlocklist);\n      }\n      // Extension should be sent the sanitized lifted state\n      extension.notify(action, reducedLiftedState);\n      return {\n        state: reducedLiftedState,\n        action\n      };\n    }, {\n      state: liftedInitialState,\n      action: null\n    })).subscribe(({\n      state,\n      action\n    }) => {\n      liftedStateSubject.next(state);\n      if (action.type === PERFORM_ACTION) {\n        const unliftedAction = action.action;\n        scannedActions.next(unliftedAction);\n      }\n    });\n    this.extensionStartSubscription = extension.start$.pipe(emitInZone(zoneConfig)).subscribe(() => {\n      this.refresh();\n    });\n    const liftedState$ = liftedStateSubject.asObservable();\n    const state$ = liftedState$.pipe(map(unliftState));\n    Object.defineProperty(state$, 'state', {\n      value: toSignal(state$, {\n        manualCleanup: true,\n        requireSync: true\n      })\n    });\n    this.dispatcher = dispatcher;\n    this.liftedState = liftedState$;\n    this.state = state$;\n  }\n  ngOnDestroy() {\n    // Even though the store devtools plugin is recommended to be\n    // used only in development mode, it can still cause a memory leak\n    // in microfrontend applications that are being created and destroyed\n    // multiple times during development. This results in excessive memory\n    // consumption, as it prevents entire apps from being garbage collected.\n    this.liftedStateSubscription.unsubscribe();\n    this.extensionStartSubscription.unsubscribe();\n  }\n  dispatch(action) {\n    this.dispatcher.next(action);\n  }\n  next(action) {\n    this.dispatcher.next(action);\n  }\n  error(error) {}\n  complete() {}\n  performAction(action) {\n    this.dispatch(new PerformAction(action, +Date.now()));\n  }\n  refresh() {\n    this.dispatch(new Refresh());\n  }\n  reset() {\n    this.dispatch(new Reset(+Date.now()));\n  }\n  rollback() {\n    this.dispatch(new Rollback(+Date.now()));\n  }\n  commit() {\n    this.dispatch(new Commit(+Date.now()));\n  }\n  sweep() {\n    this.dispatch(new Sweep());\n  }\n  toggleAction(id) {\n    this.dispatch(new ToggleAction(id));\n  }\n  jumpToAction(actionId) {\n    this.dispatch(new JumpToAction(actionId));\n  }\n  jumpToState(index) {\n    this.dispatch(new JumpToState(index));\n  }\n  importState(nextLiftedState) {\n    this.dispatch(new ImportState(nextLiftedState));\n  }\n  lockChanges(status) {\n    this.dispatch(new LockChanges(status));\n  }\n  pauseRecording(status) {\n    this.dispatch(new PauseRecording(status));\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function StoreDevtools_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || StoreDevtools)(i0.ɵɵinject(DevtoolsDispatcher), i0.ɵɵinject(i2.ActionsSubject), i0.ɵɵinject(i2.ReducerObservable), i0.ɵɵinject(DevtoolsExtension), i0.ɵɵinject(i2.ScannedActionsSubject), i0.ɵɵinject(i0.ErrorHandler), i0.ɵɵinject(INITIAL_STATE), i0.ɵɵinject(STORE_DEVTOOLS_CONFIG));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: StoreDevtools,\n      factory: StoreDevtools.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreDevtools, [{\n    type: Injectable\n  }], () => [{\n    type: DevtoolsDispatcher\n  }, {\n    type: i2.ActionsSubject\n  }, {\n    type: i2.ReducerObservable\n  }, {\n    type: DevtoolsExtension\n  }, {\n    type: i2.ScannedActionsSubject\n  }, {\n    type: i0.ErrorHandler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [INITIAL_STATE]\n    }]\n  }, {\n    type: StoreDevtoolsConfig,\n    decorators: [{\n      type: Inject,\n      args: [STORE_DEVTOOLS_CONFIG]\n    }]\n  }], null);\n})();\n/**\n * If the devtools extension is connected out of the Angular zone,\n * this operator will emit all events within the zone.\n */\nfunction emitInZone({\n  ngZone,\n  connectInZone\n}) {\n  return source => connectInZone ? new Observable(subscriber => source.subscribe({\n    next: value => ngZone.run(() => subscriber.next(value)),\n    error: error => ngZone.run(() => subscriber.error(error)),\n    complete: () => ngZone.run(() => subscriber.complete())\n  })) : source;\n}\nconst IS_EXTENSION_OR_MONITOR_PRESENT = new InjectionToken('@ngrx/store-devtools Is Devtools Extension or Monitor Present');\nfunction createIsExtensionOrMonitorPresent(extension, config) {\n  return Boolean(extension) || config.monitor !== noMonitor;\n}\nfunction createReduxDevtoolsExtension() {\n  const extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n  if (typeof window === 'object' && typeof window[extensionKey] !== 'undefined') {\n    return window[extensionKey];\n  } else {\n    return null;\n  }\n}\nfunction createStateObservable(devtools) {\n  return devtools.state;\n}\n/**\n * Provides developer tools and instrumentation for `Store`.\n *\n * @usageNotes\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [\n *     provideStoreDevtools({\n *       maxAge: 25,\n *       logOnly: !isDevMode(),\n *     }),\n *   ],\n * });\n * ```\n */\nfunction provideStoreDevtools(options = {}) {\n  return makeEnvironmentProviders([DevtoolsExtension, DevtoolsDispatcher, StoreDevtools, {\n    provide: INITIAL_OPTIONS,\n    useValue: options\n  }, {\n    provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n    deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n    useFactory: createIsExtensionOrMonitorPresent\n  }, {\n    provide: REDUX_DEVTOOLS_EXTENSION,\n    useFactory: createReduxDevtoolsExtension\n  }, {\n    provide: STORE_DEVTOOLS_CONFIG,\n    deps: [INITIAL_OPTIONS],\n    useFactory: createConfig\n  }, {\n    provide: StateObservable,\n    deps: [StoreDevtools],\n    useFactory: createStateObservable\n  }, {\n    provide: ReducerManagerDispatcher,\n    useExisting: DevtoolsDispatcher\n  }]);\n}\nclass StoreDevtoolsModule {\n  static instrument(options = {}) {\n    return {\n      ngModule: StoreDevtoolsModule,\n      providers: [provideStoreDevtools(options)]\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function StoreDevtoolsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || StoreDevtoolsModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: StoreDevtoolsModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreDevtoolsModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INITIAL_OPTIONS, RECOMPUTE, REDUX_DEVTOOLS_EXTENSION, StoreDevtools, StoreDevtoolsConfig, StoreDevtoolsModule, provideStoreDevtools };\n","import { FocusTrapFactory, FocusMonitor, InteractivityChecker } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, EventEmitter, Injector, afterNextRender, Input, Output, ViewChild, ANIMATION_MODULE_TYPE, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, take, startWith, debounceTime } from 'rxjs/operators';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"content\"];\nconst _c2 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c3 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatDrawerContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatDrawerContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatDrawerContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-drawer-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c4 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c5 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nfunction MatSidenavContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatSidenavContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatSidenavContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-sidenav-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c6 = \".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\";\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n  _platform = inject(Platform);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _container = inject(MatDrawerContainer);\n  constructor() {\n    const elementRef = inject(ElementRef);\n    const scrollDispatcher = inject(ScrollDispatcher);\n    const ngZone = inject(NgZone);\n    super(elementRef, scrollDispatcher, ngZone);\n  }\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Determines whether the content element should be hidden from the user. */\n  _shouldBeHidden() {\n    // In some modes the content is pushed based on the width of the opened sidenavs, however on\n    // the server we can't measure the sidenav so the margin is always zero. This can cause the\n    // content to jump around when it's rendered on the server and hydrated on the client. We\n    // avoid it by hiding the content on the initial render and then showing it once the sidenav\n    // has been measured on the client.\n    if (this._platform.isBrowser) {\n      return false;\n    }\n    const {\n      start,\n      end\n    } = this._container;\n    return start != null && start.mode !== 'over' && start.opened || end != null && end.mode !== 'over' && end.opened;\n  }\n  static ɵfac = function MatDrawerContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDrawerContent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawerContent,\n    selectors: [[\"mat-drawer-content\"]],\n    hostAttrs: [1, \"mat-drawer-content\"],\n    hostVars: 6,\n    hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n        i0.ɵɵclassProp(\"mat-drawer-content-hidden\", ctx._shouldBeHidden());\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkScrollable,\n      useExisting: MatDrawerContent\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatDrawerContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right',\n        '[class.mat-drawer-content-hidden]': '_shouldBeHidden()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatDrawerContent\n      }]\n    }]\n  }], () => [], null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n  _elementRef = inject(ElementRef);\n  _focusTrapFactory = inject(FocusTrapFactory);\n  _focusMonitor = inject(FocusMonitor);\n  _platform = inject(Platform);\n  _ngZone = inject(NgZone);\n  _renderer = inject(Renderer2);\n  _interactivityChecker = inject(InteractivityChecker);\n  _doc = inject(DOCUMENT, {\n    optional: true\n  });\n  _container = inject(MAT_DRAWER_CONTAINER, {\n    optional: true\n  });\n  _focusTrap = null;\n  _elementFocusedBeforeDrawerWasOpened = null;\n  _eventCleanups;\n  /** Whether the view of the component has been attached. */\n  _isAttached;\n  /** Anchor node used to restore the drawer to its initial position. */\n  _anchor;\n  /** The side that the drawer is attached to. */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value !== this._position) {\n      // Static inputs in Ivy are set before the element is in the DOM.\n      if (this._isAttached) {\n        this._updatePositionInParent(value);\n      }\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  _position = 'start';\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n  get mode() {\n    return this._mode;\n  }\n  set mode(value) {\n    this._mode = value;\n    this._updateFocusTrapState();\n    this._modeChanged.next();\n  }\n  _mode = 'over';\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n  get disableClose() {\n    return this._disableClose;\n  }\n  set disableClose(value) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  _disableClose = false;\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n   * enabled, focus will be moved into the sidenav in `side` mode as well.\n   * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n   * instead.\n   */\n  get autoFocus() {\n    const value = this._autoFocus;\n    // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n    // because we don't know how the sidenav is being used, but in some cases it still makes\n    // sense to do it. The consumer can explicitly set `autoFocus`.\n    if (value == null) {\n      if (this.mode === 'side') {\n        return 'dialog';\n      } else {\n        return 'first-tabbable';\n      }\n    }\n    return value;\n  }\n  set autoFocus(value) {\n    if (value === 'true' || value === 'false' || value == null) {\n      value = coerceBooleanProperty(value);\n    }\n    this._autoFocus = value;\n  }\n  _autoFocus;\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   */\n  get opened() {\n    return this._opened;\n  }\n  set opened(value) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  _opened = false;\n  /** How the sidenav was opened (keypress, mouse click etc.) */\n  _openedVia;\n  /** Emits whenever the drawer has started animating. */\n  _animationStarted = new Subject();\n  /** Emits whenever the drawer is done animating. */\n  _animationEnd = new Subject();\n  /** Event emitted when the drawer open state is changed. */\n  openedChange =\n  // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n  new EventEmitter(/* isAsync */true);\n  /** Event emitted when the drawer has been opened. */\n  _openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n  /** Event emitted when the drawer has started opening. */\n  openedStart = this._animationStarted.pipe(filter(() => this.opened), mapTo(undefined));\n  /** Event emitted when the drawer has been closed. */\n  _closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n  /** Event emitted when the drawer has started closing. */\n  closedStart = this._animationStarted.pipe(filter(() => !this.opened), mapTo(undefined));\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Event emitted when the drawer's position changes. */\n  // tslint:disable-next-line:no-output-on-prefix\n  onPositionChanged = new EventEmitter();\n  /** Reference to the inner element that contains all the content. */\n  _content;\n  /**\n   * An observable that emits when the drawer mode changes. This is used by the drawer container to\n   * to know when to when the mode changes so it can adapt the margins on the content.\n   */\n  _modeChanged = new Subject();\n  _injector = inject(Injector);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  constructor() {\n    this.openedChange.pipe(takeUntil(this._destroyed)).subscribe(opened => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n        }\n        this._takeFocus();\n      } else if (this._isFocusWithinDrawer()) {\n        this._restoreFocus(this._openedVia || 'program');\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n    this._ngZone.runOutsideAngular(() => {\n      const element = this._elementRef.nativeElement;\n      fromEvent(element, 'keydown').pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n        this.close();\n        event.stopPropagation();\n        event.preventDefault();\n      }));\n      this._eventCleanups = [this._renderer.listen(element, 'transitionrun', this._handleTransitionEvent), this._renderer.listen(element, 'transitionend', this._handleTransitionEvent), this._renderer.listen(element, 'transitioncancel', this._handleTransitionEvent)];\n    });\n    this._animationEnd.subscribe(() => {\n      this.openedChange.emit(this._opened);\n    });\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          cleanupBlur();\n          cleanupMousedown();\n          element.removeAttribute('tabindex');\n        };\n        const cleanupBlur = this._renderer.listen(element, 'blur', callback);\n        const cleanupMousedown = this._renderer.listen(element, 'mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves focus into the drawer. Note that this works even if\n   * the focus trap is disabled in `side` mode.\n   */\n  _takeFocus() {\n    if (!this._focusTrap) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    // When autoFocus is not on the sidenav, if the element cannot be focused or does\n    // not exist, focus the sidenav itself so the keyboard navigation still works.\n    // We need to check that `focus` is a function due to Universal.\n    switch (this.autoFocus) {\n      case false:\n      case 'dialog':\n        return;\n      case true:\n      case 'first-tabbable':\n        afterNextRender(() => {\n          const hasMovedFocus = this._focusTrap.focusInitialElement();\n          if (!hasMovedFocus && typeof element.focus === 'function') {\n            element.focus();\n          }\n        }, {\n          injector: this._injector\n        });\n        break;\n      case 'first-heading':\n        this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n        break;\n      default:\n        this._focusByCssSelector(this.autoFocus);\n        break;\n    }\n  }\n  /**\n   * Restores focus to the element that was originally focused when the drawer opened.\n   * If no element was focused at that time, the focus will be restored to the drawer.\n   */\n  _restoreFocus(focusOrigin) {\n    if (this.autoFocus === 'dialog') {\n      return;\n    }\n    if (this._elementFocusedBeforeDrawerWasOpened) {\n      this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n    } else {\n      this._elementRef.nativeElement.blur();\n    }\n    this._elementFocusedBeforeDrawerWasOpened = null;\n  }\n  /** Whether focus is currently within the drawer. */\n  _isFocusWithinDrawer() {\n    const activeEl = this._doc.activeElement;\n    return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n  }\n  ngAfterViewInit() {\n    this._isAttached = true;\n    // Only update the DOM position when the sidenav is positioned at\n    // the end since we project the sidenav before the content by default.\n    if (this._position === 'end') {\n      this._updatePositionInParent('end');\n    }\n    // Needs to happen after the position is updated\n    // so the focus trap anchors are in the right place.\n    if (this._platform.isBrowser) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      this._updateFocusTrapState();\n    }\n  }\n  ngOnDestroy() {\n    this._eventCleanups.forEach(cleanup => cleanup());\n    this._focusTrap?.destroy();\n    this._anchor?.remove();\n    this._anchor = null;\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Open the drawer.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  open(openedVia) {\n    return this.toggle(true, openedVia);\n  }\n  /** Close the drawer. */\n  close() {\n    return this.toggle(false);\n  }\n  /** Closes the drawer with context that the backdrop was clicked. */\n  _closeViaBackdropClick() {\n    // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n    // don't need to check whether focus is currently in the drawer, as clicking on the\n    // backdrop causes blurs the active element.\n    return this._setOpen(/* isOpen */false, /* restoreFocus */true, 'mouse');\n  }\n  /**\n   * Toggle this drawer.\n   * @param isOpen Whether the drawer should be open.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  toggle(isOpen = !this.opened, openedVia) {\n    // If the focus is currently inside the drawer content and we are closing the drawer,\n    // restore the focus to the initially focused element (when the drawer opened).\n    if (isOpen && openedVia) {\n      this._openedVia = openedVia;\n    }\n    const result = this._setOpen(isOpen, /* restoreFocus */!isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n    if (!isOpen) {\n      this._openedVia = null;\n    }\n    return result;\n  }\n  /**\n   * Toggles the opened state of the drawer.\n   * @param isOpen Whether the drawer should open or close.\n   * @param restoreFocus Whether focus should be restored on close.\n   * @param focusOrigin Origin to use when restoring focus.\n   */\n  _setOpen(isOpen, restoreFocus, focusOrigin) {\n    if (isOpen === this._opened) {\n      return Promise.resolve(isOpen ? 'open' : 'close');\n    }\n    this._opened = isOpen;\n    if (this._container?._transitionsEnabled) {\n      // Note: it's importatnt to set this as early as possible,\n      // otherwise the animation can look glitchy in some cases.\n      this._setIsAnimating(true);\n    } else {\n      // Simulate the animation events if animations are disabled.\n      setTimeout(() => {\n        this._animationStarted.next();\n        this._animationEnd.next();\n      });\n    }\n    this._elementRef.nativeElement.classList.toggle('mat-drawer-opened', isOpen);\n    if (!isOpen && restoreFocus) {\n      this._restoreFocus(focusOrigin);\n    }\n    // Needed to ensure that the closing sequence fires off correctly.\n    this._changeDetectorRef.markForCheck();\n    this._updateFocusTrapState();\n    return new Promise(resolve => {\n      this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n    });\n  }\n  /** Toggles whether the drawer is currently animating. */\n  _setIsAnimating(isAnimating) {\n    this._elementRef.nativeElement.classList.toggle('mat-drawer-animating', isAnimating);\n  }\n  _getWidth() {\n    return this._elementRef.nativeElement.offsetWidth || 0;\n  }\n  /** Updates the enabled state of the focus trap. */\n  _updateFocusTrapState() {\n    if (this._focusTrap) {\n      // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n      // sidenav content.\n      this._focusTrap.enabled = !!this._container?.hasBackdrop && this.opened;\n    }\n  }\n  /**\n   * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n   * when it's in the `end` position so that it comes after the content and the visual order\n   * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n   * started off as `end` and was changed to `start`.\n   */\n  _updatePositionInParent(newPosition) {\n    // Don't move the DOM node around on the server, because it can throw off hydration.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    const parent = element.parentNode;\n    if (newPosition === 'end') {\n      if (!this._anchor) {\n        this._anchor = this._doc.createComment('mat-drawer-anchor');\n        parent.insertBefore(this._anchor, element);\n      }\n      parent.appendChild(element);\n    } else if (this._anchor) {\n      this._anchor.parentNode.insertBefore(element, this._anchor);\n    }\n  }\n  /** Event handler for animation events. */\n  _handleTransitionEvent = event => {\n    const element = this._elementRef.nativeElement;\n    if (event.target === element) {\n      this._ngZone.run(() => {\n        if (event.type === 'transitionrun') {\n          this._animationStarted.next(event);\n        } else {\n          // Don't toggle the animating state on `transitioncancel` since another animation should\n          // start afterwards. This prevents the drawer from blinking if an animation is interrupted.\n          if (event.type === 'transitionend') {\n            this._setIsAnimating(false);\n          }\n          this._animationEnd.next(event);\n        }\n      });\n    }\n  };\n  static ɵfac = function MatDrawer_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDrawer)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawer,\n    selectors: [[\"mat-drawer\"]],\n    viewQuery: function MatDrawer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer\"],\n    hostVars: 12,\n    hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"align\", null)(\"tabIndex\", ctx.mode !== \"side\" ? \"-1\" : null);\n        i0.ɵɵstyleProp(\"visibility\", !ctx._container && !ctx.opened ? \"hidden\" : null);\n        i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\");\n      }\n    },\n    inputs: {\n      position: \"position\",\n      mode: \"mode\",\n      disableClose: \"disableClose\",\n      autoFocus: \"autoFocus\",\n      opened: \"opened\"\n    },\n    outputs: {\n      openedChange: \"openedChange\",\n      _openedStream: \"opened\",\n      openedStart: \"openedStart\",\n      _closedStream: \"closed\",\n      closedStart: \"closedStart\",\n      onPositionChanged: \"positionChanged\"\n    },\n    exportAs: [\"matDrawer\"],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n    template: function MatDrawer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CdkScrollable],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      host: {\n        'class': 'mat-drawer',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        // The styles that render the sidenav off-screen come from the drawer container. Prior to #30235\n        // this was also done by the animations module which some internal tests seem to depend on.\n        // Simulate it by toggling the `hidden` attribute instead.\n        '[style.visibility]': '(!_container && !opened) ? \"hidden\" : null',\n        // The sidenav container should not be focused on when used in side mode. See b/286459024 for\n        // reference. Updates tabIndex of drawer/container to default to null if in side mode.\n        '[attr.tabIndex]': '(mode !== \"side\") ? \"-1\" : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [CdkScrollable],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], () => [], {\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    _content: [{\n      type: ViewChild,\n      args: ['content']\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _element = inject(ElementRef);\n  _ngZone = inject(NgZone);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _animationMode = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _transitionsEnabled = false;\n  /** All drawers in the container. Includes drawers from inside nested containers. */\n  _allDrawers;\n  /** Drawers that belong to this container. */\n  _drawers = new QueryList();\n  _content;\n  _userContent;\n  /** The drawer child with the `start` position. */\n  get start() {\n    return this._start;\n  }\n  /** The drawer child with the `end` position. */\n  get end() {\n    return this._end;\n  }\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   */\n  get autosize() {\n    return this._autosize;\n  }\n  set autosize(value) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  _autosize = inject(MAT_DRAWER_DEFAULT_AUTOSIZE);\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   */\n  get hasBackdrop() {\n    return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n  }\n  set hasBackdrop(value) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  _backdropOverride;\n  /** Event emitted when the drawer backdrop is clicked. */\n  backdropClick = new EventEmitter();\n  /** The drawer at the start/end position, independent of direction. */\n  _start;\n  _end;\n  /**\n   * The drawer at the left/right. When direction changes, these will change as well.\n   * They're used as aliases for the above to set the left/right style properly.\n   * In LTR, _left == _start and _right == _end.\n   * In RTL, _left == _end and _right == _start.\n   */\n  _left;\n  _right;\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Emits on every ngDoCheck. Used for debouncing reflows. */\n  _doCheckSubject = new Subject();\n  /**\n   * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n   * drawer is open. We use margin rather than transform even for push mode because transform breaks\n   * fixed position elements inside of the transformed element.\n   */\n  _contentMargins = {\n    left: null,\n    right: null\n  };\n  _contentMarginChanges = new Subject();\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n  get scrollable() {\n    return this._userContent || this._content;\n  }\n  _injector = inject(Injector);\n  constructor() {\n    const platform = inject(Platform);\n    const viewportRuler = inject(ViewportRuler);\n    // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._validateDrawers();\n      this.updateContentMargins();\n    });\n    // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n    viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    if (this._animationMode !== 'NoopAnimations' && platform.isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        // Enable the animations after a delay in order to skip\n        // the initial transition if a drawer is open by default.\n        setTimeout(() => {\n          this._element.nativeElement.classList.add('mat-drawer-transition');\n          this._transitionsEnabled = true;\n        }, 200);\n      });\n    }\n  }\n  ngAfterContentInit() {\n    this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(drawer => {\n      this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n      this._drawers.notifyOnChanges();\n    });\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n      this._drawers.forEach(drawer => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n        this._watchDrawerMode(drawer);\n      });\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n    // Avoid hitting the NgZone through the debounce timeout.\n    this._ngZone.runOutsideAngular(() => {\n      this._doCheckSubject.pipe(debounceTime(10),\n      // Arbitrary debounce time, less than a frame at 60fps\n      takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    });\n  }\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n    this._doCheckSubject.complete();\n    this._drawers.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Calls `open` of both start and end drawers */\n  open() {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n  /** Calls `close` of both start and end drawers */\n  close() {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   */\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    let left = 0;\n    let right = 0;\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._getWidth();\n      } else if (this._left.mode == 'push') {\n        const width = this._left._getWidth();\n        left += width;\n        right -= width;\n      }\n    }\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._getWidth();\n      } else if (this._right.mode == 'push') {\n        const width = this._right._getWidth();\n        right += width;\n        left -= width;\n      }\n    }\n    // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n    left = left || null;\n    right = right || null;\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {\n        left,\n        right\n      };\n      // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   */\n  _watchDrawerToggle(drawer) {\n    drawer._animationStarted.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n    }\n  }\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   */\n  _watchDrawerPosition(drawer) {\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      afterNextRender({\n        read: () => this._validateDrawers()\n      }, {\n        injector: this._injector\n      });\n    });\n  }\n  /** Subscribes to changes in drawer mode so we can run change detection. */\n  _watchDrawerMode(drawer) {\n    drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n  _setContainerClass(isAdd) {\n    const classList = this._element.nativeElement.classList;\n    const className = 'mat-drawer-container-has-open';\n    if (isAdd) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n  /** Validate the state of the drawer children components. */\n  _validateDrawers() {\n    this._start = this._end = null;\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('start');\n        }\n        this._start = drawer;\n      }\n    });\n    this._right = this._left = null;\n    // Detect if we're LTR or RTL.\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n  /** Whether the container is being pushed to the side by one of the drawers. */\n  _isPushed() {\n    return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n  }\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawersViaBackdrop();\n  }\n  _closeModalDrawersViaBackdrop() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer)).forEach(drawer => drawer._closeViaBackdropClick());\n  }\n  _isShowingBackdrop() {\n    return this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start) || this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end);\n  }\n  _isDrawerOpen(drawer) {\n    return drawer != null && drawer.opened;\n  }\n  // Whether argument drawer should have a backdrop when it opens\n  _drawerHasBackdrop(drawer) {\n    if (this._backdropOverride == null) {\n      return !!drawer && drawer.mode !== 'side';\n    }\n    return this._backdropOverride;\n  }\n  static ɵfac = function MatDrawerContainer_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDrawerContainer)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawerContainer,\n    selectors: [[\"mat-drawer-container\"]],\n    contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n      }\n    },\n    viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatDrawerContent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer-container\"],\n    hostVars: 2,\n    hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n      }\n    },\n    inputs: {\n      autosize: \"autosize\",\n      hasBackdrop: \"hasBackdrop\"\n    },\n    outputs: {\n      backdropClick: \"backdropClick\"\n    },\n    exportAs: [\"matDrawerContainer\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DRAWER_CONTAINER,\n      useExisting: MatDrawerContainer\n    }])],\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n    template: function MatDrawerContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵtemplate(0, MatDrawerContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵtemplate(3, MatDrawerContainer_Conditional_3_Template, 2, 0, \"mat-drawer-content\");\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.hasBackdrop ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(!ctx._content ? 3 : -1);\n      }\n    },\n    dependencies: [MatDrawerContent],\n    styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }],\n      imports: [MatDrawerContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], () => [], {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatDrawer, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    backdropClick: [{\n      type: Output\n    }]\n  });\n})();\nclass MatSidenavContent extends MatDrawerContent {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenavContent_BaseFactory;\n    return function MatSidenavContent_Factory(__ngFactoryType__) {\n      return (ɵMatSidenavContent_BaseFactory || (ɵMatSidenavContent_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContent)))(__ngFactoryType__ || MatSidenavContent);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenavContent,\n    selectors: [[\"mat-sidenav-content\"]],\n    hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkScrollable,\n      useExisting: MatSidenavContent\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatSidenavContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatSidenavContent\n      }]\n    }]\n  }], null, null);\n})();\nclass MatSidenav extends MatDrawer {\n  /** Whether the sidenav is fixed in the viewport. */\n  get fixedInViewport() {\n    return this._fixedInViewport;\n  }\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  _fixedInViewport = false;\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   */\n  get fixedTopGap() {\n    return this._fixedTopGap;\n  }\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  _fixedTopGap = 0;\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   */\n  get fixedBottomGap() {\n    return this._fixedBottomGap;\n  }\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n  _fixedBottomGap = 0;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenav_BaseFactory;\n    return function MatSidenav_Factory(__ngFactoryType__) {\n      return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenav)))(__ngFactoryType__ || MatSidenav);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenav,\n    selectors: [[\"mat-sidenav\"]],\n    hostAttrs: [1, \"mat-drawer\", \"mat-sidenav\"],\n    hostVars: 16,\n    hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabIndex\", ctx.mode !== \"side\" ? \"-1\" : null)(\"align\", null);\n        i0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n      }\n    },\n    inputs: {\n      fixedInViewport: \"fixedInViewport\",\n      fixedTopGap: \"fixedTopGap\",\n      fixedBottomGap: \"fixedBottomGap\"\n    },\n    exportAs: [\"matSidenav\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatDrawer,\n      useExisting: MatSidenav\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n    template: function MatSidenav_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CdkScrollable],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        // The sidenav container should not be focused on when used in side mode. See b/286459024 for\n        // reference. Updates tabIndex of drawer/container to default to null if in side mode.\n        '[attr.tabIndex]': '(mode !== \"side\") ? \"-1\" : null',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [CdkScrollable],\n      providers: [{\n        provide: MatDrawer,\n        useExisting: MatSidenav\n      }],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\nclass MatSidenavContainer extends MatDrawerContainer {\n  _allDrawers = undefined;\n  // We need an initializer here to avoid a TS error.\n  _content = undefined;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenavContainer_BaseFactory;\n    return function MatSidenavContainer_Factory(__ngFactoryType__) {\n      return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContainer)))(__ngFactoryType__ || MatSidenavContainer);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenavContainer,\n    selectors: [[\"mat-sidenav-container\"]],\n    contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n    hostVars: 2,\n    hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n      }\n    },\n    exportAs: [\"matSidenavContainer\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DRAWER_CONTAINER,\n      useExisting: MatSidenavContainer\n    }, {\n      provide: MatDrawerContainer,\n      useExisting: MatSidenavContainer\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n    template: function MatSidenavContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵtemplate(0, MatSidenavContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵtemplate(3, MatSidenavContainer_Conditional_3_Template, 2, 0, \"mat-sidenav-content\");\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.hasBackdrop ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(!ctx._content ? 3 : -1);\n      }\n    },\n    dependencies: [MatSidenavContent],\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }, {\n        provide: MatDrawerContainer,\n        useExisting: MatSidenavContainer\n      }],\n      imports: [MatSidenavContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], null, {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatSidenav, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\nclass MatSidenavModule {\n  static ɵfac = function MatSidenavModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSidenavModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatSidenavModule,\n    imports: [MatCommonModule, CdkScrollableModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n    exports: [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, CdkScrollableModule, CdkScrollableModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CdkScrollableModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      exports: [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matDrawerAnimations = {\n  // Represents\n  // trigger('transform', [\n  //   // We remove the `transform` here completely, rather than setting it to zero, because:\n  //   // 1. Having a transform can cause elements with ripples or an animated\n  //   //    transform to shift around in Chrome with an RTL layout (see #10023).\n  //   // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  //   state(\n  //     'open, open-instant',\n  //     style({\n  //       'transform': 'none',\n  //       'visibility': 'visible',\n  //     }),\n  //   ),\n  //   state(\n  //     'void',\n  //     style({\n  //       // Avoids the shadow showing up when closed in SSR.\n  //       'box-shadow': 'none',\n  //       'visibility': 'hidden',\n  //     }),\n  //   ),\n  //   transition('void => open-instant', animate('0ms')),\n  //   transition(\n  //     'void <=> open, open-instant => void',\n  //     animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'),\n  //   ),\n  // ])\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: {\n    type: 7,\n    name: 'transform',\n    definitions: [{\n      type: 0,\n      name: 'open, open-instant',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'none',\n          visibility: 'visible'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'void',\n      styles: {\n        type: 6,\n        styles: {\n          'box-shadow': 'none',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'void => open-instant',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '0ms'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: 'void <=> open, open-instant => void',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)'\n      },\n      options: null\n    }],\n    options: {}\n  }\n};\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i0 from '@angular/core';\nimport { Directive, inject, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, NgModule } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarRow {\n  static ɵfac = function MatToolbarRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatToolbarRow)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatToolbarRow,\n    selectors: [[\"mat-toolbar-row\"]],\n    hostAttrs: [1, \"mat-toolbar-row\"],\n    exportAs: [\"matToolbarRow\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-toolbar-row',\n      exportAs: 'matToolbarRow',\n      host: {\n        'class': 'mat-toolbar-row'\n      }\n    }]\n  }], null, null);\n})();\nclass MatToolbar {\n  _elementRef = inject(ElementRef);\n  _platform = inject(Platform);\n  _document = inject(DOCUMENT);\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\n   * Theme color of the toolbar. This API is supported in M2 themes only, it has\n   * no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/toolbar/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Reference to all toolbar row elements that have been projected. */\n  _toolbarRows;\n  constructor() {}\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._checkToolbarMixedModes();\n      this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n    }\n  }\n  /**\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\n   */\n  _checkToolbarMixedModes() {\n    if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      // Check if there are any other DOM nodes that can display content but aren't inside of\n      // a <mat-toolbar-row> element.\n      const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes).filter(node => !(node.classList && node.classList.contains('mat-toolbar-row'))).filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)).some(node => !!(node.textContent && node.textContent.trim()));\n      if (isCombinedUsage) {\n        throwToolbarMixedModesError();\n      }\n    }\n  }\n  static ɵfac = function MatToolbar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatToolbar)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatToolbar,\n    selectors: [[\"mat-toolbar\"]],\n    contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-toolbar\"],\n    hostVars: 6,\n    hostBindings: function MatToolbar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n        i0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n      }\n    },\n    inputs: {\n      color: \"color\"\n    },\n    exportAs: [\"matToolbar\"],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 0,\n    template: function MatToolbar_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵprojection(0);\n        i0.ɵɵprojection(1, 1);\n      }\n    },\n    styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-sys-surface));color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-sys-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-sys-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-sys-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-sys-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-sys-title-large-tracking));margin:0}@media(forced-colors: active){.mat-toolbar{outline:solid 1px}}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface));--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height, 56px)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height, 56px)}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-toolbar',\n      exportAs: 'matToolbar',\n      host: {\n        'class': 'mat-toolbar',\n        '[class]': 'color ? \"mat-\" + color : \"\"',\n        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-sys-surface));color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-sys-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-sys-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-sys-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-sys-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-sys-title-large-tracking));margin:0}@media(forced-colors: active){.mat-toolbar{outline:solid 1px}}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface));--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height, 56px)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height, 56px)}}\\n\"]\n    }]\n  }], () => [], {\n    color: [{\n      type: Input\n    }],\n    _toolbarRows: [{\n      type: ContentChildren,\n      args: [MatToolbarRow, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' + 'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' + 'inside of a `<mat-toolbar>` for a single row.');\n}\nclass MatToolbarModule {\n  static ɵfac = function MatToolbarModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatToolbarModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatToolbarModule,\n    imports: [MatCommonModule, MatToolbar, MatToolbarRow],\n    exports: [MatToolbar, MatToolbarRow, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatToolbar, MatToolbarRow],\n      exports: [MatToolbar, MatToolbarRow, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, NgZone, Injector, ViewContainerRef, afterNextRender, Directive, Input, ChangeDetectorRef, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, ScrollDispatcher, OverlayModule } from '@angular/cdk/overlay';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { DOCUMENT, NgClass } from '@angular/common';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst _c0 = [\"tooltip\"];\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition({\n      scrollThrottle: SCROLL_THROTTLE_MS\n    });\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition({\n    scrollThrottle: SCROLL_THROTTLE_MS\n  });\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500\n  };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n  providedIn: 'root',\n  factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n  _elementRef = inject(ElementRef);\n  _ngZone = inject(NgZone);\n  _platform = inject(Platform);\n  _ariaDescriber = inject(AriaDescriber);\n  _focusMonitor = inject(FocusMonitor);\n  _dir = inject(Directionality);\n  _injector = inject(Injector);\n  _viewContainerRef = inject(ViewContainerRef);\n  _defaultOptions = inject(MAT_TOOLTIP_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  _overlayRef;\n  _tooltipInstance;\n  _portal;\n  _position = 'below';\n  _positionAtOrigin = false;\n  _disabled = false;\n  _tooltipClass;\n  _viewInitialized = false;\n  _pointerExitEventsInitialized = false;\n  _tooltipComponent = TooltipComponent;\n  _viewportMargin = 8;\n  _currentPosition;\n  _cssClassPrefix = 'mat-mdc';\n  _ariaDescriptionPending;\n  _dirSubscribed = false;\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    if (value !== this._position) {\n      this._position = value;\n      if (this._overlayRef) {\n        this._updatePosition(this._overlayRef);\n        this._tooltipInstance?.show(0);\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n  /**\n   * Whether tooltip should be relative to the click or touch origin\n   * instead of outside the element bounding box.\n   */\n  get positionAtOrigin() {\n    return this._positionAtOrigin;\n  }\n  set positionAtOrigin(value) {\n    this._positionAtOrigin = coerceBooleanProperty(value);\n    this._detach();\n    this._overlayRef = null;\n  }\n  /** Disables the display of the tooltip. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    const isDisabled = coerceBooleanProperty(value);\n    if (this._disabled !== isDisabled) {\n      this._disabled = isDisabled;\n      // If tooltip is disabled, hide immediately.\n      if (isDisabled) {\n        this.hide(0);\n      } else {\n        this._setupPointerEnterEventsIfNeeded();\n      }\n      this._syncAriaDescription(this.message);\n    }\n  }\n  /** The default delay in ms before showing the tooltip after show is called */\n  get showDelay() {\n    return this._showDelay;\n  }\n  set showDelay(value) {\n    this._showDelay = coerceNumberProperty(value);\n  }\n  _showDelay;\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  get hideDelay() {\n    return this._hideDelay;\n  }\n  set hideDelay(value) {\n    this._hideDelay = coerceNumberProperty(value);\n    if (this._tooltipInstance) {\n      this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n    }\n  }\n  _hideDelay;\n  /**\n   * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n   * uses a long press gesture to show and hide, however it can conflict with the native browser\n   * gestures. To work around the conflict, Angular Material disables native gestures on the\n   * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n   * elements). The different values for this option configure the touch event handling as follows:\n   * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n   *   browser gestures on particular elements. In particular, it allows text selection on inputs\n   *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n   * - `on` - Enables touch gestures for all elements and disables native\n   *   browser gestures with no exceptions.\n   * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n   *   showing on touch devices.\n   */\n  touchGestures = 'auto';\n  /** The message to be displayed in the tooltip */\n  get message() {\n    return this._message;\n  }\n  set message(value) {\n    const oldMessage = this._message;\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n    // away the string-conversion: https://github.com/angular/components/issues/20684\n    this._message = value != null ? String(value).trim() : '';\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._setupPointerEnterEventsIfNeeded();\n      this._updateTooltipMessage();\n    }\n    this._syncAriaDescription(oldMessage);\n  }\n  _message = '';\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  get tooltipClass() {\n    return this._tooltipClass;\n  }\n  set tooltipClass(value) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n  /** Manually-bound passive event listeners. */\n  _passiveListeners = [];\n  /** Timer started at the last `touchstart` event. */\n  _touchstartTimeout = null;\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Whether ngOnDestroyed has been called. */\n  _isDestroyed = false;\n  constructor() {\n    const defaultOptions = this._defaultOptions;\n    if (defaultOptions) {\n      this._showDelay = defaultOptions.showDelay;\n      this._hideDelay = defaultOptions.hideDelay;\n      if (defaultOptions.position) {\n        this.position = defaultOptions.position;\n      }\n      if (defaultOptions.positionAtOrigin) {\n        this.positionAtOrigin = defaultOptions.positionAtOrigin;\n      }\n      if (defaultOptions.touchGestures) {\n        this.touchGestures = defaultOptions.touchGestures;\n      }\n      if (defaultOptions.tooltipClass) {\n        this.tooltipClass = defaultOptions.tooltipClass;\n      }\n    }\n    this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n  }\n  ngAfterViewInit() {\n    // This needs to happen after view init so the initial values for all inputs have been set.\n    this._viewInitialized = true;\n    this._setupPointerEnterEventsIfNeeded();\n    this._focusMonitor.monitor(this._elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        this._ngZone.run(() => this.hide(0));\n      } else if (origin === 'keyboard') {\n        this._ngZone.run(() => this.show());\n      }\n    });\n  }\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    const nativeElement = this._elementRef.nativeElement;\n    // Optimization: Do not call clearTimeout unless there is an active timer.\n    if (this._touchstartTimeout) {\n      clearTimeout(this._touchstartTimeout);\n    }\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n    // Clean up the event listeners set in the constructor\n    this._passiveListeners.forEach(([event, listener]) => {\n      nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n    });\n    this._passiveListeners.length = 0;\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._isDestroyed = true;\n    this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n    this._focusMonitor.stopMonitoring(nativeElement);\n  }\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay = this.showDelay, origin) {\n    if (this.disabled || !this.message || this._isTooltipVisible()) {\n      this._tooltipInstance?._cancelPendingAnimations();\n      return;\n    }\n    const overlayRef = this._createOverlay(origin);\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n    const instance = this._tooltipInstance = overlayRef.attach(this._portal).instance;\n    instance._triggerElement = this._elementRef.nativeElement;\n    instance._mouseLeaveHideDelay = this._hideDelay;\n    instance.afterHidden().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    instance.show(delay);\n  }\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay = this.hideDelay) {\n    const instance = this._tooltipInstance;\n    if (instance) {\n      if (instance.isVisible()) {\n        instance.hide(delay);\n      } else {\n        instance._cancelPendingAnimations();\n        this._detach();\n      }\n    }\n  }\n  /** Shows/hides the tooltip */\n  toggle(origin) {\n    this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n  }\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible() {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n  /** Create the overlay config and position strategy */\n  _createOverlay(origin) {\n    if (this._overlayRef) {\n      const existingStrategy = this._overlayRef.getConfig().positionStrategy;\n      if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n        return this._overlayRef;\n      }\n      this._detach();\n    }\n    const scrollableAncestors = this._injector.get(ScrollDispatcher).getAncestorScrollContainers(this._elementRef);\n    const overlay = this._injector.get(Overlay);\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = overlay.position().flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(false).withViewportMargin(this._viewportMargin).withScrollableContainers(scrollableAncestors);\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      this._updateCurrentPositionClass(change.connectionPair);\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n    this._overlayRef = overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n      scrollStrategy: this._injector.get(MAT_TOOLTIP_SCROLL_STRATEGY)()\n    });\n    this._updatePosition(this._overlayRef);\n    this._overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n    this._overlayRef.outsidePointerEvents().pipe(takeUntil(this._destroyed)).subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n    this._overlayRef.keydownEvents().pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._ngZone.run(() => this.hide(0));\n      }\n    });\n    if (this._defaultOptions?.disableTooltipInteractivity) {\n      this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n    }\n    if (!this._dirSubscribed) {\n      this._dirSubscribed = true;\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._overlayRef) {\n          this._updatePosition(this._overlayRef);\n        }\n      });\n    }\n    return this._overlayRef;\n  }\n  /** Detaches the currently-attached tooltip. */\n  _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n    this._tooltipInstance = null;\n  }\n  /** Updates the position of the current tooltip. */\n  _updatePosition(overlayRef) {\n    const position = overlayRef.getConfig().positionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n    position.withPositions([this._addOffset({\n      ...origin.main,\n      ...overlay.main\n    }), this._addOffset({\n      ...origin.fallback,\n      ...overlay.fallback\n    })]);\n  }\n  /** Adds the configured offset to a position. Used as a hook for child classes. */\n  _addOffset(position) {\n    const offset = UNBOUNDED_ANCHOR_GAP;\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    if (position.originY === 'top') {\n      position.offsetY = -offset;\n    } else if (position.originY === 'bottom') {\n      position.offsetY = offset;\n    } else if (position.originX === 'start') {\n      position.offsetX = isLtr ? -offset : offset;\n    } else if (position.originX === 'end') {\n      position.offsetX = isLtr ? offset : -offset;\n    }\n    return position;\n  }\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n   */\n  _getOrigin() {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let originPosition;\n    if (position == 'above' || position == 'below') {\n      originPosition = {\n        originX: 'center',\n        originY: position == 'above' ? 'top' : 'bottom'\n      };\n    } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n      originPosition = {\n        originX: 'start',\n        originY: 'center'\n      };\n    } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n      originPosition = {\n        originX: 'end',\n        originY: 'center'\n      };\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n    const {\n      x,\n      y\n    } = this._invertPosition(originPosition.originX, originPosition.originY);\n    return {\n      main: originPosition,\n      fallback: {\n        originX: x,\n        originY: y\n      }\n    };\n  }\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition() {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let overlayPosition;\n    if (position == 'above') {\n      overlayPosition = {\n        overlayX: 'center',\n        overlayY: 'bottom'\n      };\n    } else if (position == 'below') {\n      overlayPosition = {\n        overlayX: 'center',\n        overlayY: 'top'\n      };\n    } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n      overlayPosition = {\n        overlayX: 'end',\n        overlayY: 'center'\n      };\n    } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n      overlayPosition = {\n        overlayX: 'start',\n        overlayY: 'center'\n      };\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n    const {\n      x,\n      y\n    } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n    return {\n      main: overlayPosition,\n      fallback: {\n        overlayX: x,\n        overlayY: y\n      }\n    };\n  }\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n      afterNextRender(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef.updatePosition();\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n  }\n  /** Updates the tooltip class */\n  _setTooltipClass(tooltipClass) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n  /** Inverts an overlay position. */\n  _invertPosition(x, y) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Updates the class on the overlay panel based on the current position of the tooltip. */\n  _updateCurrentPositionClass(connectionPair) {\n    const {\n      overlayY,\n      originX,\n      originY\n    } = connectionPair;\n    let newPosition;\n    // If the overlay is in the middle along the Y axis,\n    // it means that it's either before or after.\n    if (overlayY === 'center') {\n      // Note that since this information is used for styling, we want to\n      // resolve `start` and `end` to their real values, otherwise consumers\n      // would have to remember to do it themselves on each consumption.\n      if (this._dir && this._dir.value === 'rtl') {\n        newPosition = originX === 'end' ? 'left' : 'right';\n      } else {\n        newPosition = originX === 'start' ? 'left' : 'right';\n      }\n    } else {\n      newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n    }\n    if (newPosition !== this._currentPosition) {\n      const overlayRef = this._overlayRef;\n      if (overlayRef) {\n        const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n        overlayRef.removePanelClass(classPrefix + this._currentPosition);\n        overlayRef.addPanelClass(classPrefix + newPosition);\n      }\n      this._currentPosition = newPosition;\n    }\n  }\n  /** Binds the pointer events to the tooltip trigger. */\n  _setupPointerEnterEventsIfNeeded() {\n    // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n    if (this._disabled || !this.message || !this._viewInitialized || this._passiveListeners.length) {\n      return;\n    }\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (this._platformSupportsMouseEvents()) {\n      this._passiveListeners.push(['mouseenter', event => {\n        this._setupPointerExitEventsIfNeeded();\n        let point = undefined;\n        if (event.x !== undefined && event.y !== undefined) {\n          point = event;\n        }\n        this.show(undefined, point);\n      }]);\n    } else if (this.touchGestures !== 'off') {\n      this._disableNativeGesturesIfNecessary();\n      this._passiveListeners.push(['touchstart', event => {\n        const touch = event.targetTouches?.[0];\n        const origin = touch ? {\n          x: touch.clientX,\n          y: touch.clientY\n        } : undefined;\n        // Note that it's important that we don't `preventDefault` here,\n        // because it can prevent click events from firing on the element.\n        this._setupPointerExitEventsIfNeeded();\n        if (this._touchstartTimeout) {\n          clearTimeout(this._touchstartTimeout);\n        }\n        const DEFAULT_LONGPRESS_DELAY = 500;\n        this._touchstartTimeout = setTimeout(() => {\n          this._touchstartTimeout = null;\n          this.show(undefined, origin);\n        }, this._defaultOptions?.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n      }]);\n    }\n    this._addListeners(this._passiveListeners);\n  }\n  _setupPointerExitEventsIfNeeded() {\n    if (this._pointerExitEventsInitialized) {\n      return;\n    }\n    this._pointerExitEventsInitialized = true;\n    const exitListeners = [];\n    if (this._platformSupportsMouseEvents()) {\n      exitListeners.push(['mouseleave', event => {\n        const newTarget = event.relatedTarget;\n        if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n          this.hide();\n        }\n      }], ['wheel', event => this._wheelListener(event)]);\n    } else if (this.touchGestures !== 'off') {\n      this._disableNativeGesturesIfNecessary();\n      const touchendListener = () => {\n        if (this._touchstartTimeout) {\n          clearTimeout(this._touchstartTimeout);\n        }\n        this.hide(this._defaultOptions?.touchendHideDelay);\n      };\n      exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n    }\n    this._addListeners(exitListeners);\n    this._passiveListeners.push(...exitListeners);\n  }\n  _addListeners(listeners) {\n    listeners.forEach(([event, listener]) => {\n      this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n    });\n  }\n  _platformSupportsMouseEvents() {\n    return !this._platform.IOS && !this._platform.ANDROID;\n  }\n  /** Listener for the `wheel` event on the element. */\n  _wheelListener(event) {\n    if (this._isTooltipVisible()) {\n      const elementUnderPointer = this._injector.get(DOCUMENT).elementFromPoint(event.clientX, event.clientY);\n      const element = this._elementRef.nativeElement;\n      // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n      // won't fire if the user scrolls away using the wheel without moving their cursor. We\n      // work around it by finding the element under the user's cursor and closing the tooltip\n      // if it's not the trigger.\n      if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n        this.hide();\n      }\n    }\n  }\n  /** Disables the native browser gestures, based on how the tooltip has been configured. */\n  _disableNativeGesturesIfNecessary() {\n    const gestures = this.touchGestures;\n    if (gestures !== 'off') {\n      const element = this._elementRef.nativeElement;\n      const style = element.style;\n      // If gestures are set to `auto`, we don't disable text selection on inputs and\n      // textareas, because it prevents the user from typing into them on iOS Safari.\n      if (gestures === 'on' || element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA') {\n        style.userSelect = style.msUserSelect = style.webkitUserSelect = style.MozUserSelect = 'none';\n      }\n      // If we have `auto` gestures and the element uses native HTML dragging,\n      // we don't set `-webkit-user-drag` because it prevents the native behavior.\n      if (gestures === 'on' || !element.draggable) {\n        style.webkitUserDrag = 'none';\n      }\n      style.touchAction = 'none';\n      style.webkitTapHighlightColor = 'transparent';\n    }\n  }\n  /** Updates the tooltip's ARIA description based on it current state. */\n  _syncAriaDescription(oldMessage) {\n    if (this._ariaDescriptionPending) {\n      return;\n    }\n    this._ariaDescriptionPending = true;\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, oldMessage, 'tooltip');\n    // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n    // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n    // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n    // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n    if (!this._isDestroyed) {\n      afterNextRender({\n        write: () => {\n          this._ariaDescriptionPending = false;\n          if (this.message && !this.disabled) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n          }\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n  }\n  static ɵfac = function MatTooltip_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTooltip)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTooltip,\n    selectors: [[\"\", \"matTooltip\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-tooltip-trigger\"],\n    hostVars: 2,\n    hostBindings: function MatTooltip_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-tooltip-disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      position: [0, \"matTooltipPosition\", \"position\"],\n      positionAtOrigin: [0, \"matTooltipPositionAtOrigin\", \"positionAtOrigin\"],\n      disabled: [0, \"matTooltipDisabled\", \"disabled\"],\n      showDelay: [0, \"matTooltipShowDelay\", \"showDelay\"],\n      hideDelay: [0, \"matTooltipHideDelay\", \"hideDelay\"],\n      touchGestures: [0, \"matTooltipTouchGestures\", \"touchGestures\"],\n      message: [0, \"matTooltip\", \"message\"],\n      tooltipClass: [0, \"matTooltipClass\", \"tooltipClass\"]\n    },\n    exportAs: [\"matTooltip\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[matTooltip]',\n      exportAs: 'matTooltip',\n      host: {\n        'class': 'mat-mdc-tooltip-trigger',\n        '[class.mat-mdc-tooltip-disabled]': 'disabled'\n      }\n    }]\n  }], () => [], {\n    position: [{\n      type: Input,\n      args: ['matTooltipPosition']\n    }],\n    positionAtOrigin: [{\n      type: Input,\n      args: ['matTooltipPositionAtOrigin']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matTooltipDisabled']\n    }],\n    showDelay: [{\n      type: Input,\n      args: ['matTooltipShowDelay']\n    }],\n    hideDelay: [{\n      type: Input,\n      args: ['matTooltipHideDelay']\n    }],\n    touchGestures: [{\n      type: Input,\n      args: ['matTooltipTouchGestures']\n    }],\n    message: [{\n      type: Input,\n      args: ['matTooltip']\n    }],\n    tooltipClass: [{\n      type: Input,\n      args: ['matTooltipClass']\n    }]\n  });\n})();\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  /* Whether the tooltip text overflows to multiple lines */\n  _isMultiline = false;\n  /** Message to display in the tooltip */\n  message;\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n  tooltipClass;\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId;\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId;\n  /** Element that caused the tooltip to open. */\n  _triggerElement;\n  /** Amount of milliseconds to delay the closing sequence. */\n  _mouseLeaveHideDelay;\n  /** Whether animations are currently disabled. */\n  _animationsDisabled;\n  /** Reference to the internal tooltip element. */\n  _tooltip;\n  /** Whether interactions on the page should close the tooltip */\n  _closeOnInteraction = false;\n  /** Whether the tooltip is currently visible. */\n  _isVisible = false;\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  _onHide = new Subject();\n  /** Name of the show animation and the class that toggles it. */\n  _showAnimation = 'mat-mdc-tooltip-show';\n  /** Name of the hide animation and the class that toggles it. */\n  _hideAnimation = 'mat-mdc-tooltip-hide';\n  constructor() {\n    const animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n  }\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay) {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId != null) {\n      clearTimeout(this._hideTimeoutId);\n    }\n    this._showTimeoutId = setTimeout(() => {\n      this._toggleVisibility(true);\n      this._showTimeoutId = undefined;\n    }, delay);\n  }\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay) {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId != null) {\n      clearTimeout(this._showTimeoutId);\n    }\n    this._hideTimeoutId = setTimeout(() => {\n      this._toggleVisibility(false);\n      this._hideTimeoutId = undefined;\n    }, delay);\n  }\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden() {\n    return this._onHide;\n  }\n  /** Whether the tooltip is being displayed. */\n  isVisible() {\n    return this._isVisible;\n  }\n  ngOnDestroy() {\n    this._cancelPendingAnimations();\n    this._onHide.complete();\n    this._triggerElement = null;\n  }\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.io/design/components/tooltips.html#behavior\n   */\n  _handleBodyInteraction() {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck() {\n    this._changeDetectorRef.markForCheck();\n  }\n  _handleMouseLeave({\n    relatedTarget\n  }) {\n    if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n      if (this.isVisible()) {\n        this.hide(this._mouseLeaveHideDelay);\n      } else {\n        this._finalizeAnimation(false);\n      }\n    }\n  }\n  /**\n   * Callback for when the timeout in this.show() gets completed.\n   * This method is only needed by the mdc-tooltip, and so it is only implemented\n   * in the mdc-tooltip, not here.\n   */\n  _onShow() {\n    this._isMultiline = this._isTooltipMultiline();\n    this._markForCheck();\n  }\n  /** Whether the tooltip text has overflown to the next line */\n  _isTooltipMultiline() {\n    const rect = this._elementRef.nativeElement.getBoundingClientRect();\n    return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n  }\n  /** Event listener dispatched when an animation on the tooltip finishes. */\n  _handleAnimationEnd({\n    animationName\n  }) {\n    if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n      this._finalizeAnimation(animationName === this._showAnimation);\n    }\n  }\n  /** Cancels any pending animation sequences. */\n  _cancelPendingAnimations() {\n    if (this._showTimeoutId != null) {\n      clearTimeout(this._showTimeoutId);\n    }\n    if (this._hideTimeoutId != null) {\n      clearTimeout(this._hideTimeoutId);\n    }\n    this._showTimeoutId = this._hideTimeoutId = undefined;\n  }\n  /** Handles the cleanup after an animation has finished. */\n  _finalizeAnimation(toVisible) {\n    if (toVisible) {\n      this._closeOnInteraction = true;\n    } else if (!this.isVisible()) {\n      this._onHide.next();\n    }\n  }\n  /** Toggles the visibility of the tooltip element. */\n  _toggleVisibility(isVisible) {\n    // We set the classes directly here ourselves so that toggling the tooltip state\n    // isn't bound by change detection. This allows us to hide it even if the\n    // view ref has been detached from the CD tree.\n    const tooltip = this._tooltip.nativeElement;\n    const showClass = this._showAnimation;\n    const hideClass = this._hideAnimation;\n    tooltip.classList.remove(isVisible ? hideClass : showClass);\n    tooltip.classList.add(isVisible ? showClass : hideClass);\n    if (this._isVisible !== isVisible) {\n      this._isVisible = isVisible;\n      this._changeDetectorRef.markForCheck();\n    }\n    // It's common for internal apps to disable animations using `* { animation: none !important }`\n    // which can break the opening sequence. Try to detect such cases and work around them.\n    if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n      const styles = getComputedStyle(tooltip);\n      // Use `getPropertyValue` to avoid issues with property renaming.\n      if (styles.getPropertyValue('animation-duration') === '0s' || styles.getPropertyValue('animation-name') === 'none') {\n        this._animationsDisabled = true;\n      }\n    }\n    if (isVisible) {\n      this._onShow();\n    }\n    if (this._animationsDisabled) {\n      tooltip.classList.add('_mat-animation-noopable');\n      this._finalizeAnimation(isVisible);\n    }\n  }\n  static ɵfac = function TooltipComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TooltipComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TooltipComponent,\n    selectors: [[\"mat-tooltip-component\"]],\n    viewQuery: function TooltipComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tooltip = _t.first);\n      }\n    },\n    hostAttrs: [\"aria-hidden\", \"true\"],\n    hostBindings: function TooltipComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseleave\", function TooltipComponent_mouseleave_HostBindingHandler($event) {\n          return ctx._handleMouseLeave($event);\n        });\n      }\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[\"tooltip\", \"\"], [1, \"mdc-tooltip\", \"mat-mdc-tooltip\", 3, \"animationend\", \"ngClass\"], [1, \"mat-mdc-tooltip-surface\", \"mdc-tooltip__surface\"]],\n    template: function TooltipComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵlistener(\"animationend\", function TooltipComponent_Template_div_animationend_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handleAnimationEnd($event));\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-tooltip--multiline\", ctx._isMultiline);\n        i0.ɵɵproperty(\"ngClass\", ctx.tooltipClass);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.message);\n      }\n    },\n    dependencies: [NgClass],\n    styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mdc-plain-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mdc-plain-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mdc-plain-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mdc-plain-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mdc-plain-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mdc-plain-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tooltip-component',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '(mouseleave)': '_handleMouseLeave($event)',\n        'aria-hidden': 'true'\n      },\n      imports: [NgClass],\n      template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\",\n      styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mdc-plain-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mdc-plain-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mdc-plain-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mdc-plain-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mdc-plain-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mdc-plain-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\\n\"]\n    }]\n  }], () => [], {\n    _tooltip: [{\n      type: ViewChild,\n      args: ['tooltip', {\n        // Use a static query here since we interact directly with\n        // the DOM which can happen before `ngAfterViewInit`.\n        static: true\n      }]\n    }]\n  });\n})();\nclass MatTooltipModule {\n  static ɵfac = function MatTooltipModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTooltipModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatTooltipModule,\n    imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    imports: [A11yModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTooltipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n      exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n      providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\nexport { MAT_TOOLTIP_SCROLL_STRATEGY as M, SCROLL_THROTTLE_MS as S, TOOLTIP_PANEL_CLASS as T, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY as a, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER as b, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY as c, MAT_TOOLTIP_DEFAULT_OPTIONS as d, MatTooltip as e, TooltipComponent as f, getMatTooltipInvalidPositionError as g, MatTooltipModule as h };\n","import { Component, inject, signal, computed } from \"@angular/core\";\nimport { RouterOutlet, RouterModule, Router } from \"@angular/router\";\nimport { BreakpointObserver } from \"@angular/cdk/layout\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { AuthService } from \"../core/auth/auth.service\";\nimport { ConfirmDialogService } from \"../core/services\";\n\ninterface MenuItem {\n  label: string;\n  icon: string;\n  url?: string; // ruta de navegación\n  action?: () => void; // acción opcional en lugar de navegar\n  children?: MenuItem[]; // futuro soporte submenús\n}\n\n@Component({\n  selector: \"app-layout\",\n  imports: [\n    RouterOutlet,\n    RouterModule,\n    CommonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatDividerModule,\n    MatTooltipModule,\n  ],\n  templateUrl: \"./layout.component.html\",\n  styleUrls: [\"./layout.component.scss\"],\n})\nexport class LayoutComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  private router = inject(Router);\n  private auth = inject(AuthService);\n  private readonly confirm = inject(ConfirmDialogService);\n\n  isCollapsed = signal(false);\n  isMobile = signal(false);\n\n  currentUrl = signal<string>(\"\");\n\n  constructor() {\n    // Detectar móvil y actualizar signals\n    this.breakpointObserver\n      .observe([\"(max-width: 768px)\"])\n      .subscribe((result) => {\n        this.isMobile.set(result.matches);\n        if (result.matches) {\n          this.isCollapsed.set(false);\n        }\n      });\n\n    // Escuchar cambios de ruta\n    this.router.events.subscribe(() => {\n      this.currentUrl.set(this.router.url);\n    });\n    // Inicial\n    this.currentUrl.set(this.router.url);\n\n    const collapsed = localStorage.getItem('bipal.sidenav-collapsed');\n    if(collapsed) {\n      this.isCollapsed.set(collapsed === 'true');\n    }\n  }\n\n  // Computed signals simplificados\n  sidenavMode = computed(() => (this.isMobile() ? \"over\" : \"side\"));\n  sidenavOpened = computed(() => !this.isMobile());\n  hasBackdrop = computed(() => this.isMobile());\n\n  // Menús principales\n  menuItems: MenuItem[] = [\n    {\n      label: \"Mi hoja de vida\",\n      icon: \"folder_managed\",\n      url: \"/hoja-de-vida/personal\",\n    },\n  ];\n\n  // Menús de cuenta\n  accountMenuItems: MenuItem[] = [\n    {\n      label: \"Eliminar mis datos\",\n      icon: \"delete_forever\",\n      url: \"/hoja-de-vida/eliminar-datos\",\n    },\n    {\n      label: \"Términos y condiciones\",\n      icon: \"description\",\n      url: \"/hoja-de-vida/terminos-condiciones\",\n    },\n    {\n      label: \"Cerrar sesión\",\n      icon: \"logout\",\n      action: () => {\n        this.confirm.open({\n          title: \"Confirmar cierre de sesión\",\n          message: \"¿Estás seguro de que deseas cerrar sesión?\",\n          type: 'warning',\n          primaryText: \"Cerrar sesión\",\n          secondaryText: \"Cancelar\",\n        }).subscribe((ok) => {\n          if (!ok) return;\n          this.cerrarSesion();\n        });\n      },\n    },\n  ];\n\n  isActive = (item: MenuItem) =>\n    !!item.url && this.currentUrl().startsWith(item.url);\n\n  handleItemClick(item: MenuItem) {\n    if (item.action) {\n      item.action();\n      return;\n    }\n    if (item.url) {\n      this.router.navigate([item.url]);\n    }\n  }\n\n  toggleSidenav() {\n    this.isCollapsed.update((collapsed) => !collapsed);\n    localStorage.setItem('bipal.sidenav-collapsed', this.isCollapsed() ? 'true' : 'false');\n  }\n\n  // Métodos de acción simplificados\n  private cerrarSesion() {\n    this.auth.signOut().then(() => {\n      this.router.navigate([\"/auth\"]);\n    });\n  }\n}\n","<mat-sidenav-container [autosize]=\"true\" [hasBackdrop]=\"hasBackdrop()\" class=\"sidenav-container\">\n  <mat-sidenav \n    #drawer \n    class=\"sidenav\" \n    [class.collapsed]=\"isCollapsed() && !isMobile()\"\n    [mode]=\"sidenavMode()\"\n    [opened]=\"sidenavOpened()\">\n    \n    <!-- Header -->\n    <div class=\"sidenav-header\">\n      <img \n        [src]=\"isCollapsed() && !isMobile() ? 'assets/img/logo.png' : 'assets/img/logo_large.png'\"\n        alt=\"Logo Alcaldía de Bucaramanga\"\n        class=\"logo\">\n    </div>\n    \n    <mat-divider></mat-divider>\n    \n    <!-- Menú principal -->\n    <div class=\"menu-content\">\n      @if (!isCollapsed() || isMobile()) {\n        <h3 class=\"section-title\">Hojas de vida</h3>\n      }\n      \n      <mat-nav-list>\n        @for (item of menuItems; track item.label) {\n          <mat-list-item \n            class=\"menu-item\"\n            [class.active]=\"isActive(item)\"\n            (click)=\"handleItemClick(item)\"\n            [matTooltip]=\" isCollapsed() ? item.label : ''\"\n            matTooltipPosition=\"right\"\n            (keydown.enter)=\"handleItemClick(item)\"\n            (keydown.space)=\"handleItemClick(item)\">\n            <mat-icon matListItemIcon class=\"menu-icon\">{{ item.icon }}</mat-icon>\n            @if (!isCollapsed() || isMobile()) {\n              <span matListItemTitle>{{ item.label }}</span>\n            }\n          </mat-list-item>\n        }\n      </mat-nav-list>\n      \n      <mat-divider></mat-divider>\n      \n      <!-- Sección Cuenta -->\n      @if (!isCollapsed() || isMobile()) {\n        <h3 class=\"section-title\">Cuenta</h3>\n      }\n      \n      <mat-nav-list>\n        @for (item of accountMenuItems; track item.label) {\n          <mat-list-item \n            class=\"menu-item\"\n            [class.active]=\"isActive(item)\"\n            (click)=\"handleItemClick(item)\"\n            [matTooltip]=\" isCollapsed() ? item.label : ''\"\n            matTooltipPosition=\"right\"\n            (keydown.enter)=\"handleItemClick(item)\"\n            (keydown.space)=\"handleItemClick(item)\">\n            <mat-icon matListItemIcon>{{ item.icon }}</mat-icon>\n            @if (!isCollapsed() || isMobile()) {\n              <span matListItemTitle>{{ item.label }}</span>\n            }\n          </mat-list-item>\n        }\n      </mat-nav-list>\n    </div>\n    \n    <!-- Footer -->\n      <div class=\"sidenav-footer\">\n      @if (!isCollapsed() || isMobile()) {\n        <div class=\"footer-content\">\n          <p class=\"version\">Versión 2025.04.30</p>\n          <p class=\"support\">\n            Reporte de errores y soporte: \n            <a href=\"mailto:secretaria-administrativa&#64;bucaramanga.gov.co\">\n              secretaria-administrativa&#64;bucaramanga.gov.co\n            </a>\n          </p>\n        </div>\n      }\n      @if (isCollapsed() && !isMobile()) {\n        <mat-icon class=\"footer-icon\">info</mat-icon>\n      }\n    </div>\n  </mat-sidenav>\n\n  <mat-sidenav-content style=\"width: 100%\">\n    <!-- Toolbar -->\n    <mat-toolbar color=\"primary\">\n      <button \n        mat-icon-button\n        color=\"primary\"\n        (click)=\"isMobile() ? drawer.toggle() : toggleSidenav()\">\n        <mat-icon>{{ isMobile() ? 'menu' : (isCollapsed() ? 'menu' : 'menu_open') }}</mat-icon>\n      </button>\n      \n      <img src=\"assets/img/banner.png\" alt=\"Logo\" class=\"toolbar-logo\">\n    </mat-toolbar>\n    \n    <!-- Contenido principal -->\n    <main class=\"main-content\">\n      <router-outlet />\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { inject } from \"@angular/core\";\nimport {\n  CanActivateFn,\n  CanActivateChildFn,\n  Router,\n  UrlTree,\n} from \"@angular/router\";\nimport { AuthService } from \"../../../core/auth/auth.service\";\nimport { NotificationService } from \"../../../core/services/notification.service\";\n\nasync function ensureSessionOrRedirect(): Promise<boolean | UrlTree> {\n  console.log(\"Ensuring session\");\n  const auth = inject(AuthService);\n  const router = inject(Router);\n  const notifier = inject(NotificationService);\n  try {\n    await auth.ensureSessionLoaded();\n    if (!auth.session) {\n      notifier.showInfo(\"Debe iniciar sesión para continuar\");\n      return router.createUrlTree([\"/auth\"]);\n    }\n\n    // Con sesión: revisar si el usuario está en onboarding (aún no completado)\n    const { data } = await auth.profile();\n    const onboardingStep = (data?.user?.user_metadata as any)?.onboarding_step as\n      | \"otp_verified\"\n      | \"completed\"\n      | undefined;\n    const emailConfirmedAt = (data?.user as any)?.email_confirmed_at as string | null | undefined;\n\n    if ((onboardingStep && onboardingStep !== \"completed\") || !emailConfirmedAt) {\n      // Redirigir al flujo de creación de clave si aún no termina onboarding\n      return router.createUrlTree([\"/auth/crear-clave\"]);\n    }\n\n    return true;\n  } catch (e: unknown) {\n    console.error(\"ensureSession error\", e);\n    notifier.showError(\"Error verificando sesión\");\n    return router.createUrlTree([\"/auth\"]);\n  }\n}\n\n//TODO: puede que con el activechild baste\nexport const hojaDeVidaCanActivate: CanActivateFn = () => {\n  return ensureSessionOrRedirect();\n};\n\nexport const hojaDeVidaCanActivateChild: CanActivateChildFn = () => {\n  return ensureSessionOrRedirect();\n};\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, inject, ElementRef, ChangeDetectorRef, NgZone, ANIMATION_MODULE_TYPE, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _MatInternalFormField } from './internal-form-field-grv62mCZ.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-BQUT6wsL.mjs';\nimport { M as MatRipple } from './ripple-BT3tzh6F.mjs';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst _c0 = [\"input\"];\nconst _c1 = [\"label\"];\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n  providedIn: 'root',\n  factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent',\n    clickAction: 'check-indeterminate',\n    disabledInteractive: false\n  };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n  /** The initial state of the component before any user interaction. */\n  TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n  /** The state representing the component when it's becoming checked. */\n  TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n  /** The state representing the component when it's becoming unchecked. */\n  TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n  /** The state representing the component when it's becoming indeterminate. */\n  TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatCheckbox),\n  multi: true\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n  /** The source checkbox of the event. */\n  source;\n  /** The new `checked` value of the checkbox. */\n  checked;\n}\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _ngZone = inject(NgZone);\n  _animationMode = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _options = inject(MAT_CHECKBOX_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Focuses the checkbox. */\n  focus() {\n    this._inputElement.nativeElement.focus();\n  }\n  /** Creates the change event that will be emitted by the checkbox. */\n  _createChangeEvent(isChecked) {\n    const event = new MatCheckboxChange();\n    event.source = this;\n    event.checked = isChecked;\n    return event;\n  }\n  /** Gets the element on which to add the animation CSS classes. */\n  _getAnimationTargetElement() {\n    return this._inputElement?.nativeElement;\n  }\n  /** CSS classes to add when transitioning between the different checkbox states. */\n  _animationClasses = {\n    uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n    uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n    checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n    checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n    indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n    indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked'\n  };\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n   * take precedence so this may be omitted.\n   */\n  ariaLabel = '';\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  ariaLabelledby = null;\n  /** The 'aria-describedby' attribute is read after the element's label and field type. */\n  ariaDescribedby;\n  /**\n   * Users can specify the `aria-expanded` attribute which will be forwarded to the input element\n   */\n  ariaExpanded;\n  /**\n   * Users can specify the `aria-controls` attribute which will be forwarded to the input element\n   */\n  ariaControls;\n  /** Users can specify the `aria-owns` attribute which will be forwarded to the input element */\n  ariaOwns;\n  _uniqueId;\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n  id;\n  /** Returns the unique id for the visual hidden input. */\n  get inputId() {\n    return `${this.id || this._uniqueId}-input`;\n  }\n  /** Whether the checkbox is required. */\n  required;\n  /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n  labelPosition = 'after';\n  /** Name value will be applied to the input element if present */\n  name = null;\n  /** Event emitted when the checkbox's `checked` value changes. */\n  change = new EventEmitter();\n  /** Event emitted when the checkbox's `indeterminate` value changes. */\n  indeterminateChange = new EventEmitter();\n  /** The value attribute of the native input element */\n  value;\n  /** Whether the checkbox has a ripple. */\n  disableRipple;\n  /** The native `<input type=\"checkbox\">` element */\n  _inputElement;\n  /** The native `<label>` element */\n  _labelElement;\n  /** Tabindex for the checkbox. */\n  tabIndex;\n  // TODO(crisbeto): this should be a ThemePalette, but some internal apps were abusing\n  // the lack of type checking previously and assigning random strings.\n  /**\n   * Theme color of the checkbox. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/checkbox/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Whether the checkbox should remain interactive when it is disabled. */\n  disabledInteractive;\n  /**\n   * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  _currentAnimationClass = '';\n  _currentCheckState = TransitionCheckState.Init;\n  _controlValueAccessorChangeFn = () => {};\n  _validatorChangeFn = () => {};\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const tabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n    this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n    this.id = this._uniqueId = inject(_IdGenerator).getId('mat-mdc-checkbox-');\n    this.disabledInteractive = this._options?.disabledInteractive ?? false;\n  }\n  ngOnChanges(changes) {\n    if (changes['required']) {\n      this._validatorChangeFn();\n    }\n  }\n  ngAfterViewInit() {\n    this._syncIndeterminate(this._indeterminate);\n  }\n  /** Whether the checkbox is checked. */\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    if (value != this.checked) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _checked = false;\n  /** Whether the checkbox is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value !== this.disabled) {\n      this._disabled = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _disabled = false;\n  /**\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n   * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n   * set to false.\n   */\n  get indeterminate() {\n    return this._indeterminate;\n  }\n  set indeterminate(value) {\n    const changed = value != this._indeterminate;\n    this._indeterminate = value;\n    if (changed) {\n      if (this._indeterminate) {\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\n      } else {\n        this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      }\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n    this._syncIndeterminate(this._indeterminate);\n  }\n  _indeterminate = false;\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n    // component will be only marked for check, but no actual change detection runs automatically.\n    // Instead of going back into the zone in order to trigger a change detection which causes\n    // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n    // an explicit change detection for the checkbox view and its children.\n    this._changeDetectorRef.detectChanges();\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    this.checked = !!value;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  // Implemented as a part of Validator.\n  validate(control) {\n    return this.required && control.value !== true ? {\n      'required': true\n    } : null;\n  }\n  // Implemented as a part of Validator.\n  registerOnValidatorChange(fn) {\n    this._validatorChangeFn = fn;\n  }\n  _transitionCheckState(newState) {\n    let oldState = this._currentCheckState;\n    let element = this._getAnimationTargetElement();\n    if (oldState === newState || !element) {\n      return;\n    }\n    if (this._currentAnimationClass) {\n      element.classList.remove(this._currentAnimationClass);\n    }\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n    this._currentCheckState = newState;\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.add(this._currentAnimationClass);\n      // Remove the animation class to avoid animation when the checkbox is moved between containers\n      const animationClass = this._currentAnimationClass;\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          element.classList.remove(animationClass);\n        }, 1000);\n      });\n    }\n  }\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(this._createChangeEvent(this.checked));\n    // Assigning the value again here is redundant, but we have to do it in case it was\n    // changed inside the `change` listener which will cause the input to be out of sync.\n    if (this._inputElement) {\n      this._inputElement.nativeElement.checked = this.checked;\n    }\n  }\n  /** Toggles the `checked` state of the checkbox. */\n  toggle() {\n    this.checked = !this.checked;\n    this._controlValueAccessorChangeFn(this.checked);\n  }\n  _handleInputClick() {\n    const clickAction = this._options?.clickAction;\n    // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n    if (!this.disabled && clickAction !== 'noop') {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this.indeterminate && clickAction !== 'check') {\n        Promise.resolve().then(() => {\n          this._indeterminate = false;\n          this.indeterminateChange.emit(this._indeterminate);\n        });\n      }\n      this._checked = !this._checked;\n      this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    } else if (this.disabled && this.disabledInteractive || !this.disabled && clickAction === 'noop') {\n      // Reset native input when clicked with noop. The native checkbox becomes checked after\n      // click, reset it to be align with `checked` value of `mat-checkbox`.\n      this._inputElement.nativeElement.checked = this.checked;\n      this._inputElement.nativeElement.indeterminate = this.indeterminate;\n    }\n  }\n  _onInteractionEvent(event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n  _onBlur() {\n    // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n    // Angular does not expect events to be raised during change detection, so any state change\n    // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n    // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n    // telling the form control it has been touched until the next tick.\n    Promise.resolve().then(() => {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  _getAnimationClassForCheckStateTransition(oldState, newState) {\n    // Don't transition if animations are disabled.\n    if (this._animationMode === 'NoopAnimations') {\n      return '';\n    }\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n        // [checked] bound to it.\n        if (newState === TransitionCheckState.Checked) {\n          return this._animationClasses.uncheckedToChecked;\n        } else if (newState == TransitionCheckState.Indeterminate) {\n          return this._checked ? this._animationClasses.checkedToIndeterminate : this._animationClasses.uncheckedToIndeterminate;\n        }\n        break;\n      case TransitionCheckState.Unchecked:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.uncheckedToChecked : this._animationClasses.uncheckedToIndeterminate;\n      case TransitionCheckState.Checked:\n        return newState === TransitionCheckState.Unchecked ? this._animationClasses.checkedToUnchecked : this._animationClasses.checkedToIndeterminate;\n      case TransitionCheckState.Indeterminate:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.indeterminateToChecked : this._animationClasses.indeterminateToUnchecked;\n    }\n    return '';\n  }\n  /**\n   * Syncs the indeterminate value with the checkbox DOM node.\n   *\n   * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n   * property is supported on an element boils down to `if (propName in element)`. Domino's\n   * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n   * server-side rendering.\n   */\n  _syncIndeterminate(value) {\n    const nativeCheckbox = this._inputElement;\n    if (nativeCheckbox) {\n      nativeCheckbox.nativeElement.indeterminate = value;\n    }\n  }\n  _onInputClick() {\n    this._handleInputClick();\n  }\n  _onTouchTargetClick() {\n    this._handleInputClick();\n    if (!this.disabled) {\n      // Normally the input should be focused already, but if the click\n      // comes from the touch target, then we might have to focus it ourselves.\n      this._inputElement.nativeElement.focus();\n    }\n  }\n  /**\n   *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n   *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n   *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n   *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n   *  bubbles when the label is clicked.\n   */\n  _preventBubblingFromLabel(event) {\n    if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n      event.stopPropagation();\n    }\n  }\n  static ɵfac = function MatCheckbox_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCheckbox)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCheckbox,\n    selectors: [[\"mat-checkbox\"]],\n    viewQuery: function MatCheckbox_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelElement = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-checkbox\"],\n    hostVars: 16,\n    hostBindings: function MatCheckbox_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null);\n        i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"mat-accent\");\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mdc-checkbox--disabled\", ctx.disabled)(\"mat-mdc-checkbox-disabled\", ctx.disabled)(\"mat-mdc-checkbox-checked\", ctx.checked)(\"mat-mdc-checkbox-disabled-interactive\", ctx.disabledInteractive);\n      }\n    },\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n      ariaExpanded: [2, \"aria-expanded\", \"ariaExpanded\", booleanAttribute],\n      ariaControls: [0, \"aria-controls\", \"ariaControls\"],\n      ariaOwns: [0, \"aria-owns\", \"ariaOwns\"],\n      id: \"id\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      labelPosition: \"labelPosition\",\n      name: \"name\",\n      value: \"value\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? undefined : numberAttribute(value)],\n      color: \"color\",\n      disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n      checked: [2, \"checked\", \"checked\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      indeterminate: [2, \"indeterminate\", \"indeterminate\", booleanAttribute]\n    },\n    outputs: {\n      change: \"change\",\n      indeterminateChange: \"indeterminateChange\"\n    },\n    exportAs: [\"matCheckbox\"],\n    features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, {\n      provide: NG_VALIDATORS,\n      useExisting: MatCheckbox,\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c2,\n    decls: 15,\n    vars: 23,\n    consts: [[\"checkbox\", \"\"], [\"input\", \"\"], [\"label\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"click\", \"labelPosition\"], [1, \"mdc-checkbox\"], [1, \"mat-mdc-checkbox-touch-target\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"mdc-checkbox__native-control\", 3, \"blur\", \"click\", \"change\", \"checked\", \"indeterminate\", \"disabled\", \"id\", \"required\", \"tabIndex\"], [1, \"mdc-checkbox__ripple\"], [1, \"mdc-checkbox__background\"], [\"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-checkbox__checkmark\"], [\"fill\", \"none\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-checkbox__checkmark-path\"], [1, \"mdc-checkbox__mixedmark\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-label\", 3, \"for\"]],\n    template: function MatCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 3);\n        i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._preventBubblingFromLabel($event));\n        });\n        i0.ɵɵelementStart(1, \"div\", 4, 0)(3, \"div\", 5);\n        i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onTouchTargetClick());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 6, 1);\n        i0.ɵɵlistener(\"blur\", function MatCheckbox_Template_input_blur_4_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onBlur());\n        })(\"click\", function MatCheckbox_Template_input_click_4_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onInputClick());\n        })(\"change\", function MatCheckbox_Template_input_change_4_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onInteractionEvent($event));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"div\", 7);\n        i0.ɵɵelementStart(7, \"div\", 8);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(8, \"svg\", 9);\n        i0.ɵɵelement(9, \"path\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelement(10, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 13, 2);\n        i0.ɵɵprojection(14);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const checkbox_r2 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"mdc-checkbox--selected\", ctx.checked);\n        i0.ɵɵproperty(\"checked\", ctx.checked)(\"indeterminate\", ctx.indeterminate)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-checked\", ctx.indeterminate ? \"mixed\" : null)(\"aria-controls\", ctx.ariaControls)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? true : null)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-owns\", ctx.ariaOwns)(\"name\", ctx.name)(\"value\", ctx.value);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"matRippleTrigger\", checkbox_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", ctx.inputId);\n      }\n    },\n    dependencies: [MatRipple, _MatInternalFormField],\n    styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-checkbox',\n      host: {\n        'class': 'mat-mdc-checkbox',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n        '[class.mdc-checkbox--disabled]': 'disabled',\n        '[id]': 'id',\n        // Add classes that users can use to more easily target disabled or checked checkboxes.\n        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n        '[class.mat-mdc-checkbox-checked]': 'checked',\n        '[class.mat-mdc-checkbox-disabled-interactive]': 'disabledInteractive',\n        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"'\n      },\n      providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatCheckbox,\n        multi: true\n      }],\n      exportAs: 'matCheckbox',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatRipple, _MatInternalFormField],\n      template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-controls]=\\\"ariaControls\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n           [attr.aria-owns]=\\\"ariaOwns\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\",\n      styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\\n\"]\n    }]\n  }], () => [], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    ariaExpanded: [{\n      type: Input,\n      args: [{\n        alias: 'aria-expanded',\n        transform: booleanAttribute\n      }]\n    }],\n    ariaControls: [{\n      type: Input,\n      args: ['aria-controls']\n    }],\n    ariaOwns: [{\n      type: Input,\n      args: ['aria-owns']\n    }],\n    id: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    indeterminateChange: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    _inputElement: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    _labelElement: [{\n      type: ViewChild,\n      args: ['label']\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? undefined : numberAttribute(value)\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    indeterminate: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatCheckboxRequiredValidator_BaseFactory;\n    return function MatCheckboxRequiredValidator_Factory(__ngFactoryType__) {\n      return (ɵMatCheckboxRequiredValidator_BaseFactory || (ɵMatCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator)))(__ngFactoryType__ || MatCheckboxRequiredValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCheckboxRequiredValidator,\n    selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n      providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n    }]\n  }], null, null);\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatCheckboxRequiredValidatorModule {\n  static ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _MatCheckboxRequiredValidatorModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _MatCheckboxRequiredValidatorModule,\n    imports: [MatCheckboxRequiredValidator],\n    exports: [MatCheckboxRequiredValidator]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckboxRequiredValidator],\n      exports: [MatCheckboxRequiredValidator]\n    }]\n  }], null, null);\n})();\nclass MatCheckboxModule {\n  static ɵfac = function MatCheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCheckboxModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatCheckboxModule,\n    imports: [MatCheckbox, MatCommonModule],\n    exports: [MatCheckbox, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCheckbox, MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckbox, MatCommonModule],\n      exports: [MatCheckbox, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxRequiredValidatorModule };\n","import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { FormBuilder, FormsModule, Validators } from \"@angular/forms\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDivider, MatDividerModule } from \"@angular/material/divider\";\nimport { RouterModule } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { IniciarSesionComponent } from \"./components/iniciar-sesion/iniciar-sesion.component\";\nimport { RegistrarseComponent } from \"./components/registrarse/registrarse.component\";\nimport {\n  MatAccordion,\n  MatExpansionPanelContent,\n  MatExpansionPanel,\n  MatExpansionPanelHeader,\n  MatExpansionPanelTitle,\n  MatExpansionPanelDescription,\n  MatExpansionModule,\n} from \"@angular/material/expansion\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { CommonModule } from \"@angular/common\";\nimport { FullContainerAuthComponent } from \"./components/full-container-auth/full-container-auth.component\";\n// import {IniciarSesionComponent} from \"./components/iniciar-sesion\";\n@Component({\n  selector: \"app-authentication\",\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    RouterModule,\n    MatExpansionModule,\n    MatCheckboxModule,\n    CommonModule,\n    // FullContainerAuthComponent,\n    RouterModule\n],\n  templateUrl: \"./authentication.component.html\",\n  styleUrl: \"./authentication.component.scss\",\n})\nexport class AuthenticationComponent {\n \n}\n","<!--TODO: falta agregar el el identificador de usuario que se pueda identificar por correo o por numero de celular-->\n<div class=\"background-img\">\n  <div class=\"title-container\">\n    <h1 class=\"title\">\n      Banco de información de perfiles académicos y laborales - BIPAL.\n    </h1>\n  </div>\n  <!-- <app-full-container-auth></app-full-container-auth> -->\n  <router-outlet/>\n</div>\n","import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatDivider } from \"@angular/material/divider\";\nimport { RouterModule } from \"@angular/router\";\nimport { MatIcon } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { MatCheckbox } from \"@angular/material/checkbox\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { environment } from \"../../../../../environments/environment\";\n\n@Component({\n  selector: \"app-registrarse\",\n  imports: [\n    MatInputModule,\n    MatIcon,\n    MatDivider,\n    RouterModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatCheckbox,\n  ],\n  templateUrl: \"./registrarse.component.html\",\n  styleUrl: \"./registrarse.component.scss\",\n})\nexport class RegistrarseComponent {\n  //injectamos las depdencias\n  private readonly authService = inject(AuthService);\n\n  BorrarData() {\n    console.log(\"hola\");\n  }\n  registerForm: FormGroup;\n  clickOnCheckbox = false;\n  // cooldown de reenvío\n  isCooldown = false;\n  cooldownSeconds = environment.emailSenderCooldown ?? 60;\n  private cooldownTimer: any = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private routerBj: Router,\n    private httpBj: HttpClient\n  ) {\n    this.registerForm = this.fb.group({\n      documentNumber: [\n        \"\",\n        [\n          Validators.required,\n          Validators.pattern(/^\\d+$/), //validator de digitos numericos\n        ],\n      ],\n      email: [\n        \"\",\n        [\n          Validators.required,\n          Validators.pattern(\n            /^[a-zA-Z0-9._%+*-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n          ), // REGEX PARA CORREO\n        ],\n      ],\n    });\n  }\n  /**\n   * Este metodo se encarga de avisarle al front que el codigo de verificacion ya fue enviado\n   * al usuario por medio de la API de supabase y se proceda a cargar la vista de llenado del codigo\n   */\n  consultarEstadoCodigo(): void {\n    this.authService\n      .sendCodeVerification(\n        this.registerForm.value.email,\n        this.registerForm.value.documentNumber\n      )\n      .then(({ error }) => {\n        if (error) {\n          const code = (error as any)?.code ?? (error as any)?.status ?? \"\";\n          // Manejo de rate limit: iniciar cooldown 60s\n          if (\n            code === \"over_email_send_rate_limit\" ||\n            code === 429 ||\n            code === \"email_rate_limit_exceeded\"\n          ) {\n            this.startCooldown(environment.emailSenderCooldown ?? 60);\n          }\n          console.error(\"Error al enviar el código de verificación:\", error);\n        } else {\n          //origin es el type\n          this.routerBj.navigate([\"auth\", \"comprobar-codigo\"], {\n            queryParams: {\n              email: this.registerForm.value.email,\n              documento: this.registerForm.value.documentNumber,\n              origin: \"register\",\n            },\n          });\n        }\n      });\n  }\n\n  onSubmit() {\n    this.registerForm.markAllAsTouched();\n    if (this.registerForm.invalid) return;\n\n    if (this.clickOnCheckbox && this.registerForm.valid && !this.isCooldown) {\n      this.consultarEstadoCodigo();\n    }\n  }\n\n  // Keep only digits when the user types\n  onDocumentInput(event: Event) {\n    const input = event.target as HTMLInputElement;\n    const sanitized = input.value.replace(/\\D+/g, \"\");\n    if (sanitized !== input.value) {\n      // update the native input and the form control without emitting another input event\n      input.value = sanitized;\n      this.registerForm.controls[\"documentNumber\"].setValue(sanitized, {\n        emitEvent: false,\n      });\n    }\n  }\n\n  // Handle paste: filter out non-digits\n  onDocumentPaste(event: ClipboardEvent) {\n    const paste = event.clipboardData?.getData(\"text\") ?? \"\";\n    const sanitized = paste.replace(/\\D+/g, \"\");\n    if (sanitized !== paste) {\n      event.preventDefault();\n      // insert sanitized value at cursor position\n      const input = event.target as HTMLInputElement;\n      const start = input.selectionStart ?? input.value.length;\n      const end = input.selectionEnd ?? input.value.length;\n      const newValue = input.value.slice(0, start) + sanitized + input.value.slice(end);\n      input.value = newValue.replace(/\\D+/g, \"\");\n      this.registerForm.controls[\"documentNumber\"].setValue(input.value, {\n        emitEvent: false,\n      });\n    }\n  }\n\n  private startCooldown(seconds: number) {\n    this.isCooldown = true;\n    this.cooldownSeconds = seconds;\n    if (this.cooldownTimer) {\n      clearInterval(this.cooldownTimer);\n    }\n    this.cooldownTimer = setInterval(() => {\n      this.cooldownSeconds -= 1;\n      if (this.cooldownSeconds <= 0) {\n        this.isCooldown = false;\n        clearInterval(this.cooldownTimer);\n        this.cooldownTimer = null;\n      }\n    }, 1000);\n  }\n}\n","<form [formGroup]=\"registerForm\" class=\"register-form\">\n  <h2>Registrarme</h2>\n  <!-- ----------------------------------------------------------- -->\n  <mat-form-field class=\"wid-100\">\n    <mat-label> Número de documento</mat-label>\n    <mat-icon matPrefix class=\"prefix-icon\">badge</mat-icon>\n    <input\n      matInput\n      placeholder=\" Número de documento sin puntos ni comas\"\n      formControlName=\"documentNumber\"\n      inputmode=\"numeric\"\n      (input)=\"onDocumentInput($event)\"\n      (paste)=\"onDocumentPaste($event)\"\n    />\n    @if (registerForm.controls['documentNumber'].hasError('required')) {\n    <mat-error\n      >El número de documento es <strong>obligatorio</strong>\n    </mat-error>\n    }\n    @else if(registerForm.controls['documentNumber'].hasError('pattern') ) {\n      <mat-error>Ingresa un número de documento válido </mat-error>\n    }\n  </mat-form-field>\n  <!-- ---------------------------------------------------------- -->\n  <mat-form-field class=\"wid-100\">\n    <mat-label> Correo electrónico </mat-label>\n    <mat-icon matPrefix class=\"prefix-icon\">mail</mat-icon>\n    <input matInput placeholder=\"ejemplo@gmail.com\" formControlName=\"email\">\n    @if (registerForm.controls['email'].hasError('pattern') && !registerForm.controls['email'].hasError('required')) {\n      <mat-error>Por favor ingresa un email válido</mat-error>\n    }\n    @if (registerForm.controls['email'].hasError('required')) {\n      <mat-error>El email es <strong>obligatorio</strong></mat-error>\n    }\n  </mat-form-field>\n        <!-- ------------------------------------------------------------ -->\n        <mat-checkbox (change)=\"clickOnCheckbox=!clickOnCheckbox\">\n          <span>\n            Declaro que he leído y aceptado los\n            <a routerLink=\"/terminos-condiciones\">términos y condiciones </a>\n            aquí establecidos. \n          </span>\n        </mat-checkbox>\n        <mat-divider></mat-divider>\n        <!-- --------------------------------------------------------------- -->\n        <span>\n        <br class=\"align-center\">\n          Para el proceso de registro se debe verificar su correo electrónico con un código de verificación.\n        </span>\n        <!-- ------------------------------------------------------------- -->\n        <div>\n            <!--TODO: [routerLink]=\"['../hoja-de-vida']\" este router va en los atricutos del boton pero falta que vaya a la ruta codigo de verificacion -->\n            <!-- routerLinkActive=\"router-link-active\" >  -->\n          <button class=\"mar-05rem\"\n            mat-flat-button\n            type=\"submit\"\n            (click)=\"onSubmit()\"\n            [disabled]=\"!registerForm.valid || !clickOnCheckbox || isCooldown\"\n            \n            >\n            @if (!isCooldown) { Enviar código }\n            @else { Reintenta en {{ cooldownSeconds }}s }\n          </button>\n        </div>\n        <!-- ------------------------------------------------------------- -->\n</form>\n","import { Component, inject } from \"@angular/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatDivider } from \"@angular/material/divider\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatIcon } from '@angular/material/icon';\nimport { ReactiveFormsModule, Validators, FormBuilder, FormGroup, FormControl } from \"@angular/forms\";\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { MatCard, MatCardModule } from \"@angular/material/card\";\nimport { ConfirmDialogService } from \"../../../../core/services\";\nimport { RecuperarCuentaComponent } from \"../recuperar-cuenta/recuperar-cuenta.component\";\n\n@Component({\n  selector: \"app-iniciar-sesion\",\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatDivider,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatIcon,\n    MatTooltipModule,\n    MatCardModule,\n],\n  templateUrl: \"./iniciar-sesion.component.html\",\n  styleUrl: \"./iniciar-sesion.component.scss\",\n})\nexport class IniciarSesionComponent {\n  private readonly authService = inject(AuthService);\n  private readonly router = inject(Router);\n  private readonly modal=inject(ConfirmDialogService);\n\n  loginForm: FormGroup;\n  hidePassword = true;\n  clickOnOlvidarContrasena=false;\n  //control validator del email de recuperar cuenta\n  emailControl = new FormControl('', [Validators.required, Validators.email]);\n\n\n  get isValidInput(): boolean {\n    const control = this.loginForm?.get('email');\n    if (!control || !control.value) return false;\n    \n    const value = control.value.toString();\n    return this.isEmail(value) || this.isDocument(value);\n  }\n\n  get isValidEmail(): boolean {\n    const control = this.loginForm?.get('email');\n    if (!control || !control.value) return false;\n    \n    return this.isEmail(control.value.toString());\n  }\n\n  private isEmail(value: string): boolean {\n    return /^[a-zA-Z0-9._%+*-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(value);\n  }\n\n  private isDocument(value: string): boolean {\n    return /^\\d{8,10}$/.test(value);\n  }\n\n  get getErrorMessage(): string {\n    const control = this.loginForm?.get('email');\n    if (!control) return '';\n    if (!control.value) return 'Este campo es requerido';\n    if (!this.isEmail(control.value) && !this.isDocument(control.value)) {\n      return 'Ingresa un correo electrónico válido o un número de documento (8-10 dígitos)';\n    }\n    return '';\n  }\n\n  get tooltipMessage(): string {\n    if (!this.loginForm?.get('email')?.value) {\n      return 'Debes ingresar un correo electrónico o número de documento';\n    }\n    const value = this.loginForm?.get('email')?.value;\n    if (!value) {\n      return 'Debes ingresar un correo electrónico para recuperar tu contraseña';\n    }\n    if (this.isDocument(value)) {\n      return 'Para recuperar tu contraseña, debes ingresar un correo electrónico';\n    }\n    if (!this.isValidEmail) {\n      return 'Ingresa un correo electrónico válido para recuperar tu contraseña';\n    }\n    return '';\n  }\n  \n  constructor(private fb:FormBuilder){\n    // console.log(\"INIT SESION\");\n    this.loginForm=this.fb.group({\n      email:[\n        '',\n        [\n          Validators.required\n        ]\n      ],\n      password:[\n        '',\n        [\n          Validators.required\n        ]\n      ]\n    })\n    \n    // this.loginForm.controls[\"password\"].touched\n  }\n  // -----------------\n  onSubmit(){\n    if(this.loginForm.valid){\n      console.info('la información del formulario es:', this.loginForm.value);\n      this.authService.signIn(\n        this.loginForm.value.email,\n        this.loginForm.value.password\n      ).then(({ user, error }) => {\n        if (error) {\n          console.error(\"Error al iniciar sesión:\", error);\n          //TODO: mostrar la notificacion de error\n        } else {\n          console.log(\"Usuario autenticado:\", user);\n          // Redirigir a la hoja de vida o realizar otra acción\n          this.router.navigate(['/hoja-de-vida'],{ queryParams:{email: this.loginForm.value.email, origin:\"login\" }});\n          this.loginForm.reset();\n        }\n      });\n    }\n  }\n  // ponerParametros(){\n  //  this.router.navigate(['/hoja-de-vida'],{ queryParams:{email: this.loginForm.value.email, origin:\"login\" }});\n  // }\n  // llamarModal(){\n  //   this.modal.open({\n  //     title:\"Recuperar contraseña\",\n  //     type:\"confirm\",\n  //     component:ModalRecuperarCuentaComponent,\n  //     primaryText:\"Reestablecer contraseña\",\n  //   })\n\n  // }\n}\n  ","<!-- --------------------------------------------form------------------------------------------------------------ -->\n<form [formGroup]=\"loginForm\" class=\"login-form\">\n  <h2>Iniciar sesión</h2>\n  <!-- ------------------------------------------------ ---------- -->\n  <mat-form-field required class=\"wid-100\">\n    <mat-label> Correo electrónico o número de documento </mat-label>\n    <mat-icon matPrefix class=\"prefix-icon\">person</mat-icon>\n    <input\n      matInput\n      placeholder=\"ejemplo@gmail.com o número de documento\"\n      formControlName=\"email\"\n    />\n    @if (loginForm.get('email')?.invalid) {\n    <mat-error>\n      {{ getErrorMessage }}\n    </mat-error>\n    }\n  </mat-form-field>\n  <!-- ----------------------------------------------------------- -->\n  <mat-form-field required class=\"wid-100\">\n    <mat-label> Contraseña </mat-label>\n    <mat-icon matPrefix class=\"prefix-icon\">lock</mat-icon>\n    <input\n      matInput\n      [type]=\"hidePassword ? 'password' : 'text'\"\n      [readonly]=\"false\"\n      placeholder=\"Ingresa tu contraseña\"\n      formControlName=\"password\"\n    />\n    <button\n      matSuffix\n      mat-icon-button\n      (click)=\"hidePassword = !hidePassword\"\n      type=\"button\"\n    >\n      <mat-icon>{{ hidePassword ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n    </button>\n  </mat-form-field>\n  <!-- ------------------------------------------------------------ -->\n  <!--[state]=\"{ email: loginForm.get('email')?.value }\"\n  [class.disabled]=\"!isValidEmail\"\n  -->\n  <!-- [routerLink]=\"isValidEmail ? '/auth/recuperar-contrasena' : null\" -->\n  <a \n    [routerLink]=\" '/auth/recuperar-contrasena'\"\n    class=\"non-space main-color password-reset-link\"\n  >\n    ¿Has olvidado la contraseña?\n  </a>\n<!-- ------------------------------------------------------------ -->\n  <button\n    class=\"mar-05rem\"\n    mat-flat-button\n    [disabled]=\"loginForm.invalid\"\n    (click)=\"onSubmit()\"\n  >\n    Iniciar sesión\n  </button>\n  <!-- ------------------------------------------------------------- -->\n  <mat-divider></mat-divider>\n</form>\n<!-- ----------------------------------------------------------------------------------------------------------------------- -->\n","import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport {\n  MatExpansionPanel,\n  MatExpansionModule,\n  MatAccordion,\n} from \"@angular/material/expansion\";\nimport { RegistrarseComponent } from \"../registrarse/registrarse.component\";\nimport { IniciarSesionComponent } from \"../iniciar-sesion/iniciar-sesion.component\";\n\n@Component({\n  selector: \"app-full-container-auth\",\n  imports: [\n    MatExpansionPanel,\n    MatExpansionModule,\n    RegistrarseComponent,\n    IniciarSesionComponent,\n    MatAccordion\n  ],\n  templateUrl: \"./full-container-auth.component.html\",\n  styleUrl: \"./full-container-auth.component.scss\",\n})\nexport class FullContainerAuthComponent {}\n","<div class=\"full-container\">\n    <div class=\"left-container\">\n      <img src=\"assets/img/banco_info_perfiles.svg\" class=\"img-perfiles\" />\n      <div class=\"text-perfiles\">\n        <h3>Sistema hoja de vida para el talento local</h3>\n            Este sistema tiene como objetivo ampliar las oportunidades laborales\n            para los profesionales de la región mediante la recopilación de\n            información en una base de datos centralizada. \n            <br>Al registrarse en la\n            plataforma y completar el formulario, su perfil quedará disponible para\n            consulta cuando la alcaldía requiera cubrir una vacante en una profesión\n            específica. En ese momento, se revisará la información registrada en la\n            base de datos y se seleccionarán candidatos para participar en un\n            proceso deselección esta iniciativa, buscamos reunir y organizar las\n            ofertas laborales en un único espacio, facilitando la conexión entre\n            talento local y oportunidades de empleo.\n      </div>\n    </div>\n    <!---------------------------------------------------------------------------------------  -->\n    <div class=\"right-container\">\n      <!-- ------------------------------ iniciar sesion ----------------------- -->\n      <mat-accordion [multi]=\"false\">\n        <mat-expansion-panel [expanded]=\"true\">\n          <mat-expansion-panel-header class=\"panel-description\">\n            <mat-panel-title> Iniciar sesión </mat-panel-title>\n            <mat-panel-description>\n              Acá podrás registrar tu hoja de vida\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n            <ng-template matExpansionPanelContent> <!--TODO terminar de hacer el lazyloading con el ngtemplate-->\n\n              <app-iniciar-sesion></app-iniciar-sesion>\n\n            </ng-template>\n          </mat-expansion-panel>\n        <!------------------------------------------------------- -->\n    <!-- ------------------------------- registrarse ------------------------ -->\n        <mat-expansion-panel >\n          <mat-expansion-panel-header class=\"panel-description\">\n            <mat-panel-title> Registarse </mat-panel-title>\n              <mat-panel-description>\n                Acá podrás crear tu usuario para ingresar a BIPAL\n              </mat-panel-description>\n                </mat-expansion-panel-header>\n                <!--registrarse componente-->\n                <ng-template matExpansionPanelContent>\n                  <app-registrarse></app-registrarse>\n                </ng-template>\n                </mat-expansion-panel>\n      </mat-accordion>\n      <!------------------------------------------------------- -->\n    </div>\n  </div>\n","import { CanActivateFn, Router, UrlTree } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\nimport { inject } from \"@angular/core\";\nimport { LoadingService } from \"../services\";\n\n/**\n * Guard that redirects authenticated users away from the login page.\n */\nexport const userRedirectAutenticated: CanActivateFn = async (_route, state) => {\n  const auth = inject(AuthService);\n  const router = inject(Router);\n  const loading = inject(LoadingService);\n\n  loading.show();\n  try {\n    // Asegura tener la sesión actual (si existe)\n    const session = await auth.ensureSessionLoaded();\n    if (!session) return true; // sin sesión: permitir navegar (por ejemplo login)\n\n    // Permitir permanecer en la ruta de reset de contraseña para evitar bucles y redirecciones no deseadas\n    if (state.url.startsWith('/auth/reset-password')) {\n      return true;\n    }\n\n    // Si hay sesión, revisar si es recovery\n    if (auth.isRecoverySession) {\n      // Si ya estamos en la ruta objetivo, permitir paso para evitar bucles\n      if (state.url.startsWith('/auth/reset-password')) return true;\n      // Redirigir devolviendo un UrlTree\n      return router.createUrlTree(['/auth/reset-password']);\n    }\n\n    // Si hay sesión, revisar metadata para saber si es una sesión de onboarding\n    const { data, error } = await auth.profile();\n    if (error) {\n      console.error(\"Error obteniendo el perfil del usuario\", error);\n      // En caso de error al obtener perfil, no bloquear: permitir continuar\n      return true;\n    }\n\n    const onboardingStep = (data?.user?.user_metadata as any)?.onboarding_step as\n      | \"otp_verified\"\n      | \"completed\"\n      | undefined;\n      console.log('onboardingStep', onboardingStep);\n    const emailConfirmedAt = (data?.user as any)?.email_confirmed_at as string | null | undefined;\n\n    // Si el onboarding NO ha terminado, enviar a crear-clave\n    if ((onboardingStep && onboardingStep !== \"completed\") || !emailConfirmedAt) {\n      // Usuario aún está en el flujo de creación de cuenta (ej. crear contraseña)\n      if (state.url.startsWith('/auth/crear-clave')) return true; // evitar bucle\n      return router.createUrlTree([\"/auth/crear-clave\"]);\n    }\n\n    // Sesión completa: redirigir a la hoja de vida\n    return router.createUrlTree([\"/hoja-de-vida/personal\"]);\n  } catch (err) {\n    console.error(\"Error checking authentication\", err);\n    return true;\n  } finally {\n    loading.hide();\n  }\n};\n","// Aqui iran las validaciones individuales de la contraseña\nimport { AbstractControl, MinLengthValidator, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n/** POR QUE IMPORTARLOS?\n * AbstractControl: 👁️ Lee los estados del elemento, como: (control.touched, control.valid, etc.) o acceder al valor actual \"control.value\"\n * ValidatorError: 🪧 Se usa por Angular para renderizar los mensajes de error en tu HTML\n *                 📦 Permite retornar objetos como { uppercase: true } o { minLength: { requiredLength: 8, actualLength: 5 } }\n * ValidatorFn: 📌 Declarar funciones que se pueden usar en Validators.compose\n *              🧱 Definir validators reutilizables y estáticos en clases\n */\n\nexport class PasswordValidators{\n    static matchPassword(controlName: string): any | string {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const password = control.get(controlName);\n            const confirmPassword = control.get('confirmPassword');\n            if (password?.value !== confirmPassword?.value) {\n                return { passwordMismatch: true };\n            }\n            return null;\n        };\n    } \n\n    static UpperCaseCheck():ValidatorFn{ // validatorFn dice: \"Esta función va a devolver un validador que Angular acepte.\"\n        return(control: AbstractControl): ValidationErrors| null=>{ //el objeto control es el asignado al input  \n            /* \n            * Aqui va la validacion como tal, el corazon de la función\n            * El validador usa .test() para verificar si se cumple la condición de tener mayúsculas. \n            * Si se cumple, retorna null (es decir, sin errores). Si no se cumple, retorna un objeto con\n            * { uppercase: true }, lo cual representa un error en el campo uppercase dentro de ValidatorErrors.\n            * En este contexto, \"uppercase\": true significa que la validación ha fallado para ese criterio.\n            */\n            return /[A-Z]/.test(control.value)? null : {uppercase:true}//uppercase:true indica que se cumple que fallo, es true el failed\n            //[A-Z]/.test(\"contraseña123\") → devuelve false\n        }\n    }\n    static numberCheck():ValidatorFn{\n        return(control:AbstractControl): null| ValidationErrors =>{\n            return /\\d/.test(control.value)? null: {number: true}\n        }\n    }\n    \n    static lengthCheck(minLength: number = 6):ValidatorFn{\n        return(input:AbstractControl): null| ValidationErrors=>{\n            return (input.value?.length || 0) >= minLength ? null : {minLength:true}\n        }\n    }\n    \n}\n","import { Component, input } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIcon, MatIconModule } from \"@angular/material/icon\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { NotificationService } from \"../../../../core/services\";\nimport { PasswordValidators } from \"../../Validators/passwordValidators\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatInputModule } from \"@angular/material/input\";\n\n@Component({\n  selector: \"app-password-form\",\n  imports: [\n    MatFormFieldModule,\n    MatIcon,\n    MatInputModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n  ],\n  templateUrl: \"./password-form.component.html\",\n  styleUrls: [\"./password-form.component.scss\"]\n})\nexport class PasswordFormComponent {\n  form: FormGroup;\n  hidePassword = true;\n  hideConfirmPassword = true;\n  isSubmitting = false; // Para controlar el estado de loading\n\n  // parámetros de entrada\n  email = input<string>();\n  numeroDocumento = input<number>();\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private notificationService: NotificationService,\n    private auth: AuthService\n  ) {\n    this.form = this.fb.group(\n      {\n        password: [\n          \"\",\n          [\n            Validators.required,\n            // Caracteres validos del regex: cualquiera que no sea emojis, espacios o cosas raras\n            Validators.pattern(\n              \"^[a-zA-Z0-9!@#$%^&*()_+\\\\-=[\\\\]{}|:;\\\"'<>,.?\\\\\\\\/]+$\"\n            ),\n            PasswordValidators.UpperCaseCheck(),\n            PasswordValidators.lengthCheck(6),\n            PasswordValidators.numberCheck(),\n          ],\n        ],\n        confirmPassword: [\"\", [Validators.required]],\n      },\n      {\n        validators: PasswordValidators.matchPassword(\"password\"),\n      }\n    );\n  }\n  //---------------------------checkList---------------------------------------------------------------------\n  get hasMinLength(): boolean {\n    const password = this.form.get(\"password\")?.value;\n    return password ? password.length >= 6 : false;\n  }\n\n  get hasUpperCase(): boolean {\n    const password = this.form.get(\"password\")?.value;\n    return password ? /[A-Z]/.test(password) : false;\n  }\n\n  get hasNumber(): boolean {\n    const password = this.form.get(\"password\")?.value;\n    return password ? /[0-9]/.test(password) : false;\n  }\n\n  get hasValidCharacters(): boolean {\n    const password = this.form.get(\"password\")?.value;\n    return password\n      ? /[!@#$%^&*()_+\\-=\\[\\]{}|:;\"'<>,.?\\\\/]+/.test(password)\n      : false;\n  }\n\n  get passwordsMatch(): boolean {\n    const password = this.form.get(\"password\")?.value;\n    const confirmPassword = this.form.get(\"confirmPassword\")?.value;\n    return password && confirmPassword ? password === confirmPassword : false;\n  }\n\n  get isPasswordNotEmpty(): boolean {\n    const password = this.form.get(\"password\")?.value;\n    return password ? password.length > 0 : false;\n  }\n\n  onSubmit() {\n    if (this.form.valid && !this.isSubmitting) {\n      this.isSubmitting = true;\n      const password: string = this.form.value.password;\n\n      this.auth\n        .resetPasswordWithNewPassword(password)\n        .then(({ error }) => {\n          if (error) {\n            return false;\n          }\n          // Redirigir al login después de actualizar la contraseña\n          return this.router.navigate([\"/auth\"], { replaceUrl: true });\n        })\n        .catch(() => {\n          // La notificación de error ya se mostró en el servicio\n        })\n        .finally(() => {\n          this.isSubmitting = false;\n        });\n    }\n  }\n}\n","<form [formGroup]=\"form\" class=\"password-form\">\n  <!-- Lista de validaciones -->\n  <div class=\"password-requirements\">\n    <p class=\"requirements-title\">La contraseña debe cumplir:</p>\n    <ul>\n      <li [class.valid]=\"hasMinLength\">\n        <mat-icon>{{\n          hasMinLength ? \"check_circle\" : \"radio_button_unchecked\"\n        }}</mat-icon>\n        Al menos 6 caracteres\n      </li>\n      <li [class.valid]=\"hasUpperCase\">\n        <mat-icon>{{\n          hasUpperCase ? \"check_circle\" : \"radio_button_unchecked\"\n        }}</mat-icon>\n        Al menos una mayúscula\n      </li>\n      <li [class.valid]=\"hasNumber\">\n        <mat-icon>{{\n          hasNumber ? \"check_circle\" : \"radio_button_unchecked\"\n        }}</mat-icon>\n        Al menos un número\n      </li>\n      <li [class.valid]=\"hasValidCharacters\">\n        <mat-icon>{{\n          hasValidCharacters ? \"check_circle\" : \"radio_button_unchecked\"\n        }}</mat-icon>\n        Al menos un carácter especial\n      </li>\n    </ul>\n  </div>\n\n  <mat-form-field required class=\"wid-100\">\n    <mat-label>Nueva contraseña</mat-label>\n    <mat-icon matPrefix class=\"prefix-icon\">lock</mat-icon>\n    <input\n      matInput\n      [type]=\"hidePassword ? 'password' : 'text'\"\n      autocomplete=\"off\"\n      [readonly]=\"false\"\n      formControlName=\"password\"\n    />\n    <button\n      matSuffix\n      mat-icon-button\n      (click)=\"hidePassword = !hidePassword\"\n      type=\"button\"\n    >\n      <mat-icon>{{ hidePassword ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n    </button>\n  </mat-form-field>\n\n  <mat-form-field required class=\"wid-100\">\n    <mat-label>Confirmar contraseña</mat-label>\n    <mat-icon matPrefix class=\"prefix-icon\">lock</mat-icon>\n    <input\n      matInput\n      [type]=\"hideConfirmPassword ? 'password' : 'text'\"\n      autocomplete=\"off\"\n      [readonly]=\"false\"\n      placeholder=\"Ingresa la misma contraseña\"\n      formControlName=\"confirmPassword\"\n    />\n    <button\n      matSuffix\n      mat-icon-button\n      (click)=\"hideConfirmPassword = !hideConfirmPassword\"\n      type=\"button\"\n    >\n      <mat-icon>{{\n        hideConfirmPassword ? \"visibility_off\" : \"visibility\"\n      }}</mat-icon>\n    </button>\n  </mat-form-field>\n\n  @if (form.hasError('passwordMismatch')) {\n  <mat-error style=\"text-align: center;\">Las contraseñas deben coincidir</mat-error>\n  }\n</form>\n","import { Component, inject, input, ViewChild } from \"@angular/core\";\nimport { MatCard } from \"@angular/material/card\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  ReactiveFormsModule,\n} from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { PasswordValidators } from \"../../Validators/passwordValidators\";\nimport { MatDivider } from \"@angular/material/divider\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { NgIf } from \"@angular/common\";\nimport { NotificationService } from \"../../../../core/services/notification.service\";\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { PasswordFormComponent } from \"../../components/password-form/password-form.component\";\n\n@Component({\n  selector: \"app-reset-pasword-component\",\n  imports: [\n    MatInputModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatDivider,\n    MatFormFieldModule,\n    MatButtonModule,\n    NgIf,\n    PasswordFormComponent,\n  ],\n  templateUrl: \"./reset-pasword-component.component.html\",\n  styleUrl: \"./reset-pasword-component.component.scss\",\n})\nexport class ResetPaswordComponentComponent {\n  isSubmitting = false; // Para controlar el estado de loading\n\n  private auth = inject(AuthService);\n  private router = inject(Router);\n\n  @ViewChild(PasswordFormComponent)\n  passwordFormComponent!: PasswordFormComponent;\n\n  get codeForm() {\n    return this.passwordFormComponent?.form;\n  }\n\n  onSubmit() {\n    if (this.codeForm?.valid && !this.isSubmitting) {\n      this.isSubmitting = true;\n      const password: string = this.codeForm.value.password;\n\n      this.auth\n        .resetPasswordWithNewPassword(password)\n        .then(({ error }) => {\n          if (error) {\n            return false;\n          }\n          // Redirigir al login después de actualizar la contraseña\n          return this.router.navigate([\"/auth\"], { replaceUrl: true });\n        })\n        .catch(() => {\n          // La notificación de error ya se mostró en el servicio\n        })\n        .finally(() => {\n          this.isSubmitting = false;\n        });\n    }\n  }\n\n  // Permite cancelar el flujo de recuperación y cerrar sesión explícitamente\n  cancelRecovery() {\n    this.auth.signOut().finally(() => {\n      this.router.navigate([\"/auth\"], { replaceUrl: true });\n    });\n  }\n}\n","<div class=\"container-reset\">\n  <h2>Restablecer contraseña</h2>\n\n  <app-password-form></app-password-form>\n\n  <button\n    mat-flat-button\n    class=\"mar-05rem\"\n    [disabled]=\"!codeForm?.valid || isSubmitting\"\n    (click)=\"onSubmit()\"\n  >\n    <span *ngIf=\"!isSubmitting\">Cambiar contraseña</span>\n    <span *ngIf=\"isSubmitting\">Cambiando contraseña...</span>\n  </button>\n\n  <mat-divider></mat-divider>\n\n  <button mat-stroked-button color=\"primary\" (click)=\"cancelRecovery()\">\n    No cambiar clave\n  </button>\n</div>\n","import { Component, inject } from \"@angular/core\";\nimport { MatFormField } from \"@angular/material/select\";\nimport { MatCard, MatCardModule } from \"@angular/material/card\";\nimport {\n  FormControl,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { MatError, MatInput, MatLabel } from \"@angular/material/input\";\nimport { MatButton } from \"@angular/material/button\";\nimport { Router } from \"@angular/router\";\nimport { MatIcon } from \"@angular/material/icon\";\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\n\n@Component({\n  selector: \"app-recuperar-cuenta\",\n  imports: [\n    MatCardModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatLabel,\n    MatInput,\n    MatButton,\n    MatCard,\n    MatIcon,\n    MatError,\n  ],\n  templateUrl: \"./recuperar-cuenta.component.html\",\n  styleUrl: \"./recuperar-cuenta.component.scss\",\n})\nexport class RecuperarCuentaComponent {\n  private auth = inject(AuthService);\n  private router = inject(Router);\n  //control validator del email de recuperar cuenta\n  emailControl = new FormControl(\"\", [Validators.required, Validators.email]);\n  recuperarCuentaClickeado = false;\n\n  recuperarCuenta() {\n    this.emailControl.markAsUntouched();\n    if (this.emailControl.valid) {\n      this.auth.sendPasswordReset(this.emailControl.value).then(({ error }) => {\n        if (error) return;\n\n        this.router.navigate([\"/auth/comprobar-codigo\"], {\n          state: { email: this.emailControl.value },\n          queryParams: { email: this.emailControl.value, origin: 'reset' },\n        });\n      });\n    }\n  }\n  cerrarModal() {\n    this.router.navigate([\"/auth/\"]);\n  }\n}\n","<mat-card class=\"modal-card modal-overlay\" appearance=\"outlined\">\n  <mat-card-header>\n    <mat-card-title> Recuperar contraseña</mat-card-title>\n    <mat-card-content>\n      <p>Ingrese los siguientes datos para crear una nueva contraseña</p>\n    </mat-card-content>\n  </mat-card-header>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Correo electrónico</mat-label>\n    <mat-icon matPrefix class=\"prefix-icon\">person</mat-icon>\n    <input\n      matInput\n      placeholder=\"Ingresa tu correo\"\n      [formControl]=\"emailControl\"\n    />\n    @if (emailControl.invalid && emailControl.touched) {\n    <mat-error *ngIf=\"emailControl.hasError('required')\">\n      El correo es obligatorio\n    </mat-error>\n    <mat-error *ngIf=\"emailControl.hasError('email')\">\n      Ingresa un correo válido\n    </mat-error>\n    }\n  </mat-form-field>\n\n  <mat-card-actions class=\"botones-acciones\">\n    <button mat-stroked-button (click)=\"cerrarModal()\">Cancelar</button>\n    <button\n      mat-flat-button\n      [disabled]=\"emailControl.invalid\"\n      (click)=\"recuperarCuenta()\"\n    >\n      Restablecer contraseña\n    </button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, inject, OnInit, signal } from '@angular/core';\nimport { MatCard } from \"@angular/material/card\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@Component({\n  selector: 'app-container-auth',\n  imports: [MatCard, MatButtonModule, MatIconModule],\n  templateUrl: './container-auth.component.html',\n  styleUrl: './container-auth.component.scss'\n})\nexport class ContainerAuthComponent implements OnInit {\n  //injectamos las dependencias\n  private readonly route = inject(ActivatedRoute);\n  private readonly router = inject(Router);\n\n  emailUser =  signal<string>(\"\");\n  documentoUser = signal<number>(null);\n  comprobarCodigoP:boolean=true;\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.emailUser.set(params['email'] || \"\");\n      this.documentoUser.set(parseInt(params['documento']) || null);\n    });\n    console.log(\"Email recibido en crear-usuario:\", this.emailUser(), this.documentoUser());\n  }\n\n  volver() {\n    this.router.navigate(['/auth']);\n  }\n\n  verificarCodigoValido( mostrarComprobarCodigo:boolean) {\n    // console.log(evt);\n    this.comprobarCodigoP=mostrarComprobarCodigo;\n  }\n\n}\n","<div>\n  <mat-card class=\"mat-card-container\">\n    <img src=\"assets/img/banco_info_perfiles.svg\" class=\"img-perfiles\" />\n    <div>\n      <br />\n      <button mat-button (click)=\"volver()\">\n        <mat-icon>arrow_back</mat-icon>\n        volver\n      </button>\n      <!-- contenido aqui, ojito con el height porque esta a la\n            <br> fuerza y no depende del tamaño de los componentes que van a qui adentro xd -->\n      <!-- @if (comprobarCodigoP) {\n                <app-comprobar-codigo [email]=\"emailUser()\"  (next)=\"verificarCodigoValido($event)\"> </app-comprobar-codigo>\n\n            }\n            @else{\n                <app-crear-clave></app-crear-clave>\n            } -->\n      <ng-content></ng-content>\n    </div>\n  </mat-card>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  inject,\n  input,\n  Input,\n  Output,\n} from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport {\n  FormControl,\n  FormArray,\n  Validators,\n  ReactiveFormsModule,\n  FormBuilder,\n  FormGroup,\n} from \"@angular/forms\";\nimport { MatButton, MatButtonModule } from \"@angular/material/button\";\nimport { MatCard } from \"@angular/material/card\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { ContainerAuthComponent } from \"../container-auth/container-auth.component\";\n\n@Component({\n  selector: \"app-comprobar-codigo\",\n  imports: [\n    MatCard,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    ContainerAuthComponent,\n  ],\n  templateUrl: \"./comprobar-codigo.component.html\",\n  styleUrl: \"./comprobar-codigo.component.scss\",\n})\nexport class ComprobarCodigoComponent {\n  email = input<string>(\"\");\n\n  @Input() origin: \"reset\" | \"create\" = \"create\";\n  // form:FormControl=new form\n  formCode: FormGroup;\n  // Estado derivado para mensajes y navegación\n  currentOrigin: \"reset\" | \"create\" = \"create\";\n  emailText = \"\";\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authServ: AuthService\n  ) {\n    this.formCode = this.fb.group({\n      digitsGroup: this.fb.array([\n        this.fb.control(\"\", [Validators.required, Validators.pattern(/^\\d$/)]),\n        this.fb.control(\"\", [Validators.required, Validators.pattern(/^\\d$/)]),\n        new FormControl(\"\", [Validators.required, Validators.pattern(/^\\d$/)]),\n        new FormControl(\"\", [Validators.required, Validators.pattern(/^\\d$/)]),\n        new FormControl(\"\", [Validators.required, Validators.pattern(/^\\d$/)]),\n        new FormControl(\"\", [Validators.required, Validators.pattern(/^\\d$/)]),\n      ]),\n    });\n\n    // Inicializar origen y email desde query params (fallback al input())\n    const qp = this.route.snapshot.queryParamMap;\n    this.currentOrigin =\n      (qp.get(\"origin\") as \"reset\" | \"create\") ?? this.origin;\n    this.emailText = qp.get(\"email\") ?? this.email();\n  }\n  //este get accede a la informacion del controler digitGroup del formulario formcode\n  get digitGroup(): FormArray {\n    return this.formCode.get(\"digitsGroup\") as FormArray;\n  }\n  verificarCodigo() {\n    if (this.formCode.valid) {\n      /**si las casillas no infringieron ningun validador, entonces se procede a concatenar los digitos ingresaados\n      e igualarlos a la variable codigoIngresadoH*/\n      const codigoIngresadoH = this.digitGroup.value.join(\"\");\n      console.log(\"el codigo ingresado es: \", codigoIngresadoH, \"?\");\n      //------------------------------- subscripcion a los parametros de la direccion ----------------------------------\n      const originParam = this.currentOrigin;\n      const email = this.emailText;\n\n      if (originParam === \"reset\") {\n        // Verificación de código de recuperación\n        this.authServ\n          .verifyRecoveryCode(email, codigoIngresadoH)\n          .then((res) => {\n            if (res.error || !res.verified) return;\n            this.router.navigate([\"/auth/reset-password\"], {\n              queryParams: { email },\n            });\n          });\n      } else {\n        // Verificación de código de onboarding/crear usuario\n        this.authServ\n          .verifyEmailCode(email, codigoIngresadoH)\n          .then((response) => {\n            if (response.error) {\n              console.error(\n                \"Error al verificar el código:\",\n                response.error.message\n              );\n              return;\n            }\n            this.router.navigate([\"/auth/crear-clave\"], {\n              queryParams: { email },\n            });\n          });\n      }\n    }\n  }\n\n  // Copys dinámicos\n  get heading(): string {\n    return this.currentOrigin === \"reset\"\n      ? \"Código de recuperación\"\n      : \"Código de verificación\";\n  }\n\n  get description(): string {\n    const email = this.emailText;\n    return this.currentOrigin === \"reset\"\n      ? `Si el correo está asociado a un usuario, ingresa el código de recuperación que enviamos a <strong>${email}</strong> para restablecer su contraseña.`\n      : `Ingresa el código de verificación que enviamos a tu <strong>${email}</strong> para continuar con el registro.`;\n  }\n\n  toFormControl(item: any) {\n    return item as FormControl;\n  }\n\n  /**\n   * Maneja el cambio de input para auto-avanzar al siguiente campo\n   * @param event - Evento del input\n   * @param index - Índice del input actual\n   */\n  onInputChange(event: any, index: number): void {\n    const value = event.target.value;\n\n    // Solo permitir números\n    if (value && !/^\\d$/.test(value)) {\n      event.target.value = \"\";\n      this.digitGroup.controls[index].setValue(\"\");\n      return;\n    }\n\n    // Si hay un valor y no es el último input, avanzar al siguiente\n    if (value && index < this.digitGroup.controls.length - 1) {\n      this.focusNextInput(index + 1);\n    }\n  }\n  /**\n   * Maneja las teclas especiales como Backspace y flechas\n   * @param event - Evento del teclado\n   * @param index - Índice del input actual\n   */\n  onKeyDown(event: KeyboardEvent, index: number): void {\n    // Backspace: si el campo está vacío, ir al anterior\n    if (\n      event.key === \"Backspace\" &&\n      !this.digitGroup.controls[index].value &&\n      index > 0\n    ) {\n      this.focusPreviousInput(index - 1);\n    }\n\n    // Flecha derecha: ir al siguiente input\n    if (\n      event.key === \"ArrowRight\" &&\n      index < this.digitGroup.controls.length - 1\n    ) {\n      this.focusNextInput(index + 1);\n    }\n\n    // Flecha izquierda: ir al input anterior\n    if (event.key === \"ArrowLeft\" && index > 0) {\n      this.focusPreviousInput(index - 1);\n    }\n\n    // Solo permitir números, backspace, delete y teclas de navegación\n    const allowedKeys = [\n      \"Backspace\",\n      \"Delete\",\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Tab\",\n    ];\n    if (!allowedKeys.includes(event.key) && !/^\\d$/.test(event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Maneja el pegado de códigos completos\n   * @param event - Evento de pegado\n   */\n  onPaste(event: ClipboardEvent): void {\n    event.preventDefault();\n    const pastedData = event.clipboardData?.getData(\"text\") || \"\";\n\n    // Solo procesar si son exactamente 6 dígitos\n    if (/^\\d{6}$/.test(pastedData)) {\n      const digits = pastedData.split(\"\");\n      digits.forEach((digit, index) => {\n        if (index < this.digitGroup.controls.length) {\n          this.digitGroup.controls[index].setValue(digit);\n        }\n      });\n\n      // Enfocar el último input\n      this.focusNextInput(5);\n    }\n  }\n\n  /**\n   * Enfoca el siguiente input\n   * @param index - Índice del input a enfocar\n   */\n  private focusNextInput(index: number): void {\n    const nextInput = document.querySelector(\n      `#input${index}`\n    ) as HTMLInputElement;\n    if (nextInput) {\n      nextInput.focus();\n      nextInput.select();\n    }\n  }\n\n  /**\n   * Enfoca el input anterior\n   * @param index - Índice del input a enfocar\n   */\n  private focusPreviousInput(index: number): void {\n    const prevInput = document.querySelector(\n      `#input${index}`\n    ) as HTMLInputElement;\n    if (prevInput) {\n      prevInput.focus();\n      prevInput.select();\n    }\n  }\n}\n","<app-container-auth>\n<mat-card class=\"card-container\" appearance=\"outlined\">\n  <h3>{{ heading }}</h3>\n  <div class=\"container-code\">\n    <div class=\"squares-for-code\">\n      @for(control_i of digitGroup.controls; track $index){\n      <mat-form-field appearance=\"outline\" class=\"squares\">\n        <input\n          matInput\n          maxlength=\"1\"\n          [formControl]=\"toFormControl(control_i)\"\n          style=\"text-align: center\"\n          (input)=\"onInputChange($event, $index)\"\n          (keydown)=\"onKeyDown($event, $index)\"\n          (paste)=\"onPaste($event)\"\n          [id]=\"'input' + $index\"\n        />\n\n        <!-- condicionales para acaparar los errores de los matformFields --------------------------------------------------------\n              se accede por medio del get digitGrouo debido a que molesta si se accede a los controls directamente por problema de\n              tipado de que si se accede directamente lo toma como AbstractControl -->\n        <!-- <div class=\"ayuda\">\n              \n              @if (digitGroup.controls[$index].hasError('required')) {\n                  <mat-error> El campo es <strong>obligatorio</strong></mat-error>\n              }\n              Si el usuario entra al input y se sale del mismo a otro campo o fuera del input \n              @else if (digitGroup.controls[$index].hasError('pattern')) {\n                  <mat-error>Ingresa un número de documento válido </mat-error>\n              } \n          </div> -->\n      </mat-form-field>\n      }\n    </div>\n    @if(formCode.invalid && formCode.touched){\n    <div>\n      <mat-error>El campo numérico es obligatorio </mat-error>\n    </div>\n    }\n    <!-- ------------------------------------------------------------------------------------------------------------------------------- -->\n    <br />\n  </div>\n  <span [innerHTML]=\"description\"></span>\n  <br />\n\n  <!-- Botón continuar que navega según el origen -->\n  <button\n    mat-stroked-button\n    (click)=\"verificarCodigo()\"\n    [disabled]=\"formCode.invalid\"\n  >\n    Continuar\n  </button>\n</mat-card>\n</app-container-auth>\n","import { Component, inject, input, ViewChild } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { MatCard } from \"@angular/material/card\";\nimport { PasswordValidators } from \"../../Validators/passwordValidators\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { InformacionPersonalService } from \"../../../hojadevida/services/informacion-personal.service\";\nimport { NgIf } from \"@angular/common\";\nimport { ContainerAuthComponent } from \"../../components/container-auth/container-auth.component\";\nimport { PasswordFormComponent } from \"../../components/password-form/password-form.component\";\nimport { firstValueFrom } from \"rxjs\";\n\n@Component({\n  selector: \"app-crear-clave\",\n  imports: [\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    RouterModule,\n    MatCard,\n    ReactiveFormsModule,\n    ContainerAuthComponent,\n    PasswordFormComponent,\n  ],\n  templateUrl: \"./crear-clave.component.html\",\n  styleUrl: \"./crear-clave.component.scss\",\n})\nexport class CrearClaveComponent {\n  private readonly authService = inject(AuthService);\n  private readonly router = inject(Router);\n  private readonly infoService = inject(InformacionPersonalService);\n\n  isSubmitting = false;\n\n  @ViewChild(PasswordFormComponent)\n  passwordFormComponent!: PasswordFormComponent;\n\n  get codeForm() {\n    return this.passwordFormComponent?.form;\n  }\n\n  crearUsuario() {\n    if (this.codeForm.valid && !this.isSubmitting) {\n      this.isSubmitting = true;\n\n      this.authService\n        .createUserAccount(this.codeForm.value.password)\n        .then(async () => {\n          console.log(\"Usuario creado exitosamente\");\n          // Intentar migración por número de documento si está presente en metadata\n          const numeroDocumento: string | undefined = this.authService.session?.user?.user_metadata?.numeroDocumento;\n          if (numeroDocumento) {\n            try {\n              const migrado = await firstValueFrom(\n                this.infoService.migrarUsuarioPorNumeroDocumento(numeroDocumento)\n              );\n              if (migrado) {\n                // Recargar user para reflejar idPersona actualizado por backend\n                await this.authService.reloadUser();\n              }\n            } catch (e) {\n              console.warn(\"Migración no completada:\", (e as Error).message);\n            }\n          }\n          // Redirigir al usuario a la página principal de hoja de vida\n          this.router.navigate([\"/hoja-de-vida\"], { replaceUrl: true });\n        })\n        .catch((error) => {\n          console.error(\"Error al crear el usuario:\", error);\n          // Manejar el error, mostrar un mensaje al usuario, etc.\n        })\n        .finally(() => {\n          this.isSubmitting = false;\n        });\n    }\n  }\n}\n","<!-- @if () {} if pendiente para que aparezca cuando el input esta siendo tocado -->\n<app-container-auth>\n  <mat-card class=\"mat-card-edited\" appearance=\"outlined\">\n    <section class=\"key-form\">\n      <h2>Crear contraseña</h2>\n\n      <app-password-form></app-password-form>\n\n      <button\n        mat-flat-button\n        [disabled]=\"!codeForm?.valid || isSubmitting\"\n        (click)=\"crearUsuario()\"\n      >\n        @if (!isSubmitting) {\n        <span>Crear usuario</span>\n        } @if (isSubmitting) {\n        <span>Creando usuario...</span>\n        }\n      </button>\n    </section>\n  </mat-card>\n</app-container-auth>\n","import { Routes } from \"@angular/router\";\nimport { LayoutComponent } from \"./layout/layout.component\";\nimport { hojaDeVidaCanActivateChild } from \"./modules/hojadevida/guard/hoja-de-vida-auth.guard\";\nimport { AuthenticationComponent } from \"./modules/auth/authentication.component\";\nimport { ContainerAuthComponent } from \"./modules/auth/components/container-auth/container-auth.component\";\nimport { FullContainerAuthComponent } from \"./modules/auth/components/full-container-auth/full-container-auth.component\";\nimport { userRedirectAutenticated } from \"./core/auth/auth-user.guard\";\nimport { ResetPaswordComponentComponent } from \"./modules/auth/pages/reset-password/reset-pasword-component.component\";\nimport { RecuperarCuentaComponent } from \"./modules/auth/components/recuperar-cuenta/recuperar-cuenta.component\";\nimport { ComprobarCodigoComponent } from \"./modules/auth/components/comprobar-codigo/comprobar-codigo.component\";\nimport { CrearClaveComponent } from \"./modules/auth/pages/crear-clave/crear-clave.component\";\n\nexport const routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"auth\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"terminos-condiciones\",\n    data: {\n      backButton: true\n    },\n    loadComponent: () =>\n      import(\n        \"./modules/hojadevida/pages/terminos-condiciones/terminos-condiciones.component\"\n      ).then((m) => m.TerminosCondicionesComponent),\n  },\n  {\n    path: \"auth\",\n    canActivate: [userRedirectAutenticated],\n    component: AuthenticationComponent,\n    children: [\n      {\n        path: \"\",\n        component: FullContainerAuthComponent,\n      },\n      {\n        path: \"recuperar-contrasena\",\n        component: RecuperarCuentaComponent,\n      },\n      {\n        path:\"reset-password\",\n        component: ResetPaswordComponentComponent,\n      },\n      {\n        path: \"comprobar-codigo\",\n        component: ComprobarCodigoComponent,\n      },\n      {\n        path: \"crear-clave\",\n        component: CrearClaveComponent,\n      },\n    ],\n  },\n  {\n    path: \"hoja-de-vida\",\n    component: LayoutComponent,\n    canActivateChild: [hojaDeVidaCanActivateChild],\n    loadChildren: () =>\n      import(\"./modules/hojadevida/hojadevida.routes\").then(\n        (m) => m.HOJA_DE_VIDA_ROUTES\n      ),\n  },\n];\n","import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, InjectionToken, Inject, Directive, Input, Pipe, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport { of, isObservable, forkJoin, concat, defer } from 'rxjs';\nimport { take, shareReplay, map, concatMap, switchMap } from 'rxjs/operators';\nclass TranslateLoader {}\n/**\n * This loader is just a placeholder that does nothing, in case you don't need a loader at all\n */\nclass TranslateFakeLoader extends TranslateLoader {\n  getTranslation(lang) {\n    void lang;\n    return of({});\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTranslateFakeLoader_BaseFactory;\n    return function TranslateFakeLoader_Factory(__ngFactoryType__) {\n      return (ɵTranslateFakeLoader_BaseFactory || (ɵTranslateFakeLoader_BaseFactory = i0.ɵɵgetInheritedFactory(TranslateFakeLoader)))(__ngFactoryType__ || TranslateFakeLoader);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateFakeLoader,\n    factory: TranslateFakeLoader.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateFakeLoader, [{\n    type: Injectable\n  }], null, null);\n})();\nclass MissingTranslationHandler {}\n/**\n * This handler is just a placeholder that does nothing, in case you don't need a missing translation handler at all\n */\nclass FakeMissingTranslationHandler {\n  handle(params) {\n    return params.key;\n  }\n  static ɵfac = function FakeMissingTranslationHandler_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FakeMissingTranslationHandler)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FakeMissingTranslationHandler,\n    factory: FakeMissingTranslationHandler.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FakeMissingTranslationHandler, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Determines if two objects or two values are equivalent.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties are equal by\n *   comparing them with `equals`.\n *\n * @param o1 Object or value to compare.\n * @param o2 Object or value to compare.\n * @returns true if arguments are equal.\n */\nfunction equals(o1, o2) {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  const t1 = typeof o1,\n    t2 = typeof o2;\n  let length, key, keySet;\n  if (t1 == t2 && t1 == 'object') {\n    if (Array.isArray(o1)) {\n      if (!Array.isArray(o2)) return false;\n      if ((length = o1.length) == o2.length) {\n        for (key = 0; key < length; key++) {\n          if (!equals(o1[key], o2[key])) return false;\n        }\n        return true;\n      }\n    } else {\n      if (Array.isArray(o2)) {\n        return false;\n      }\n      keySet = Object.create(null);\n      for (key in o1) {\n        if (!equals(o1[key], o2[key])) {\n          return false;\n        }\n        keySet[key] = true;\n      }\n      for (key in o2) {\n        if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  return false;\n}\nfunction isDefined(value) {\n  return typeof value !== 'undefined' && value !== null;\n}\nfunction isDict(value) {\n  return isObject(value) && !isArray(value) && value !== null;\n}\nfunction isObject(value) {\n  return typeof value === 'object';\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction mergeDeep(target, source) {\n  const output = Object.assign({}, target);\n  if (!isObject(target)) {\n    return mergeDeep({}, source);\n  }\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isDict(source[key])) {\n        if (key in target) {\n          output[key] = mergeDeep(target[key], source[key]);\n        } else {\n          Object.assign(output, {\n            [key]: source[key]\n          });\n        }\n      } else {\n        Object.assign(output, {\n          [key]: source[key]\n        });\n      }\n    });\n  }\n  return output;\n}\n/**\n * Gets a value from an object by composed key\n * getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'\n * @param target\n * @param key\n */\nfunction getValue(target, key) {\n  const keys = key.split(\".\");\n  key = \"\";\n  do {\n    key += keys.shift();\n    if (isDefined(target) && isDefined(target[key]) && (isDict(target[key]) || isArray(target[key]) || !keys.length)) {\n      target = target[key];\n      key = \"\";\n    } else if (!keys.length) {\n      target = undefined;\n    } else {\n      key += \".\";\n    }\n  } while (keys.length);\n  return target;\n}\n/**\n * Gets a value from an object by composed key\n * parser.setValue({a:{b:{c: \"test\"}}}, 'a.b.c', \"test2\") ==> {a:{b:{c: \"test2\"}}}\n * @param target an object\n * @param key E.g. \"a.b.c\"\n * @param value to set\n */\nfunction setValue(target, key, value) {\n  const keys = key.split('.');\n  let current = target;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    // If we're at the last key, set the value\n    if (i === keys.length - 1) {\n      current[key] = value;\n    } else {\n      // If the key doesn't exist or isn't an object, create an empty object\n      if (!current[key] || !isDict(current[key])) {\n        current[key] = {};\n      }\n      current = current[key];\n    }\n  }\n}\nclass TranslateParser {}\nclass TranslateDefaultParser extends TranslateParser {\n  templateMatcher = /{{\\s?([^{}\\s]*)\\s?}}/g;\n  interpolate(expr, params) {\n    if (isString(expr)) {\n      return this.interpolateString(expr, params);\n    } else if (isFunction(expr)) {\n      return this.interpolateFunction(expr, params);\n    }\n    return undefined;\n  }\n  interpolateFunction(fn, params) {\n    return fn(params);\n  }\n  interpolateString(expr, params) {\n    if (!params) {\n      return expr;\n    }\n    return expr.replace(this.templateMatcher, (substring, b) => {\n      const r = getValue(params, b);\n      return isDefined(r) ? r : substring;\n    });\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTranslateDefaultParser_BaseFactory;\n    return function TranslateDefaultParser_Factory(__ngFactoryType__) {\n      return (ɵTranslateDefaultParser_BaseFactory || (ɵTranslateDefaultParser_BaseFactory = i0.ɵɵgetInheritedFactory(TranslateDefaultParser)))(__ngFactoryType__ || TranslateDefaultParser);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateDefaultParser,\n    factory: TranslateDefaultParser.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateDefaultParser, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TranslateCompiler {}\n/**\n * This compiler is just a placeholder that does nothing, in case you don't need a compiler at all\n */\nclass TranslateFakeCompiler extends TranslateCompiler {\n  compile(value, lang) {\n    void lang;\n    return value;\n  }\n  compileTranslations(translations, lang) {\n    void lang;\n    return translations;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTranslateFakeCompiler_BaseFactory;\n    return function TranslateFakeCompiler_Factory(__ngFactoryType__) {\n      return (ɵTranslateFakeCompiler_BaseFactory || (ɵTranslateFakeCompiler_BaseFactory = i0.ɵɵgetInheritedFactory(TranslateFakeCompiler)))(__ngFactoryType__ || TranslateFakeCompiler);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateFakeCompiler,\n    factory: TranslateFakeCompiler.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateFakeCompiler, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TranslateStore {\n  /**\n   * The default lang to fallback when translations are missing on the current lang\n   */\n  defaultLang;\n  /**\n   * The lang currently used\n   */\n  currentLang = this.defaultLang;\n  /**\n   * a list of translations per lang\n   */\n  translations = {};\n  /**\n   * an array of langs\n   */\n  langs = [];\n  /**\n   * An EventEmitter to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n   */\n  onTranslationChange = new EventEmitter();\n  /**\n   * An EventEmitter to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  onLangChange = new EventEmitter();\n  /**\n   * An EventEmitter to listen to default lang change events\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  onDefaultLangChange = new EventEmitter();\n}\nconst ISOLATE_TRANSLATE_SERVICE = new InjectionToken('ISOLATE_TRANSLATE_SERVICE');\nconst USE_DEFAULT_LANG = new InjectionToken('USE_DEFAULT_LANG');\nconst DEFAULT_LANGUAGE = new InjectionToken('DEFAULT_LANGUAGE');\nconst USE_EXTEND = new InjectionToken('USE_EXTEND');\nconst makeObservable = value => {\n  return isObservable(value) ? value : of(value);\n};\nclass TranslateService {\n  store;\n  currentLoader;\n  compiler;\n  parser;\n  missingTranslationHandler;\n  useDefaultLang;\n  extend;\n  loadingTranslations;\n  pending = false;\n  _translationRequests = {};\n  lastUseLanguage = null;\n  /**\n   * An EventEmitter to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onTranslationChange() {\n    return this.store.onTranslationChange;\n  }\n  /**\n   * An EventEmitter to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onLangChange() {\n    return this.store.onLangChange;\n  }\n  /**\n   * An EventEmitter to listen to default lang change events\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onDefaultLangChange() {\n    return this.store.onDefaultLangChange;\n  }\n  /**\n   * The default lang to fallback when translations are missing on the current lang\n   */\n  get defaultLang() {\n    return this.store.defaultLang;\n  }\n  set defaultLang(defaultLang) {\n    this.store.defaultLang = defaultLang;\n  }\n  /**\n   * The lang currently used\n   */\n  get currentLang() {\n    return this.store.currentLang;\n  }\n  set currentLang(currentLang) {\n    this.store.currentLang = currentLang;\n  }\n  /**\n   * an array of langs\n   */\n  get langs() {\n    return this.store.langs;\n  }\n  set langs(langs) {\n    this.store.langs = langs;\n  }\n  /**\n   * a list of translations per lang\n   */\n  get translations() {\n    return this.store.translations;\n  }\n  set translations(translations) {\n    this.store.translations = translations;\n  }\n  /**\n   *\n   * @param store an instance of the store (that is supposed to be unique)\n   * @param currentLoader An instance of the loader currently used\n   * @param compiler An instance of the compiler currently used\n   * @param parser An instance of the parser currently used\n   * @param missingTranslationHandler A handler for missing translations.\n   * @param useDefaultLang whether we should use default language translation when current language translation is missing.\n   * @param isolate whether this service should use the store or not\n   * @param extend To make a child module extend (and use) translations from parent modules.\n   * @param defaultLanguage Set the default language using configuration\n   */\n  constructor(store, currentLoader, compiler, parser, missingTranslationHandler, useDefaultLang = true, isolate = false, extend = false, defaultLanguage) {\n    this.store = store;\n    this.currentLoader = currentLoader;\n    this.compiler = compiler;\n    this.parser = parser;\n    this.missingTranslationHandler = missingTranslationHandler;\n    this.useDefaultLang = useDefaultLang;\n    this.extend = extend;\n    if (isolate) {\n      this.store = new TranslateStore();\n    }\n    if (defaultLanguage) {\n      this.setDefaultLang(defaultLanguage);\n    }\n  }\n  /**\n   * Sets the default language to use as a fallback\n   */\n  setDefaultLang(lang) {\n    if (lang === this.defaultLang) {\n      return;\n    }\n    const pending = this.retrieveTranslations(lang);\n    if (typeof pending !== \"undefined\") {\n      // on init set the defaultLang immediately\n      if (this.defaultLang == null) {\n        this.defaultLang = lang;\n      }\n      pending.pipe(take(1)).subscribe(() => {\n        this.changeDefaultLang(lang);\n      });\n    } else {\n      // we already have this language\n      this.changeDefaultLang(lang);\n    }\n  }\n  /**\n   * Gets the default language used\n   */\n  getDefaultLang() {\n    return this.defaultLang;\n  }\n  /**\n   * Changes the lang currently used\n   */\n  use(lang) {\n    // remember the language that was called\n    // we need this with multiple fast calls to use()\n    // where translation loads might complete in random order\n    this.lastUseLanguage = lang;\n    // don't change the language if the language given is already selected\n    if (lang === this.currentLang) {\n      return of(this.translations[lang]);\n    }\n    // on init set the currentLang immediately\n    if (!this.currentLang) {\n      this.currentLang = lang;\n    }\n    const pending = this.retrieveTranslations(lang);\n    if (isObservable(pending)) {\n      pending.pipe(take(1)).subscribe(() => {\n        this.changeLang(lang);\n      });\n      return pending;\n    } else {\n      // we have this language, return an Observable\n      this.changeLang(lang);\n      return of(this.translations[lang]);\n    }\n  }\n  /**\n   * Changes the current lang\n   */\n  changeLang(lang) {\n    // received a new language file\n    // but this was not the one requested last\n    if (lang !== this.lastUseLanguage) {\n      return;\n    }\n    this.currentLang = lang;\n    this.onLangChange.emit({\n      lang: lang,\n      translations: this.translations[lang]\n    });\n    // if there is no default lang, use the one that we just set\n    if (this.defaultLang == null) {\n      this.changeDefaultLang(lang);\n    }\n  }\n  /**\n   * Retrieves the given translations\n   */\n  retrieveTranslations(lang) {\n    // if this language is unavailable or extend is true, ask for it\n    if (typeof this.translations[lang] === \"undefined\" || this.extend) {\n      this._translationRequests[lang] = this._translationRequests[lang] || this.loadAndCompileTranslations(lang);\n      return this._translationRequests[lang];\n    }\n    return undefined;\n  }\n  /**\n   * Gets an object of translations for a given language with the current loader\n   * and passes it through the compiler\n   *\n   * @deprecated This function is meant for internal use. There should\n   * be no reason to use outside this service. You can plug into this\n   * functionality by using a customer TranslateLoader or TranslateCompiler.\n   * To load a new language use setDefaultLang() and/or use()\n   */\n  getTranslation(lang) {\n    return this.loadAndCompileTranslations(lang);\n  }\n  loadAndCompileTranslations(lang) {\n    this.pending = true;\n    const loadingTranslations = this.currentLoader.getTranslation(lang).pipe(shareReplay(1), take(1));\n    this.loadingTranslations = loadingTranslations.pipe(map(res => this.compiler.compileTranslations(res, lang)), shareReplay(1), take(1));\n    this.loadingTranslations.subscribe({\n      next: res => {\n        this.translations[lang] = this.extend && this.translations[lang] ? {\n          ...res,\n          ...this.translations[lang]\n        } : res;\n        this.updateLangs();\n        this.pending = false;\n      },\n      error: err => {\n        void err;\n        this.pending = false;\n      }\n    });\n    return loadingTranslations;\n  }\n  /**\n   * Manually sets an object of translations for a given language\n   * after passing it through the compiler\n   */\n  setTranslation(lang, translations, shouldMerge = false) {\n    const interpolatableTranslations = this.compiler.compileTranslations(translations, lang);\n    if ((shouldMerge || this.extend) && this.translations[lang]) {\n      this.translations[lang] = mergeDeep(this.translations[lang], interpolatableTranslations);\n    } else {\n      this.translations[lang] = interpolatableTranslations;\n    }\n    this.updateLangs();\n    this.onTranslationChange.emit({\n      lang: lang,\n      translations: this.translations[lang]\n    });\n  }\n  /**\n   * Returns an array of currently available langs\n   */\n  getLangs() {\n    return this.langs;\n  }\n  /**\n   * Add available languages\n   */\n  addLangs(langs) {\n    const newLangs = langs.filter(lang => !this.langs.includes(lang));\n    if (newLangs.length > 0) {\n      this.langs = [...this.langs, ...newLangs];\n    }\n  }\n  /**\n   * Update the list of available languages\n   */\n  updateLangs() {\n    this.addLangs(Object.keys(this.translations));\n  }\n  getParsedResultForKey(translations, key, interpolateParams) {\n    let res;\n    if (translations) {\n      res = this.runInterpolation(getValue(translations, key), interpolateParams);\n    }\n    if (res === undefined && this.defaultLang != null && this.defaultLang !== this.currentLang && this.useDefaultLang) {\n      res = this.runInterpolation(getValue(this.translations[this.defaultLang], key), interpolateParams);\n    }\n    if (res === undefined) {\n      const params = {\n        key,\n        translateService: this\n      };\n      if (typeof interpolateParams !== 'undefined') {\n        params.interpolateParams = interpolateParams;\n      }\n      res = this.missingTranslationHandler.handle(params);\n    }\n    return res !== undefined ? res : key;\n  }\n  runInterpolation(translations, interpolateParams) {\n    if (isArray(translations)) {\n      return translations.map(translation => this.runInterpolation(translation, interpolateParams));\n    } else if (isDict(translations)) {\n      const result = {};\n      for (const key in translations) {\n        const res = this.runInterpolation(translations[key], interpolateParams);\n        if (res !== undefined) {\n          result[key] = res;\n        }\n      }\n      return result;\n    } else {\n      return this.parser.interpolate(translations, interpolateParams);\n    }\n  }\n  /**\n   * Returns the parsed result of the translations\n   */\n  getParsedResult(translations, key, interpolateParams) {\n    // handle a bunch of keys\n    if (key instanceof Array) {\n      const result = {};\n      let observables = false;\n      for (const k of key) {\n        result[k] = this.getParsedResultForKey(translations, k, interpolateParams);\n        observables = observables || isObservable(result[k]);\n      }\n      if (!observables) {\n        return result;\n      }\n      const sources = key.map(k => makeObservable(result[k]));\n      return forkJoin(sources).pipe(map(arr => {\n        const obj = {};\n        arr.forEach((value, index) => {\n          obj[key[index]] = value;\n        });\n        return obj;\n      }));\n    }\n    return this.getParsedResultForKey(translations, key, interpolateParams);\n  }\n  /**\n   * Gets the translated value of a key (or an array of keys)\n   * @returns the translated key, or an object of translated keys\n   */\n  get(key, interpolateParams) {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" is required and cannot be empty`);\n    }\n    // check if we are loading a new translation to use\n    if (this.pending) {\n      return this.loadingTranslations.pipe(concatMap(res => {\n        return makeObservable(this.getParsedResult(res, key, interpolateParams));\n      }));\n    }\n    return makeObservable(this.getParsedResult(this.translations[this.currentLang], key, interpolateParams));\n  }\n  /**\n   * Returns a stream of translated values of a key (or an array of keys) which updates\n   * whenever the translation changes.\n   * @returns A stream of the translated key, or an object of translated keys\n   */\n  getStreamOnTranslationChange(key, interpolateParams) {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" is required and cannot be empty`);\n    }\n    return concat(defer(() => this.get(key, interpolateParams)), this.onTranslationChange.pipe(switchMap(event => {\n      const res = this.getParsedResult(event.translations, key, interpolateParams);\n      return makeObservable(res);\n    })));\n  }\n  /**\n   * Returns a stream of translated values of a key (or an array of keys) which updates\n   * whenever the language changes.\n   * @returns A stream of the translated key, or an object of translated keys\n   */\n  stream(key, interpolateParams) {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n    return concat(defer(() => this.get(key, interpolateParams)), this.onLangChange.pipe(switchMap(event => {\n      const res = this.getParsedResult(event.translations, key, interpolateParams);\n      return makeObservable(res);\n    })));\n  }\n  /**\n   * Returns a translation instantly from the internal state of loaded translation.\n   * All rules regarding the current language, the preferred language of even fallback languages\n   * will be used except any promise handling.\n   */\n  instant(key, interpolateParams) {\n    if (!isDefined(key) || key.length === 0) {\n      throw new Error('Parameter \"key\" is required and cannot be empty');\n    }\n    const result = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n    if (isObservable(result)) {\n      if (Array.isArray(key)) {\n        return key.reduce((acc, currKey) => {\n          acc[currKey] = currKey;\n          return acc;\n        }, {});\n      }\n      return key;\n    }\n    return result;\n  }\n  /**\n   * Sets the translated value of a key, after compiling it\n   */\n  set(key, translation, lang = this.currentLang) {\n    setValue(this.translations[lang], key, isString(translation) ? this.compiler.compile(translation, lang) : this.compiler.compileTranslations(translation, lang));\n    this.updateLangs();\n    this.onTranslationChange.emit({\n      lang: lang,\n      translations: this.translations[lang]\n    });\n  }\n  /**\n   * Changes the default lang\n   */\n  changeDefaultLang(lang) {\n    this.defaultLang = lang;\n    this.onDefaultLangChange.emit({\n      lang: lang,\n      translations: this.translations[lang]\n    });\n  }\n  /**\n   * Allows to reload the lang file from the file\n   */\n  reloadLang(lang) {\n    this.resetLang(lang);\n    return this.loadAndCompileTranslations(lang);\n  }\n  /**\n   * Deletes inner translation\n   */\n  resetLang(lang) {\n    delete this._translationRequests[lang];\n    delete this.translations[lang];\n  }\n  /**\n   * Returns the language code name from the browser, e.g. \"de\"\n   */\n  getBrowserLang() {\n    if (typeof window === 'undefined' || !window.navigator) {\n      return undefined;\n    }\n    const browserLang = this.getBrowserCultureLang();\n    return browserLang ? browserLang.split(/[-_]/)[0] : undefined;\n  }\n  /**\n   * Returns the culture language code name from the browser, e.g. \"de-DE\"\n   */\n  getBrowserCultureLang() {\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n      return undefined;\n    }\n    return window.navigator.languages ? window.navigator.languages[0] : window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n  }\n  static ɵfac = function TranslateService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TranslateService)(i0.ɵɵinject(TranslateStore), i0.ɵɵinject(TranslateLoader), i0.ɵɵinject(TranslateCompiler), i0.ɵɵinject(TranslateParser), i0.ɵɵinject(MissingTranslationHandler), i0.ɵɵinject(USE_DEFAULT_LANG), i0.ɵɵinject(ISOLATE_TRANSLATE_SERVICE), i0.ɵɵinject(USE_EXTEND), i0.ɵɵinject(DEFAULT_LANGUAGE));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateService,\n    factory: TranslateService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: TranslateStore\n  }, {\n    type: TranslateLoader\n  }, {\n    type: TranslateCompiler\n  }, {\n    type: TranslateParser\n  }, {\n    type: MissingTranslationHandler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [USE_DEFAULT_LANG]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [ISOLATE_TRANSLATE_SERVICE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [USE_EXTEND]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DEFAULT_LANGUAGE]\n    }]\n  }], null);\n})();\nclass TranslateDirective {\n  translateService;\n  element;\n  _ref;\n  key;\n  lastParams;\n  currentParams;\n  onLangChangeSub;\n  onDefaultLangChangeSub;\n  onTranslationChangeSub;\n  set translate(key) {\n    if (key) {\n      this.key = key;\n      this.checkNodes();\n    }\n  }\n  set translateParams(params) {\n    if (!equals(this.currentParams, params)) {\n      this.currentParams = params;\n      this.checkNodes(true);\n    }\n  }\n  constructor(translateService, element, _ref) {\n    this.translateService = translateService;\n    this.element = element;\n    this._ref = _ref;\n    // subscribe to onTranslationChange event, in case the translations of the current lang change\n    if (!this.onTranslationChangeSub) {\n      this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe(event => {\n        if (event.lang === this.translateService.currentLang) {\n          this.checkNodes(true, event.translations);\n        }\n      });\n    }\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChangeSub) {\n      this.onLangChangeSub = this.translateService.onLangChange.subscribe(event => {\n        this.checkNodes(true, event.translations);\n      });\n    }\n    // subscribe to onDefaultLangChange event, in case the default language changes\n    if (!this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe(event => {\n        void event;\n        this.checkNodes(true);\n      });\n    }\n  }\n  ngAfterViewChecked() {\n    this.checkNodes();\n  }\n  checkNodes(forceUpdate = false, translations) {\n    let nodes = this.element.nativeElement.childNodes;\n    // if the element is empty\n    if (!nodes.length) {\n      // we add the key as content\n      this.setContent(this.element.nativeElement, this.key);\n      nodes = this.element.nativeElement.childNodes;\n    }\n    nodes.forEach(n => {\n      const node = n;\n      if (node.nodeType === 3) {\n        // node type 3 is a text node\n        let key;\n        if (forceUpdate) {\n          node.lastKey = null;\n        }\n        if (isDefined(node.lookupKey)) {\n          key = node.lookupKey;\n        } else if (this.key) {\n          key = this.key;\n        } else {\n          const content = this.getContent(node);\n          const trimmedContent = content.trim();\n          if (trimmedContent.length) {\n            node.lookupKey = trimmedContent;\n            // we want to use the content as a key, not the translation value\n            if (content !== node.currentValue) {\n              key = trimmedContent;\n              // the content was changed from the user, we'll use it as a reference if needed\n              node.originalContent = content || node.originalContent;\n            } else if (node.originalContent) {\n              // the content seems ok, but the lang has changed\n              // the current content is the translation, not the key, use the last real content as key\n              key = node.originalContent.trim();\n            }\n          }\n        }\n        this.updateValue(key, node, translations);\n      }\n    });\n  }\n  updateValue(key, node, translations) {\n    if (key) {\n      if (node.lastKey === key && this.lastParams === this.currentParams) {\n        return;\n      }\n      this.lastParams = this.currentParams;\n      const onTranslation = res => {\n        if (res !== key || !node.lastKey) {\n          node.lastKey = key;\n        }\n        if (!node.originalContent) {\n          node.originalContent = this.getContent(node);\n        }\n        node.currentValue = isDefined(res) ? res : node.originalContent || key;\n        // we replace in the original content to preserve spaces that we might have trimmed\n        this.setContent(node, this.key ? node.currentValue : node.originalContent.replace(key, node.currentValue));\n        this._ref.markForCheck();\n      };\n      if (isDefined(translations)) {\n        const res = this.translateService.getParsedResult(translations, key, this.currentParams);\n        if (isObservable(res)) {\n          res.subscribe({\n            next: onTranslation\n          });\n        } else {\n          onTranslation(res);\n        }\n      } else {\n        this.translateService.get(key, this.currentParams).subscribe(onTranslation);\n      }\n    }\n  }\n  getContent(node) {\n    return isDefined(node.textContent) ? node.textContent : node.data;\n  }\n  setContent(node, content) {\n    if (isDefined(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n  ngOnDestroy() {\n    if (this.onLangChangeSub) {\n      this.onLangChangeSub.unsubscribe();\n    }\n    if (this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub.unsubscribe();\n    }\n    if (this.onTranslationChangeSub) {\n      this.onTranslationChangeSub.unsubscribe();\n    }\n  }\n  static ɵfac = function TranslateDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TranslateDirective)(i0.ɵɵdirectiveInject(TranslateService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TranslateDirective,\n    selectors: [[\"\", \"translate\", \"\"], [\"\", \"ngx-translate\", \"\"]],\n    inputs: {\n      translate: \"translate\",\n      translateParams: \"translateParams\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[translate],[ngx-translate]',\n      standalone: true\n    }]\n  }], () => [{\n    type: TranslateService\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    translate: [{\n      type: Input\n    }],\n    translateParams: [{\n      type: Input\n    }]\n  });\n})();\nclass TranslatePipe {\n  translate;\n  _ref;\n  value = '';\n  lastKey = null;\n  lastParams = [];\n  onTranslationChange;\n  onLangChange;\n  onDefaultLangChange;\n  constructor(translate, _ref) {\n    this.translate = translate;\n    this._ref = _ref;\n  }\n  updateValue(key, interpolateParams, translations) {\n    const onTranslation = res => {\n      this.value = res !== undefined ? res : key;\n      this.lastKey = key;\n      this._ref.markForCheck();\n    };\n    if (translations) {\n      const res = this.translate.getParsedResult(translations, key, interpolateParams);\n      if (isObservable(res)) {\n        res.subscribe(onTranslation);\n      } else {\n        onTranslation(res);\n      }\n    }\n    this.translate.get(key, interpolateParams).subscribe(onTranslation);\n  }\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  transform(query, ...args) {\n    if (!query || !query.length) {\n      return query;\n    }\n    // if we ask another time for the same key, return the last value\n    if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\n      return this.value;\n    }\n    let interpolateParams = undefined;\n    if (isDefined(args[0]) && args.length) {\n      if (isString(args[0]) && args[0].length) {\n        // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\n        // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\n        const validArgs = args[0].replace(/(')?([a-zA-Z0-9_]+)(')?(\\s)?:/g, '\"$2\":').replace(/:(\\s)?(')(.*?)(')/g, ':\"$3\"');\n        try {\n          interpolateParams = JSON.parse(validArgs);\n        } catch (e) {\n          void e;\n          throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n        }\n      } else if (isDict(args[0])) {\n        interpolateParams = args[0];\n      }\n    }\n    // store the query, in case it changes\n    this.lastKey = query;\n    // store the params, in case they change\n    this.lastParams = args;\n    // set the value\n    this.updateValue(query, interpolateParams);\n    // if there is a subscription to onLangChange, clean it\n    this._dispose();\n    // subscribe to onTranslationChange event, in case the translations change\n    if (!this.onTranslationChange) {\n      this.onTranslationChange = this.translate.onTranslationChange.subscribe(event => {\n        if (this.lastKey && event.lang === this.translate.currentLang) {\n          this.lastKey = null;\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChange) {\n      this.onLangChange = this.translate.onLangChange.subscribe(event => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n    // subscribe to onDefaultLangChange event, in case the default language changes\n    if (!this.onDefaultLangChange) {\n      this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams);\n        }\n      });\n    }\n    return this.value;\n  }\n  /**\n   * Clean any existing subscription to change events\n   */\n  _dispose() {\n    if (typeof this.onTranslationChange !== 'undefined') {\n      this.onTranslationChange.unsubscribe();\n      this.onTranslationChange = undefined;\n    }\n    if (typeof this.onLangChange !== 'undefined') {\n      this.onLangChange.unsubscribe();\n      this.onLangChange = undefined;\n    }\n    if (typeof this.onDefaultLangChange !== 'undefined') {\n      this.onDefaultLangChange.unsubscribe();\n      this.onDefaultLangChange = undefined;\n    }\n  }\n  ngOnDestroy() {\n    this._dispose();\n  }\n  static ɵfac = function TranslatePipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TranslatePipe)(i0.ɵɵdirectiveInject(TranslateService, 16), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16));\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"translate\",\n    type: TranslatePipe,\n    pure: false\n  });\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslatePipe,\n    factory: TranslatePipe.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslatePipe, [{\n    type: Injectable\n  }, {\n    type: Pipe,\n    args: [{\n      name: 'translate',\n      standalone: true,\n      pure: false // required to update the value when the promise is resolved\n    }]\n  }], () => [{\n    type: TranslateService\n  }, {\n    type: i0.ChangeDetectorRef\n  }], null);\n})();\nfunction _(key) {\n  return key;\n}\nconst provideTranslateService = (config = {}) => {\n  return makeEnvironmentProviders([config.loader || {\n    provide: TranslateLoader,\n    useClass: TranslateFakeLoader\n  }, config.compiler || {\n    provide: TranslateCompiler,\n    useClass: TranslateFakeCompiler\n  }, config.parser || {\n    provide: TranslateParser,\n    useClass: TranslateDefaultParser\n  }, config.missingTranslationHandler || {\n    provide: MissingTranslationHandler,\n    useClass: FakeMissingTranslationHandler\n  }, TranslateStore, {\n    provide: ISOLATE_TRANSLATE_SERVICE,\n    useValue: config.isolate\n  }, {\n    provide: USE_DEFAULT_LANG,\n    useValue: config.useDefaultLang\n  }, {\n    provide: USE_EXTEND,\n    useValue: config.extend\n  }, {\n    provide: DEFAULT_LANGUAGE,\n    useValue: config.defaultLanguage\n  }, TranslateService]);\n};\nclass TranslateModule {\n  /**\n   * Use this method in your root module to provide the TranslateService\n   */\n  static forRoot(config = {}) {\n    return {\n      ngModule: TranslateModule,\n      providers: [config.loader || {\n        provide: TranslateLoader,\n        useClass: TranslateFakeLoader\n      }, config.compiler || {\n        provide: TranslateCompiler,\n        useClass: TranslateFakeCompiler\n      }, config.parser || {\n        provide: TranslateParser,\n        useClass: TranslateDefaultParser\n      }, config.missingTranslationHandler || {\n        provide: MissingTranslationHandler,\n        useClass: FakeMissingTranslationHandler\n      }, TranslateStore, {\n        provide: ISOLATE_TRANSLATE_SERVICE,\n        useValue: config.isolate\n      }, {\n        provide: USE_DEFAULT_LANG,\n        useValue: config.useDefaultLang\n      }, {\n        provide: USE_EXTEND,\n        useValue: config.extend\n      }, {\n        provide: DEFAULT_LANGUAGE,\n        useValue: config.defaultLanguage\n      }, TranslateService]\n    };\n  }\n  /**\n   * Use this method in your other (non-root) modules to import the directive/pipe\n   */\n  static forChild(config = {}) {\n    return {\n      ngModule: TranslateModule,\n      providers: [config.loader || {\n        provide: TranslateLoader,\n        useClass: TranslateFakeLoader\n      }, config.compiler || {\n        provide: TranslateCompiler,\n        useClass: TranslateFakeCompiler\n      }, config.parser || {\n        provide: TranslateParser,\n        useClass: TranslateDefaultParser\n      }, config.missingTranslationHandler || {\n        provide: MissingTranslationHandler,\n        useClass: FakeMissingTranslationHandler\n      }, {\n        provide: ISOLATE_TRANSLATE_SERVICE,\n        useValue: config.isolate\n      }, {\n        provide: USE_DEFAULT_LANG,\n        useValue: config.useDefaultLang\n      }, {\n        provide: USE_EXTEND,\n        useValue: config.extend\n      }, {\n        provide: DEFAULT_LANGUAGE,\n        useValue: config.defaultLanguage\n      }, TranslateService]\n    };\n  }\n  static ɵfac = function TranslateModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TranslateModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TranslateModule,\n    imports: [TranslatePipe, TranslateDirective],\n    exports: [TranslatePipe, TranslateDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [TranslatePipe, TranslateDirective],\n      exports: [TranslatePipe, TranslateDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_LANGUAGE, FakeMissingTranslationHandler, ISOLATE_TRANSLATE_SERVICE, MissingTranslationHandler, TranslateCompiler, TranslateDefaultParser, TranslateDirective, TranslateFakeCompiler, TranslateFakeLoader, TranslateLoader, TranslateModule, TranslateParser, TranslatePipe, TranslateService, TranslateStore, USE_DEFAULT_LANG, USE_EXTEND, _, equals, getValue, isArray, isDefined, isDict, isFunction, isObject, isString, mergeDeep, provideTranslateService, setValue };\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nService {\n  constructor(private translateService: TranslateService) {\n    this.initializeTranslation();\n  }\n\n  /**\n   * Inicializa la configuración de traducción\n   */\n  private initializeTranslation(): void {\n    // Establecer idioma por defecto\n    this.translateService.setDefaultLang('es');\n    \n    // Usar el idioma por defecto\n    this.translateService.use('es');\n  }\n\n  /**\n   * Obtiene una traducción de forma síncrona\n   * @param key Clave de la traducción\n   * @param params Parámetros para interpolación\n   * @returns Texto traducido\n   */\n  translate(key: string, params?: any): string {\n    return this.translateService.instant(key, params);\n  }\n\n  /**\n   * Obtiene una traducción de forma asíncrona\n   * @param key Clave de la traducción\n   * @param params Parámetros para interpolación\n   * @returns Observable con el texto traducido\n   */\n  translateAsync(key: string, params?: any): Observable<string> {\n    return this.translateService.get(key, params);\n  }\n\n  /**\n   * Obtiene múltiples traducciones de forma asíncrona\n   * @param keys Array de claves de traducción\n   * @param params Parámetros para interpolación\n   * @returns Observable con objeto de traducciones\n   */\n  translateMultiple(keys: string[], params?: any): Observable<any> {\n    return this.translateService.get(keys, params);\n  }\n\n  /**\n   * Cambia el idioma actual\n   * @param lang Código del idioma\n   */\n  changeLanguage(lang: string): void {\n    this.translateService.use(lang);\n  }\n\n  /**\n   * Obtiene el idioma actual\n   * @returns Código del idioma actual\n   */\n  getCurrentLanguage(): string {\n    return this.translateService.currentLang || this.translateService.getDefaultLang();\n  }\n\n  /**\n   * Obtiene los idiomas disponibles\n   * @returns Array de códigos de idiomas\n   */\n  getAvailableLanguages(): string[] {\n    return this.translateService.getLangs();\n  }\n\n  /**\n   * Verifica si existe una traducción para una clave\n   * @param key Clave de la traducción\n   * @returns true si existe la traducción\n   */\n  hasTranslation(key: string): boolean {\n    return this.translateService.instant(key) !== key;\n  }\n\n  /**\n   * Recarga las traducciones\n   * @param lang Idioma a recargar (opcional)\n   */\n  reloadTranslations(lang?: string): void {\n    const currentLang = lang || this.getCurrentLanguage();\n    this.translateService.reloadLang(currentLang);\n  }\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nclass TranslateHttpLoader {\n  http;\n  prefix;\n  suffix;\n  constructor(http, prefix = \"/assets/i18n/\", suffix = \".json\") {\n    this.http = http;\n    this.prefix = prefix;\n    this.suffix = suffix;\n  }\n  /**\n   * Gets the translations from the server\n   */\n  getTranslation(lang) {\n    return this.http.get(`${this.prefix}${lang}${this.suffix}`);\n  }\n  static ɵfac = function TranslateHttpLoader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TranslateHttpLoader)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(String), i0.ɵɵinject(String));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateHttpLoader,\n    factory: TranslateHttpLoader.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateHttpLoader, [{\n    type: Injectable\n  }], () => [{\n    type: i1.HttpClient\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [String]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [String]\n    }]\n  }], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TranslateHttpLoader };\n","import { HttpClient } from '@angular/common/http';\nimport { importProvidersFrom } from '@angular/core';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n/**\n * Factory function para crear el loader de traducciones\n * @param http HttpClient para cargar archivos\n * @returns TranslateHttpLoader configurado\n */\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n/**\n * Configuración de providers para ngx-translate\n * Incluye todas las configuraciones necesarias para el sistema de traducción\n */\nexport const I18N_PROVIDERS = [\n  importProvidersFrom(\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      },\n      defaultLanguage: 'es',\n      useDefaultLang: true,\n      isolate: false\n    })\n  )\n];\n\n/**\n * Configuración de idiomas soportados por la aplicación\n */\nexport const SUPPORTED_LANGUAGES = [\n  { code: 'es', name: 'Español', flag: '🇪🇸' },\n  // Agregar más idiomas según necesidades\n  // { code: 'en', name: 'English', flag: '🇺🇸' },\n  // { code: 'fr', name: 'Français', flag: '🇫🇷' }\n];\n\n/**\n * Idioma por defecto de la aplicación\n */\nexport const DEFAULT_LANGUAGE = 'es';\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { I18nService } from './i18n.service';\nimport { SUPPORTED_LANGUAGES } from './i18n.config';\n\n@Component({\n  selector: 'app-language-selector',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"language-selector\">\n      <button \n        class=\"current-language\" \n        (click)=\"toggleDropdown()\"\n        [attr.aria-expanded]=\"isDropdownOpen\">\n        <span class=\"flag\">{{ getCurrentLanguageFlag() }}</span>\n        <span class=\"name\">{{ getCurrentLanguageName() }}</span>\n        <span class=\"arrow\" [class.open]=\"isDropdownOpen\">▼</span>\n      </button>\n      \n      <div class=\"dropdown\" *ngIf=\"isDropdownOpen\" (click)=\"$event.stopPropagation()\">\n        <button \n          *ngFor=\"let lang of supportedLanguages\"\n          class=\"language-option\"\n          [class.active]=\"lang.code === currentLanguage\"\n          (click)=\"selectLanguage(lang.code)\">\n          <span class=\"flag\">{{ lang.flag }}</span>\n          <span class=\"name\">{{ lang.name }}</span>\n        </button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .language-selector {\n      position: relative;\n      display: inline-block;\n    }\n\n    .current-language {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      padding: 0.5rem 1rem;\n      border: 1px solid #e0e0e0;\n      border-radius: 0.25rem;\n      background: white;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n\n    .current-language:hover {\n      border-color: #007bff;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .arrow {\n      transition: transform 0.2s ease;\n      font-size: 0.8rem;\n    }\n\n    .arrow.open {\n      transform: rotate(180deg);\n    }\n\n    .dropdown {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      right: 0;\n      background: white;\n      border: 1px solid #e0e0e0;\n      border-radius: 0.25rem;\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      z-index: 1000;\n      margin-top: 0.25rem;\n    }\n\n    .language-option {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      width: 100%;\n      padding: 0.75rem 1rem;\n      border: none;\n      background: white;\n      cursor: pointer;\n      transition: background-color 0.2s ease;\n      text-align: left;\n    }\n\n    .language-option:hover {\n      background-color: #f8f9fa;\n    }\n\n    .language-option.active {\n      background-color: #e3f2fd;\n      color: #1976d2;\n    }\n\n    .flag {\n      font-size: 1.2rem;\n    }\n\n    .name {\n      font-weight: 500;\n    }\n  `]\n})\nexport class LanguageSelectorComponent {\n  supportedLanguages = SUPPORTED_LANGUAGES;\n  currentLanguage!: string;\n  isDropdownOpen = false;\n\n  constructor(private i18nService: I18nService) {\n    this.currentLanguage = this.i18nService.getCurrentLanguage();\n    \n    // Cerrar dropdown al hacer click fuera\n    document.addEventListener('click', () => {\n      this.isDropdownOpen = false;\n    });\n  }\n\n  toggleDropdown(): void {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  selectLanguage(langCode: string): void {\n    this.i18nService.changeLanguage(langCode);\n    this.currentLanguage = langCode;\n    this.isDropdownOpen = false;\n  }\n\n  getCurrentLanguageFlag(): string {\n    const currentLang = this.supportedLanguages.find(lang => lang.code === this.currentLanguage);\n    return currentLang?.flag || '🌐';\n  }\n\n  getCurrentLanguageName(): string {\n    const currentLang = this.supportedLanguages.find(lang => lang.code === this.currentLanguage);\n    return currentLang?.name || 'Idioma';\n  }\n}\n","import type { HttpInterceptorFn } from \"@angular/common/http\";\nimport { inject } from \"@angular/core\";\nimport { LoadingService } from \"../services/loading.service\";\nimport { finalize } from \"rxjs/operators\";\nimport { AuthService } from \"../auth/auth.service\";\n\n/**\n * Interceptor que maneja el loading automático para peticiones POST\n * Muestra un spinner de carga durante las peticiones POST y lo oculta al finalizar\n */\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\n  const loadingService = inject(LoadingService);\n  const auth = inject(AuthService);\n\n  // Si existe sesión de Supabase agregamos header user-id\n  const userId = auth.session?.user?.id;\n  if (userId && auth.session?.access_token) {\n    req = req.clone({\n      setHeaders: {\n        \"user-id\": userId,\n        Authorization: `Bearer ${auth.session.access_token}`,\n      },\n    });\n  }\n  // Solo aplicar loading para peticiones POST\n  if (\n    req.method === \"POST\" ||\n    req.method === \"PUT\" ||\n    req.method === \"DELETE\"\n  ) {\n    // Mostrar loading antes de enviar la petición\n    loadingService.show();\n\n    return next(req).pipe(\n      finalize(() => {\n        // Ocultar loading cuando la petición termine (éxito o error)\n        loadingService.hide();\n      })\n    );\n  }\n\n  // Para otros métodos HTTP, continuar sin loading\n  return next(req);\n};\n","import { HttpInterceptorFn } from '@angular/common/http';\nimport { HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n/**\n * Interceptor que convierte strings YYYY-MM-DD a Date local sin aplicar timezone shift.\n * Se ejecuta ANTES de que Angular convierta automáticamente las fechas.\n */\nexport const dateParseInterceptor: HttpInterceptorFn = (req, next) => {\n  return next(req).pipe(\n    map(event => {\n      if (event instanceof HttpResponse && event.body) {\n        event = event.clone({ body: parseDatesInObject(event.body) });\n      }\n      return event;\n    })\n  );\n};\n\nfunction parseDatesInObject(obj: any): any {\n  if (!obj) return obj;\n  \n  if (typeof obj === 'string' && /^\\d{4}-\\d{2}-\\d{2}$/.test(obj)) {\n    // YYYY-MM-DD string -> Date local\n    const [y, m, d] = obj.split('-').map(Number);\n    return new Date(y, m - 1, d);\n  }\n  \n  if (Array.isArray(obj)) {\n    return obj.map(item => parseDatesInObject(item));\n  }\n  \n  if (typeof obj === 'object' && obj !== null) {\n    const result: any = {};\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        result[key] = parseDatesInObject(obj[key]);\n      }\n    }\n    return result;\n  }\n  \n  return obj;\n}","import { HttpInterceptorFn } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { HttpGetLoadingService } from '../services/http-get-loading.service';\n\n// Interceptor para mostrar barra superior sólo en peticiones GET\nexport const getLoadingInterceptor: HttpInterceptorFn = (req, next) => {\n\tif (req.method !== 'GET' || req.headers.has('x-disable-get-loading')) {\n\t\treturn next(req);\n\t}\n\tconst svc = inject(HttpGetLoadingService);\n\tsvc.show();\n\treturn next(req).pipe(finalize(() => svc.hide()));\n};\n","import {\n  ApplicationConfig,\n  provideZoneChangeDetection,\n} from \"@angular/core\";\nimport { provideStore } from \"@ngrx/store\";\nimport { provideEffects } from \"@ngrx/effects\";\nimport { provideStoreDevtools } from \"@ngrx/store-devtools\";\nimport { provideRouter } from \"@angular/router\";\nimport { provideHttpClient, withInterceptors } from \"@angular/common/http\";\n\nimport { routes } from \"./app.routes\";\nimport { I18N_PROVIDERS } from \"./core/i18n\";\nimport { authInterceptor } from \"./core/interceptor/auth.interceptor\";\nimport { dateParseInterceptor } from \"./core/interceptor/date-parse.interceptor\";\nimport { getLoadingInterceptor } from \"./core/interceptor/loading.interceptor\";\nimport { provideNativeDateAdapter } from \"@angular/material/core\";\nimport { ES_CO_DATE_FORMATS } from \"./core/date/date-formats\";\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(\n      withInterceptors([\n        authInterceptor,\n        dateParseInterceptor,\n        getLoadingInterceptor,\n      ])\n    ),\n    provideStore({}),\n    provideEffects([]),\n    provideStoreDevtools({ maxAge: 25, logOnly: false }),\n    // ...provideCustomDateAdapter(),\n    // provideNativeDateAdapter(ES_CO_DATE_FORMATS),\n    // provideMomentDateAdapter(MY_DATE_FORMATS)\n    ...I18N_PROVIDERS,\n  ],\n};\n","import { Component, inject, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { LoadingComponent } from './core/components/loading/loading.component';\nimport { TopGetLoadingBarComponent } from './core/components';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, LoadingComponent, TopGetLoadingBarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements OnInit {\n  title = 'bipal-front';\n\n  private readonly matIconReg = inject(MatIconRegistry);\n\n  ngOnInit(): void {\n    this.matIconReg.setDefaultFontSetClass('material-symbols-rounded');\n  }\n}\n","<app-top-get-loading-bar />\n<router-outlet />\n<app-loading></app-loading>\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\n\nbootstrapApplication(AppComponent, appConfig)\n  .catch((err) => console.error(err));\n"],"mappings":"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","names":["effectsInstance","state","action","_c0","_c1","_c0","_c0","_c0","_c1","_c2","TransitionCheckState","input","input","_c0","isFunction","key"],"x_google_ignoreList":[0,1,2,3,4,8,32,34]}