{
  "version": 3,
  "sources": ["src/app/modules/hojadevida/pages/eliminar-datos/services/eliminar-datos.service.ts", "src/app/modules/hojadevida/pages/eliminar-datos/eliminar-datos.component.ts", "src/app/modules/hojadevida/pages/eliminar-datos/eliminar-datos.component.html"],
  "sourcesContent": ["import { Injectable, inject } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../../../../environments/environment\";\nimport { NotificationService } from \"../../../../../core/services\";\nimport { catchError, tap, throwError } from \"rxjs\";\n\n@Injectable({ providedIn: \"root\" })\nexport class EliminarDatosService {\n  private readonly http = inject(HttpClient);\n  private readonly notify = inject(NotificationService);\n  private readonly base = environment.hojaDeVidaApiUrl + \"/persona\";\n\n  eliminarPersonaCompleta() {\n    return this.http\n      .delete<void>(`${this.base}/eliminar-persona-completa`)\n      .pipe(\n        tap(() =>\n          this.notify.showSuccess(\"Hoja de vida eliminada correctamente.\")\n        ),\n        catchError((err) => {\n          this.handleError(err, \"No fue posible eliminar los datos\");\n          return throwError(() => err);\n        })\n      );\n  }\n\n  private handleError(error: any, msg: string) {\n    console.error(error);\n    this.notify.showError(msg);\n    return throwError(() => error);\n  }\n}\n", "import { Component, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { ConfirmDialogService } from \"../../../../core/services\";\nimport { Store } from \"@ngrx/store\";\nimport { selectIdPersona } from \"../../store\";\nimport { EliminarDatosService } from \"./services/eliminar-datos.service\";\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@Component({\n  selector: \"app-eliminar-datos\",\n  imports: [CommonModule, MatCardModule, MatButtonModule, MatIconModule],\n  templateUrl: \"./eliminar-datos.component.html\",\n  styleUrl: \"./eliminar-datos.component.scss\",\n})\nexport class EliminarDatosComponent {\n  private readonly confirm = inject(ConfirmDialogService);\n  private readonly eliminarService = inject(EliminarDatosService);\n  private readonly auth = inject(AuthService);\n  private readonly store = inject(Store);\n  private readonly idPersona = this.store.selectSignal(selectIdPersona);\n\n  onClickDeleteAll(): void {\n    this.confirm\n      .open({\n        type: \"delete\",\n        title: \"Eliminar todos mis datos\",\n        message:\n          \"Esta acción <strong>eliminará permanentemente toda</strong> la información asociada a tu cuenta. ¿Deseas continuar?\",\n      })\n      .subscribe((ok) => {\n        if (!ok) return;\n        // Invocar servicio backend usando idPersona desde el token\n        this.eliminarService\n          .eliminarPersonaCompleta()\n          .subscribe(() => this.auth.signOut());\n      });\n  }\n}\n", "<mat-card class=\"delete-card\">\n  <mat-card-header>\n    <mat-card-title>\n      <mat-icon>database</mat-icon>\n      Borrar mis datos\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <p>\n      Si deseas borrar todos los datos de tu cuenta, puedes hacerlo presionando\n      el botón. Esta acción es irreversible y eliminará tu cuenta.\n    </p>\n  </mat-card-content>\n  <mat-card-actions align=\"end\" class=\"actions\">\n    <button\n      mat-flat-button\n      color=\"error\"\n      class=\"btn-delete\"\n      (click)=\"onClickDeleteAll()\"\n    >\n      Borrar todos mis datos\n    </button>\n  </mat-card-actions>\n</mat-card>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOM,IAAO,uBAAP,MAAO,sBAAoB;EACd,OAAO,OAAO,UAAU;EACxB,SAAS,OAAO,mBAAmB;EACnC,OAAO,YAAY,mBAAmB;EAEvD,0BAAuB;AACrB,WAAO,KAAK,KACT,OAAa,GAAG,KAAK,IAAI,4BAA4B,EACrD,KACC,IAAI,MACF,KAAK,OAAO,YAAY,uCAAuC,CAAC,GAElE,WAAW,CAAC,QAAO;AACjB,WAAK,YAAY,KAAK,mCAAmC;AACzD,aAAO,WAAW,MAAM,GAAG;IAC7B,CAAC,CAAC;EAER;EAEQ,YAAY,OAAY,KAAW;AACzC,YAAQ,MAAM,KAAK;AACnB,SAAK,OAAO,UAAU,GAAG;AACzB,WAAO,WAAW,MAAM,KAAK;EAC/B;;qCAvBW,uBAAoB;EAAA;4EAApB,uBAAoB,SAApB,sBAAoB,WAAA,YADP,OAAM,CAAA;;;sEACnB,sBAAoB,CAAA;UADhC;WAAW,EAAE,YAAY,OAAM,CAAE;;;;;ACW5B,IAAO,yBAAP,MAAO,wBAAsB;EAChB,UAAU,OAAO,oBAAoB;EACrC,kBAAkB,OAAO,oBAAoB;EAC7C,OAAO,OAAO,WAAW;EACzB,QAAQ,OAAO,KAAK;EACpB,YAAY,KAAK,MAAM,aAAa,eAAe;EAEpE,mBAAgB;AACd,SAAK,QACF,KAAK;MACJ,MAAM;MACN,OAAO;MACP,SACE;KACH,EACA,UAAU,CAAC,OAAM;AAChB,UAAI,CAAC;AAAI;AAET,WAAK,gBACF,wBAAuB,EACvB,UAAU,MAAM,KAAK,KAAK,QAAO,CAAE;IACxC,CAAC;EACL;;qCAtBW,yBAAsB;EAAA;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,aAAA,GAAA,CAAA,SAAA,OAAA,GAAA,SAAA,GAAA,CAAA,mBAAA,IAAA,SAAA,SAAA,GAAA,cAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACjBnC,MAAA,yBAAA,GAAA,YAAA,CAAA,EAA8B,GAAA,iBAAA,EACX,GAAA,gBAAA,EACC,GAAA,UAAA;AACJ,MAAA,iBAAA,GAAA,UAAA;AAAQ,MAAA,uBAAA;AAClB,MAAA,iBAAA,GAAA,oBAAA;AACF,MAAA,uBAAA,EAAiB;AAEnB,MAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,GAAA;AAEd,MAAA,iBAAA,GAAA,mJAAA;AAEF,MAAA,uBAAA,EAAI;AAEN,MAAA,yBAAA,GAAA,oBAAA,CAAA,EAA8C,IAAA,UAAA,CAAA;AAK1C,MAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,eAAS,IAAA,iBAAA;MAAkB,CAAA;AAE3B,MAAA,iBAAA,IAAA,0BAAA;AACF,MAAA,uBAAA,EAAS,EACQ;;oBDTT,cAAc,eAAa,SAAA,gBAAA,gBAAA,eAAA,cAAE,iBAAe,WAAE,eAAa,OAAA,GAAA,QAAA,CAAA,kZAAA,EAAA,CAAA;;;sEAI1D,wBAAsB,CAAA;UANlC;uBACW,sBAAoB,SACrB,CAAC,cAAc,eAAe,iBAAiB,aAAa,GAAC,UAAA,wpBAAA,QAAA,CAAA,4aAAA,EAAA,CAAA;;;;6EAI3D,wBAAsB,EAAA,WAAA,0BAAA,UAAA,+EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
