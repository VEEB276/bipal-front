{"version":3,"sources":["node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/option-ChV6uQgD.mjs","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/index-DOxJc1m4.mjs","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/module-Cbt8Fcmv.mjs","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/date-formats-K6TQue-Y.mjs","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/datepicker.mjs","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/core.mjs","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/autocomplete.mjs","src/app/shared/components/autocomplete-select/autocomplete-select.component.ts","src/app/shared/components/autocomplete-select/autocomplete-select.component.html","src/app/modules/hojadevida/components/info-personal/info-personal.component.ts","src/app/modules/hojadevida/components/info-personal/info-personal.component.html","src/app/core/date/custom-date-adapter.ts","src/app/core/date/date-formats.ts","node_modules/.pnpm/@angular+material@19.2.18_@angular+cdk@19.2.19_@angular+common@19.2.14_@angular+core@19_102b8bfb5e382f9d0615b5538deb6474/node_modules/@angular/material/fesm2022/slider.mjs","src/app/modules/hojadevida/components/perfil-academico/services/estudios-hv.service.ts","src/app/core/directives/scroll-first-invalid.directive.ts","src/app/shared/utils/CustomControlStateMatcher.ts","src/app/shared/providers/custom.provider.ts","src/app/modules/hojadevida/components/perfil-academico/perfil-academico.component.ts","src/app/modules/hojadevida/components/perfil-academico/perfil-academico.component.html","src/app/modules/hojadevida/components/otros-estudios/services/otros-estudios.service.ts","src/app/modules/hojadevida/components/otros-estudios/otros-estudios.component.ts","src/app/modules/hojadevida/components/otros-estudios/otros-estudios.component.html","src/app/modules/hojadevida/components/experiencia/experiencia.component.ts","src/app/modules/hojadevida/components/experiencia/experiencia.component.html","src/app/modules/hojadevida/components/experiencia/services/experiencia.service.ts","src/app/modules/hojadevida/section-container-hv/section-container-hv.component.ts","src/app/modules/hojadevida/section-container-hv/section-container-hv.component.html"],"sourcesContent":["import { _IdGenerator } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ElementRef, ChangeDetectorRef, EventEmitter, isSignal, Output, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { M as MatRipple } from './ripple-BT3tzh6F.mjs';\nimport { M as MatPseudoCheckbox } from './pseudo-checkbox-CJ7seqQH.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-BQUT6wsL.mjs';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nconst _c2 = [\"text\"];\nconst _c3 = [[[\"mat-icon\"]], \"*\"];\nconst _c4 = [\"mat-icon\", \"*\"];\nfunction MatOption_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled)(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\");\n  }\n}\nfunction MatOption_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\nfunction MatOption_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r0.group.label, \")\");\n  }\n}\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup {\n  /** Label for the option group. */\n  label;\n  /** whether the option group is disabled. */\n  disabled = false;\n  /** Unique id for the underlying label. */\n  _labelId = inject(_IdGenerator).getId('mat-optgroup-label-');\n  /** Whether the group is in inert a11y mode. */\n  _inert;\n  constructor() {\n    const parent = inject(MAT_OPTION_PARENT_COMPONENT, {\n      optional: true\n    });\n    this._inert = parent?.inertGroups ?? false;\n  }\n  static ɵfac = function MatOptgroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatOptgroup)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatOptgroup,\n    selectors: [[\"mat-optgroup\"]],\n    hostAttrs: [1, \"mat-mdc-optgroup\"],\n    hostVars: 3,\n    hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n      }\n    },\n    inputs: {\n      label: \"label\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    exportAs: [\"matOptgroup\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_OPTGROUP,\n      useExisting: MatOptgroup\n    }])],\n    ngContentSelectors: _c1,\n    decls: 5,\n    vars: 4,\n    consts: [[\"role\", \"presentation\", 1, \"mat-mdc-optgroup-label\", 3, \"id\"], [1, \"mdc-list-item__primary-text\"]],\n    template: function MatOptgroup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵprojection(4, 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"id\", ctx._labelId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n      }\n    },\n    styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-sys-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-sys-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal;color:inherit}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-mdc-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-sys-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-sys-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal;color:inherit}\\n\"]\n    }]\n  }], () => [], {\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  source;\n  isUserInput;\n  constructor(/** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n  _element = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _parent = inject(MAT_OPTION_PARENT_COMPONENT, {\n    optional: true\n  });\n  group = inject(MAT_OPTGROUP, {\n    optional: true\n  });\n  _signalDisableRipple = false;\n  _selected = false;\n  _active = false;\n  _disabled = false;\n  _mostRecentViewValue = '';\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /** Whether or not the option is currently selected. */\n  get selected() {\n    return this._selected;\n  }\n  /** The form value of the option. */\n  value;\n  /** The unique ID of the option. */\n  id = inject(_IdGenerator).getId('mat-option-');\n  /** Whether the option is disabled. */\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() {\n    return this._signalDisableRipple ? this._parent.disableRipple() : !!this._parent?.disableRipple;\n  }\n  /** Whether to display checkmark for single-selection. */\n  get hideSingleSelectionIndicator() {\n    return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n  }\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  onSelectionChange = new EventEmitter();\n  /** Element containing the option's text. */\n  _text;\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  _stateChanges = new Subject();\n  constructor() {\n    const styleLoader = inject(_CdkPrivateStyleLoader);\n    styleLoader.load(_StructuralStylesLoader);\n    styleLoader.load(_VisuallyHiddenLoader);\n    this._signalDisableRipple = !!this._parent && isSignal(this._parent.disableRipple);\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._text?.nativeElement.textContent || '').trim();\n  }\n  /** Selects the option. */\n  select(emitEvent = true) {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n  /** Deselects the option. */\n  deselect(emitEvent = true) {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n  /** Sets focus onto this option. */\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    return this.viewValue;\n  }\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n  // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n  // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Gets the host DOM element. */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n      if (viewValue !== this._mostRecentViewValue) {\n        if (this._mostRecentViewValue) {\n          this._stateChanges.next();\n        }\n        this._mostRecentViewValue = viewValue;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /** Emits the selection change event. */\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n  static ɵfac = function MatOption_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatOption)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatOption,\n    selectors: [[\"mat-option\"]],\n    viewQuery: function MatOption_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._text = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-option\", \"mdc-list-item\"],\n    hostVars: 11,\n    hostBindings: function MatOption_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n          return ctx._selectViaInteraction();\n        })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled.toString());\n        i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected)(\"mat-mdc-option-multiple\", ctx.multiple)(\"mat-mdc-option-active\", ctx.active)(\"mdc-list-item--disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      value: \"value\",\n      id: \"id\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      onSelectionChange: \"onSelectionChange\"\n    },\n    exportAs: [\"matOption\"],\n    ngContentSelectors: _c4,\n    decls: 8,\n    vars: 5,\n    consts: [[\"text\", \"\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\", \"state\"], [1, \"mdc-list-item__primary-text\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"cdk-visually-hidden\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-mdc-option-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]],\n    template: function MatOption_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵtemplate(0, MatOption_Conditional_0_Template, 1, 2, \"mat-pseudo-checkbox\", 1);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementStart(2, \"span\", 2, 0);\n        i0.ɵɵprojection(4, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, MatOption_Conditional_5_Template, 1, 1, \"mat-pseudo-checkbox\", 3)(6, MatOption_Conditional_6_Template, 2, 1, \"span\", 4);\n        i0.ɵɵelement(7, \"div\", 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.multiple ? 0 : -1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵconditional(!ctx.multiple && ctx.selected && !ctx.hideSingleSelectionIndicator ? 5 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.group && ctx.group._inert ? 6 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n      }\n    },\n    dependencies: [MatPseudoCheckbox, MatRipple],\n    styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-sys-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}@media(forced-colors: active){.mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{right:auto;left:16px}}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-focus-indicator::before{content:\\\"\\\"}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[class.mdc-list-item--selected]': 'selected',\n        '[class.mat-mdc-option-multiple]': 'multiple',\n        '[class.mat-mdc-option-active]': 'active',\n        '[class.mdc-list-item--disabled]': 'disabled',\n        '[id]': 'id',\n        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n        // [WAI ARIA Listbox authoring practices guide](\n        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n        // selected option has either aria-selected or aria-checked  set to true. All options that are\n        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n        // aria-selected implementation of Chips and List components.\n        //\n        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n        // every option as \"selected\" (#21491).\n        '[attr.aria-selected]': 'selected',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-mdc-option mdc-list-item'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatPseudoCheckbox, MatRipple],\n      template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n@if (multiple) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n        aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n}\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n@if (!multiple && selected && !hideSingleSelectionIndicator) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n}\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n@if (group && group._inert) {\\n    <span class=\\\"cdk-visually-hidden\\\">({{ group.label }})</span>\\n}\\n\\n<div class=\\\"mat-mdc-option-ripple mat-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-sys-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}@media(forced-colors: active){.mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{right:auto;left:16px}}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-focus-indicator::before{content:\\\"\\\"}\\n\"]\n    }]\n  }], () => [], {\n    value: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    _text: [{\n      type: ViewChild,\n      args: ['text', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\nexport { MatOption as M, _countGroupLabelsBeforeOption as _, MatOptgroup as a, _getOptionScrollPosition as b, MAT_OPTION_PARENT_COMPONENT as c, MAT_OPTGROUP as d, MatOptionSelectionChange as e };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { M as MatRippleModule } from './index-SYVYjXwK.mjs';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport { M as MatOption, a as MatOptgroup } from './option-ChV6uQgD.mjs';\nimport { M as MatPseudoCheckboxModule } from './pseudo-checkbox-module-CAX2sutq.mjs';\nclass MatOptionModule {\n  static ɵfac = function MatOptionModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatOptionModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatOptionModule,\n    imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup],\n    exports: [MatOption, MatOptgroup]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup],\n      exports: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\nexport { MatOptionModule as M };\n","import { Overlay, CdkConnectedOverlay, CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, Renderer2, ANIMATION_MODULE_TYPE, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, Input, ViewChild, Output, Directive, NgModule } from '@angular/core';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _IdGenerator, LiveAnnouncer, removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, ENTER, SPACE, A, ESCAPE, DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, filter, map, takeUntil, take } from 'rxjs/operators';\nimport { NgClass } from '@angular/common';\nimport { h as MAT_FORM_FIELD, k as MatFormFieldControl } from './form-field-DqPi4knt.mjs';\nimport { _ as _countGroupLabelsBeforeOption, b as _getOptionScrollPosition, c as MAT_OPTION_PARENT_COMPONENT, M as MatOption, d as MAT_OPTGROUP } from './option-ChV6uQgD.mjs';\nimport { E as ErrorStateMatcher } from './error-options-Dm2JJUbF.mjs';\nimport { _ as _ErrorStateTracker } from './error-state-Dtb1IHM-.mjs';\nimport { M as MatOptionModule } from './index-DOxJc1m4.mjs';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport { M as MatFormFieldModule } from './module-BXZhw7pQ.mjs';\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nfunction MatSelect_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.placeholder);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.triggerValue);\n  }\n}\nfunction MatSelect_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtemplate(1, MatSelect_Conditional_5_Conditional_1_Template, 1, 0)(2, MatSelect_Conditional_5_Conditional_2_Template, 2, 1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.customTrigger ? 1 : 2);\n  }\n}\nfunction MatSelect_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12, 1);\n    i0.ɵɵlistener(\"keydown\", function MatSelect_ng_template_10_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    });\n    i0.ɵɵprojection(2, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open \", ctx_r1._getPanelTheme(), \"\");\n    i0.ɵɵclassProp(\"mat-select-panel-animations-enabled\", !ctx_r1._animationsDisabled);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelClass);\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"-panel\")(\"aria-multiselectable\", ctx_r1.multiple)(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby());\n  }\n}\nfunction getMatSelectDynamicMultipleError() {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n  return Error('`compareWith` must be a function.');\n}\n\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n  source;\n  value;\n  constructor(/** Reference to the select that emitted the change event. */\n  source, /** Current value of the select that emitted the event. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\nclass MatSelect {\n  _viewportRuler = inject(ViewportRuler);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _idGenerator = inject(_IdGenerator);\n  _renderer = inject(Renderer2);\n  _parentFormField = inject(MAT_FORM_FIELD, {\n    optional: true\n  });\n  ngControl = inject(NgControl, {\n    self: true,\n    optional: true\n  });\n  _liveAnnouncer = inject(LiveAnnouncer);\n  _defaultOptions = inject(MAT_SELECT_CONFIG, {\n    optional: true\n  });\n  _animationsDisabled = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  }) === 'NoopAnimations';\n  _initialized = new Subject();\n  _cleanupDetach;\n  /** All of the defined select options. */\n  options;\n  // TODO(crisbeto): this is only necessary for the non-MDC select, but it's technically a\n  // public API so we have to keep it. It should be deprecated and removed eventually.\n  /** All of the defined groups of options. */\n  optionGroups;\n  /** User-supplied override of the trigger element. */\n  customTrigger;\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions = [{\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top'\n  }, {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top'\n  }, {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom',\n    panelClass: 'mat-mdc-select-panel-above'\n  }, {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom',\n    panelClass: 'mat-mdc-select-panel-above'\n  }];\n  /** Scrolls a particular option into the view. */\n  _scrollOptionIntoView(index) {\n    const option = this.options.toArray()[index];\n    if (option) {\n      const panel = this.panel.nativeElement;\n      const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n      const element = option._getHostElement();\n      if (index === 0 && labelCount === 1) {\n        // If we've got one group label before the option and we're at the top option,\n        // scroll the list to the top. This is better UX than scrolling the list to the\n        // top of the option, because it allows the user to read the top group's label.\n        panel.scrollTop = 0;\n      } else {\n        panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n      }\n    }\n  }\n  /** Called when the panel has been opened and the overlay has settled on its final position. */\n  _positioningSettled() {\n    this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n  }\n  /** Creates a change event object that should be emitted by the select. */\n  _getChangeEvent(value) {\n    return new MatSelectChange(this, value);\n  }\n  /** Factory function used to create a scroll strategy for this select. */\n  _scrollStrategyFactory = inject(MAT_SELECT_SCROLL_STRATEGY);\n  /** Whether or not the overlay panel is open. */\n  _panelOpen = false;\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\n  _compareWith = (o1, o2) => o1 === o2;\n  /** Unique id for this input. */\n  _uid = this._idGenerator.getId('mat-select-');\n  /** Current `aria-labelledby` value for the select trigger. */\n  _triggerAriaLabelledBy = null;\n  /**\n   * Keeps track of the previous form control assigned to the select.\n   * Used to detect if it has changed.\n   */\n  _previousControl;\n  /** Emits whenever the component is destroyed. */\n  _destroy = new Subject();\n  /** Tracks the error state of the select. */\n  _errorStateTracker;\n  /**\n   * Emits whenever the component state changes and should cause the parent\n   * form-field to update. Implemented as part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  stateChanges = new Subject();\n  /**\n   * Disable the automatic labeling to avoid issues like #27241.\n   * @docs-private\n   */\n  disableAutomaticLabeling = true;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  userAriaDescribedBy;\n  /** Deals with the selection logic. */\n  _selectionModel;\n  /** Manages keyboard events for options in the panel. */\n  _keyManager;\n  /** Ideal origin for the overlay panel. */\n  _preferredOverlayOrigin;\n  /** Width of the overlay panel. */\n  _overlayWidth;\n  /** `View -> model callback called when value changes` */\n  _onChange = () => {};\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => {};\n  /** ID for the DOM node containing the select's value. */\n  _valueId = this._idGenerator.getId('mat-select-value-');\n  /** Strategy that will be used to handle scrolling while the select panel is open. */\n  _scrollStrategy;\n  _overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n  /** Whether the select is focused. */\n  get focused() {\n    return this._focused || this._panelOpen;\n  }\n  _focused = false;\n  /** A name for this control that can be used by `mat-form-field`. */\n  controlType = 'mat-select';\n  /** Trigger that opens the select. */\n  trigger;\n  /** Panel containing the select options. */\n  panel;\n  /** Overlay pane containing the options. */\n  _overlayDir;\n  /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n  panelClass;\n  /** Whether the select is disabled. */\n  disabled = false;\n  /** Whether ripples in the select are disabled. */\n  disableRipple = false;\n  /** Tab index of the select. */\n  tabIndex = 0;\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncParentProperties();\n  }\n  _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /** Placeholder to be shown if no value has been selected. */\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  _placeholder;\n  /** Whether the component is required. */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n  _required;\n  /** Whether the user should be allowed to select multiple options. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectDynamicMultipleError();\n    }\n    this._multiple = value;\n  }\n  _multiple = false;\n  /** Whether to center the active option over the trigger. */\n  disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  get compareWith() {\n    return this._compareWith;\n  }\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n  /** Value of the select control. */\n  get value() {\n    return this._value;\n  }\n  set value(newValue) {\n    const hasAssigned = this._assignValue(newValue);\n    if (hasAssigned) {\n      this._onChange(newValue);\n    }\n  }\n  _value;\n  /** Aria label of the select. */\n  ariaLabel = '';\n  /** Input that can be used to specify the `aria-labelledby` attribute. */\n  ariaLabelledby;\n  /** Object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n  typeaheadDebounceInterval;\n  /**\n   * Function used to sort the values in a select in multiple mode.\n   * Follows the same logic as `Array.prototype.sort`.\n   */\n  sortComparator;\n  /** Unique id of the element. */\n  get id() {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value || this._uid;\n    this.stateChanges.next();\n  }\n  _id;\n  /** Whether the select is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  /**\n   * Width of the panel. If set to `auto`, the panel will match the trigger width.\n   * If set to null or an empty string, the panel will grow to match the longest option's text.\n   */\n  panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined' ? this._defaultOptions.panelWidth : 'auto';\n  /**\n   * By default selecting an option with a `null` or `undefined` value will reset the select's\n   * value. Enable this option if the reset behavior doesn't match your requirements and instead\n   * the nullable options should become selected. The value of this input can be controlled app-wide\n   * using the `MAT_SELECT_CONFIG` injection token.\n   */\n  canSelectNullableOptions = this._defaultOptions?.canSelectNullableOptions ?? false;\n  /** Combined stream of all of the child options' change events. */\n  optionSelectionChanges = defer(() => {\n    const options = this.options;\n    if (options) {\n      return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n    }\n    return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\n  });\n  /** Event emitted when the select panel has been toggled. */\n  openedChange = new EventEmitter();\n  /** Event emitted when the select has been opened. */\n  _openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n  /** Event emitted when the select has been closed. */\n  _closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n  /** Event emitted when the selected value has been changed by the user. */\n  selectionChange = new EventEmitter();\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  valueChange = new EventEmitter();\n  constructor() {\n    const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n    const parentForm = inject(NgForm, {\n      optional: true\n    });\n    const parentFormGroup = inject(FormGroupDirective, {\n      optional: true\n    });\n    const tabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n    // Note that we only want to set this when the defaults pass it in, otherwise it should\n    // stay as `undefined` so that it falls back to the default in the key manager.\n    if (this._defaultOptions?.typeaheadDebounceInterval != null) {\n      this.typeaheadDebounceInterval = this._defaultOptions.typeaheadDebounceInterval;\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n    this._scrollStrategy = this._scrollStrategyFactory();\n    this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n  }\n  ngOnInit() {\n    this._selectionModel = new SelectionModel(this.multiple);\n    this.stateChanges.next();\n    this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this.panelOpen) {\n        this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n        this._changeDetectorRef.detectChanges();\n      }\n    });\n  }\n  ngAfterContentInit() {\n    this._initialized.next();\n    this._initialized.complete();\n    this._initKeyManager();\n    this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n  ngDoCheck() {\n    const newAriaLabelledby = this._getTriggerAriaLabelledby();\n    const ngControl = this.ngControl;\n    // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n    // is computed as a result of a content query which can cause this binding to trigger a\n    // \"changed after checked\" error.\n    if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n      const element = this._elementRef.nativeElement;\n      this._triggerAriaLabelledBy = newAriaLabelledby;\n      if (newAriaLabelledby) {\n        element.setAttribute('aria-labelledby', newAriaLabelledby);\n      } else {\n        element.removeAttribute('aria-labelledby');\n      }\n    }\n    if (ngControl) {\n      // The disabled state might go out of sync if the form group is swapped out. See #17860.\n      if (this._previousControl !== ngControl.control) {\n        if (this._previousControl !== undefined && ngControl.disabled !== null && ngControl.disabled !== this.disabled) {\n          this.disabled = ngControl.disabled;\n        }\n        this._previousControl = ngControl.control;\n      }\n      this.updateErrorState();\n    }\n  }\n  ngOnChanges(changes) {\n    // Updating the disabled state is handled by the input, but we need to additionally let\n    // the parent form field know to run change detection when the disabled state changes.\n    if (changes['disabled'] || changes['userAriaDescribedBy']) {\n      this.stateChanges.next();\n    }\n    if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n      this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n    }\n  }\n  ngOnDestroy() {\n    this._cleanupDetach?.();\n    this._keyManager?.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n    this.stateChanges.complete();\n    this._clearFromModal();\n  }\n  /** Toggles the overlay panel open or closed. */\n  toggle() {\n    this.panelOpen ? this.close() : this.open();\n  }\n  /** Opens the overlay panel. */\n  open() {\n    if (!this._canOpen()) {\n      return;\n    }\n    // It's important that we read this as late as possible, because doing so earlier will\n    // return a different element since it's based on queries in the form field which may\n    // not have run yet. Also this needs to be assigned before we measure the overlay width.\n    if (this._parentFormField) {\n      this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n    }\n    this._cleanupDetach?.();\n    this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n    this._applyModalPanelOwnership();\n    this._panelOpen = true;\n    this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this._changeDetectorRef.detectChanges();\n      this._positioningSettled();\n    });\n    this._overlayDir.attachOverlay();\n    this._keyManager.withHorizontalOrientation(null);\n    this._highlightCorrectOption();\n    this._changeDetectorRef.markForCheck();\n    // Required for the MDC form field to pick up when the overlay has been opened.\n    this.stateChanges.next();\n    // Simulate the animation event before we moved away from `@angular/animations`.\n    Promise.resolve().then(() => this.openedChange.emit(true));\n  }\n  /**\n   * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n   * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n   * panel. Track the modal we have changed so we can undo the changes on destroy.\n   */\n  _trackedModal = null;\n  /**\n   * If the autocomplete trigger is inside of an `aria-modal` element, connect\n   * that modal to the options panel with `aria-owns`.\n   *\n   * For some browser + screen reader combinations, when navigation is inside\n   * of an `aria-modal` element, the screen reader treats everything outside\n   * of that modal as hidden or invisible.\n   *\n   * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n   * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n   * from reaching the panel.\n   *\n   * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n   * the options panel. This effectively communicates to assistive technology that the\n   * options panel is part of the same interaction as the modal.\n   *\n   * At time of this writing, this issue is present in VoiceOver.\n   * See https://github.com/angular/components/issues/20694\n   */\n  _applyModalPanelOwnership() {\n    // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n    // the `LiveAnnouncer` and any other usages.\n    //\n    // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n    // section of the DOM we need to look through. This should cover all the cases we support, but\n    // the selector can be expanded if it turns out to be too narrow.\n    const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n    if (!modal) {\n      // Most commonly, the autocomplete trigger is not inside a modal.\n      return;\n    }\n    const panelId = `${this.id}-panel`;\n    if (this._trackedModal) {\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    }\n    addAriaReferencedId(modal, 'aria-owns', panelId);\n    this._trackedModal = modal;\n  }\n  /** Clears the reference to the listbox overlay element from the modal it was added to. */\n  _clearFromModal() {\n    if (!this._trackedModal) {\n      // Most commonly, the autocomplete trigger is not used inside a modal.\n      return;\n    }\n    const panelId = `${this.id}-panel`;\n    removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    this._trackedModal = null;\n  }\n  /** Closes the overlay panel and focuses the host element. */\n  close() {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this._exitAndDetach();\n      this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n      // Required for the MDC form field to pick up when the overlay has been closed.\n      this.stateChanges.next();\n      // Simulate the animation event before we moved away from `@angular/animations`.\n      Promise.resolve().then(() => this.openedChange.emit(false));\n    }\n  }\n  /** Triggers the exit animation and detaches the overlay at the end. */\n  _exitAndDetach() {\n    if (this._animationsDisabled || !this.panel) {\n      this._detachOverlay();\n      return;\n    }\n    this._cleanupDetach?.();\n    this._cleanupDetach = () => {\n      cleanupEvent();\n      clearTimeout(exitFallbackTimer);\n      this._cleanupDetach = undefined;\n    };\n    const panel = this.panel.nativeElement;\n    const cleanupEvent = this._renderer.listen(panel, 'animationend', event => {\n      if (event.animationName === '_mat-select-exit') {\n        this._cleanupDetach?.();\n        this._detachOverlay();\n      }\n    });\n    // Since closing the overlay depends on the animation, we have a fallback in case the panel\n    // doesn't animate. This can happen in some internal tests that do `* {animation: none}`.\n    const exitFallbackTimer = setTimeout(() => {\n      this._cleanupDetach?.();\n      this._detachOverlay();\n    }, 200);\n    panel.classList.add('mat-select-panel-exit');\n  }\n  /** Detaches the current overlay directive. */\n  _detachOverlay() {\n    this._overlayDir.detachOverlay();\n    // Some of the overlay detachment logic depends on change detection.\n    // Mark for check to ensure that things get picked up in a timely manner.\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value) {\n    this._assignValue(value);\n  }\n  /**\n   * Saves a callback function to be invoked when the select's value\n   * changes from user input. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the value changes.\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Saves a callback function to be invoked when the select is blurred\n   * by the user. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the component has been touched.\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  /** Whether or not the overlay panel is open. */\n  get panelOpen() {\n    return this._panelOpen;\n  }\n  /** The currently selected option. */\n  get selected() {\n    return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n  }\n  /** The value displayed in the trigger. */\n  get triggerValue() {\n    if (this.empty) {\n      return '';\n    }\n    if (this._multiple) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n    return this._selectionModel.selected[0].viewValue;\n  }\n  /** Refreshes the error state of the select. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** Whether the element is in RTL mode. */\n  _isRtl() {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n  /** Handles all keydown events on the select. */\n  _handleKeydown(event) {\n    if (!this.disabled) {\n      this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n  }\n  /** Handles keyboard events while the select is closed. */\n  _handleClosedKeydown(event) {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n    const manager = this._keyManager;\n    // Open the select on ALT + arrow key to match the native <select>\n    if (!manager.isTyping() && isOpenKey && !hasModifierKey(event) || (this.multiple || event.altKey) && isArrowKey) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.open();\n    } else if (!this.multiple) {\n      const previouslySelectedOption = this.selected;\n      manager.onKeydown(event);\n      const selectedOption = this.selected;\n      // Since the value has changed, we need to announce it ourselves.\n      if (selectedOption && previouslySelectedOption !== selectedOption) {\n        // We set a duration on the live announcement, because we want the live element to be\n        // cleared after a while so that users can't navigate to it using the arrow keys.\n        this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n      }\n    }\n  }\n  /** Handles keyboard events when the selected is open. */\n  _handleOpenKeydown(event) {\n    const manager = this._keyManager;\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const isTyping = manager.isTyping();\n    if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.close();\n      // Don't do anything in this case if the user is typing,\n      // because the typing sequence can include the space key.\n    } else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem && !hasModifierKey(event)) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n      event.preventDefault();\n      const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n      this.options.forEach(option => {\n        if (!option.disabled) {\n          hasDeselectedOptions ? option.select() : option.deselect();\n        }\n      });\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n      manager.onKeydown(event);\n      if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem && manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n  /** Handles keyboard events coming from the overlay. */\n  _handleOverlayKeydown(event) {\n    // TODO(crisbeto): prior to #30363 this was being handled inside the overlay directive, but we\n    // need control over the animation timing so we do it manually. We should remove the `keydown`\n    // listener from `.mat-mdc-select-panel` and handle all the events here. That may cause\n    // further test breakages so it's left for a follow-up.\n    if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n      event.preventDefault();\n      this.close();\n    }\n  }\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n    this._keyManager?.cancelTypeahead();\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n  /** Returns the theme to be used on the panel. */\n  _getPanelTheme() {\n    return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n  }\n  /** Whether the select has a value. */\n  get empty() {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n  _initializeSelection() {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      if (this.ngControl) {\n        this._value = this.ngControl.value;\n      }\n      this._setSelectionByValue(this._value);\n      this.stateChanges.next();\n    });\n  }\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  _setSelectionByValue(value) {\n    this.options.forEach(option => option.setInactiveStyles());\n    this._selectionModel.clear();\n    if (this.multiple && value) {\n      if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectNonArrayValueError();\n      }\n      value.forEach(currentValue => this._selectOptionByValue(currentValue));\n      this._sortValues();\n    } else {\n      const correspondingOption = this._selectOptionByValue(value);\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.updateActiveItem(correspondingOption);\n      } else if (!this.panelOpen) {\n        // Otherwise reset the highlighted option. Note that we only want to do this while\n        // closed, because doing it while open can shift the user's focus unnecessarily.\n        this._keyManager.updateActiveItem(-1);\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  _selectOptionByValue(value) {\n    const correspondingOption = this.options.find(option => {\n      // Skip options that are already in the model. This allows us to handle cases\n      // where the same primitive value is selected multiple times.\n      if (this._selectionModel.isSelected(option)) {\n        return false;\n      }\n      try {\n        // Treat null as a special reset value.\n        return (option.value != null || this.canSelectNullableOptions) && this._compareWith(option.value, value);\n      } catch (error) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n    return correspondingOption;\n  }\n  /** Assigns a specific value to the select. Returns whether the value has changed. */\n  _assignValue(newValue) {\n    // Always re-assign an array, because it might have been mutated.\n    if (newValue !== this._value || this._multiple && Array.isArray(newValue)) {\n      if (this.options) {\n        this._setSelectionByValue(newValue);\n      }\n      this._value = newValue;\n      return true;\n    }\n    return false;\n  }\n  // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n  // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n  // recommendation.\n  //\n  // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n  // makes a few exceptions for compound widgets.\n  //\n  // From [Developing a Keyboard Interface](\n  // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n  //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n  //   Listbox...\"\n  //\n  // The user can focus disabled options using the keyboard, but the user cannot click disabled\n  // options.\n  _skipPredicate = option => {\n    if (this.panelOpen) {\n      // Support keyboard focusing disabled options in an ARIA listbox.\n      return false;\n    }\n    // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n    // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n    // closed.\n    return option.disabled;\n  };\n  /** Gets how wide the overlay panel should be. */\n  _getOverlayWidth(preferredOrigin) {\n    if (this.panelWidth === 'auto') {\n      const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin ? preferredOrigin.elementRef : preferredOrigin || this._elementRef;\n      return refToMeasure.nativeElement.getBoundingClientRect().width;\n    }\n    return this.panelWidth === null ? '' : this.panelWidth;\n  }\n  /** Syncs the parent state with the individual options. */\n  _syncParentProperties() {\n    if (this.options) {\n      for (const option of this.options) {\n        option._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager(this.options).withTypeAhead(this.typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr').withHomeAndEnd().withPageUpDown().withAllowedModifierKeys(['shiftKey']).skipPredicate(this._skipPredicate);\n    this._keyManager.tabOut.subscribe(() => {\n      if (this.panelOpen) {\n        // Select the active item when tabbing away. This is consistent with how the native\n        // select behaves. Note that we only want to do this in single selection mode.\n        if (!this.multiple && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n        // Restore focus to the trigger before closing. Ensures that the focus\n        // position won't be lost if the user got focus into the overlay.\n        this.focus();\n        this.close();\n      }\n    });\n    this._keyManager.change.subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n      } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n  /** Drops current option subscriptions and IDs and resets from scratch. */\n  _resetOptions() {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.source, event.isUserInput);\n      if (event.isUserInput && !this.multiple && this._panelOpen) {\n        this.close();\n        this.focus();\n      }\n    });\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges)).pipe(takeUntil(changedOrDestroyed)).subscribe(() => {\n      // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n      // be the result of an expression changing. We have to use `detectChanges` in order\n      // to avoid \"changed after checked\" errors (see #14793).\n      this._changeDetectorRef.detectChanges();\n      this.stateChanges.next();\n    });\n  }\n  /** Invoked when an option is clicked. */\n  _onSelect(option, isUserInput) {\n    const wasSelected = this._selectionModel.isSelected(option);\n    if (!this.canSelectNullableOptions && option.value == null && !this._multiple) {\n      option.deselect();\n      this._selectionModel.clear();\n      if (this.value != null) {\n        this._propagateChanges(option.value);\n      }\n    } else {\n      if (wasSelected !== option.selected) {\n        option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n      }\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n      if (this.multiple) {\n        this._sortValues();\n        if (isUserInput) {\n          // In case the user selected the option with their mouse, we\n          // want to restore focus back to the trigger, in order to\n          // prevent the select keyboard controls from clashing with\n          // the ones from `mat-option`.\n          this.focus();\n        }\n      }\n    }\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n    this.stateChanges.next();\n  }\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  _sortValues() {\n    if (this.multiple) {\n      const options = this.options.toArray();\n      this._selectionModel.sort((a, b) => {\n        return this.sortComparator ? this.sortComparator(a, b, options) : options.indexOf(a) - options.indexOf(b);\n      });\n      this.stateChanges.next();\n    }\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges(fallbackValue) {\n    let valueToEmit;\n    if (this.multiple) {\n      valueToEmit = this.selected.map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first *enabled* option.\n   */\n  _highlightCorrectOption() {\n    if (this._keyManager) {\n      if (this.empty) {\n        // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n        // because it activates the first option that passes the skip predicate, rather than the\n        // first *enabled* option.\n        let firstEnabledOptionIndex = -1;\n        for (let index = 0; index < this.options.length; index++) {\n          const option = this.options.get(index);\n          if (!option.disabled) {\n            firstEnabledOptionIndex = index;\n            break;\n          }\n        }\n        this._keyManager.setActiveItem(firstEnabledOptionIndex);\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n  /** Whether the panel is allowed to open. */\n  _canOpen() {\n    return !this._panelOpen && !this.disabled && this.options?.length > 0 && !!this._overlayDir;\n  }\n  /** Focuses the select element. */\n  focus(options) {\n    this._elementRef.nativeElement.focus(options);\n  }\n  /** Gets the aria-labelledby for the select panel. */\n  _getPanelAriaLabelledby() {\n    if (this.ariaLabel) {\n      return null;\n    }\n    const labelId = this._parentFormField?.getLabelId() || null;\n    const labelExpression = labelId ? labelId + ' ' : '';\n    return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n  }\n  /** Determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant() {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n    return null;\n  }\n  /** Gets the aria-labelledby of the select component trigger. */\n  _getTriggerAriaLabelledby() {\n    if (this.ariaLabel) {\n      return null;\n    }\n    let value = this._parentFormField?.getLabelId() || '';\n    if (this.ariaLabelledby) {\n      value += ' ' + this.ariaLabelledby;\n    }\n    // The value should not be used for the trigger's aria-labelledby,\n    // but this currently \"breaks\" accessibility tests since they complain\n    // there is no aria-labelledby. This is because they are not setting an\n    // appropriate label on the form field or select.\n    // TODO: remove this conditional after fixing clients by ensuring their\n    // selects have a label applied.\n    if (!value) {\n      value = this._valueId;\n    }\n    return value;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    if (ids.length) {\n      this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      this._elementRef.nativeElement.removeAttribute('aria-describedby');\n    }\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    this.focus();\n    this.open();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    // Since the panel doesn't overlap the trigger, we\n    // want the label to only float when there's a value.\n    return this.panelOpen || !this.empty || this.focused && !!this.placeholder;\n  }\n  static ɵfac = function MatSelect_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelect)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSelect,\n    selectors: [[\"mat-select\"]],\n    contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n      }\n    },\n    viewQuery: function MatSelect_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"combobox\", \"aria-haspopup\", \"listbox\", 1, \"mat-mdc-select\"],\n    hostVars: 19,\n    hostBindings: function MatSelect_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        })(\"focus\", function MatSelect_focus_HostBindingHandler() {\n          return ctx._onFocus();\n        })(\"blur\", function MatSelect_blur_HostBindingHandler() {\n          return ctx._onBlur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        i0.ɵɵclassProp(\"mat-mdc-select-disabled\", ctx.disabled)(\"mat-mdc-select-invalid\", ctx.errorState)(\"mat-mdc-select-required\", ctx.required)(\"mat-mdc-select-empty\", ctx.empty)(\"mat-mdc-select-multiple\", ctx.multiple);\n      }\n    },\n    inputs: {\n      userAriaDescribedBy: [0, \"aria-describedby\", \"userAriaDescribedBy\"],\n      panelClass: \"panelClass\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n      hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n      placeholder: \"placeholder\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n      disableOptionCentering: [2, \"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute],\n      compareWith: \"compareWith\",\n      value: \"value\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      errorStateMatcher: \"errorStateMatcher\",\n      typeaheadDebounceInterval: [2, \"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute],\n      sortComparator: \"sortComparator\",\n      id: \"id\",\n      panelWidth: \"panelWidth\",\n      canSelectNullableOptions: [2, \"canSelectNullableOptions\", \"canSelectNullableOptions\", booleanAttribute]\n    },\n    outputs: {\n      openedChange: \"openedChange\",\n      _openedStream: \"opened\",\n      _closedStream: \"closed\",\n      selectionChange: \"selectionChange\",\n      valueChange: \"valueChange\"\n    },\n    exportAs: [\"matSelect\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatSelect\n    }, {\n      provide: MAT_OPTION_PARENT_COMPONENT,\n      useExisting: MatSelect\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c3,\n    decls: 11,\n    vars: 9,\n    consts: [[\"fallbackOverlayOrigin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [\"panel\", \"\"], [\"cdk-overlay-origin\", \"\", 1, \"mat-mdc-select-trigger\", 3, \"click\"], [1, \"mat-mdc-select-value\"], [1, \"mat-mdc-select-placeholder\", \"mat-mdc-select-min-line\"], [1, \"mat-mdc-select-value-text\"], [1, \"mat-mdc-select-arrow-wrapper\"], [1, \"mat-mdc-select-arrow\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"focusable\", \"false\", \"aria-hidden\", \"true\"], [\"d\", \"M7 10l5 5 5-5z\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"detach\", \"backdropClick\", \"overlayKeydown\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayFlexibleDimensions\"], [1, \"mat-mdc-select-min-line\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"keydown\", \"ngClass\"]],\n    template: function MatSelect_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵelementStart(0, \"div\", 2, 0);\n        i0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.open());\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, MatSelect_Conditional_4_Template, 2, 1, \"span\", 4)(5, MatSelect_Conditional_5_Template, 3, 1, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(8, \"svg\", 8);\n        i0.ɵɵelement(9, \"path\", 9);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(10, MatSelect_ng_template_10_Template, 3, 10, \"ng-template\", 10);\n        i0.ɵɵlistener(\"detach\", function MatSelect_Template_ng_template_detach_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.close());\n        })(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.close());\n        })(\"overlayKeydown\", function MatSelect_Template_ng_template_overlayKeydown_10_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handleOverlayKeydown($event));\n        });\n      }\n      if (rf & 2) {\n        const fallbackOverlayOrigin_r4 = i0.ɵɵreference(1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"id\", ctx._valueId);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.empty ? 4 : 5);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"cdkConnectedOverlayDisableClose\", true)(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", ctx._preferredOverlayOrigin || fallbackOverlayOrigin_r4)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayWidth\", ctx._overlayWidth)(\"cdkConnectedOverlayFlexibleDimensions\", true);\n      }\n    },\n    dependencies: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass],\n    styles: [\"@keyframes _mat-select-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-select-exit{from{opacity:1}to{opacity:0}}.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-sys-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-sys-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-disabled .mat-mdc-select-placeholder{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-sys-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}@media(forced-colors: active){.mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .mat-mdc-select-arrow svg{fill:GrayText}}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:relative;background-color:var(--mat-select-panel-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-select-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-select-panel-animations-enabled{animation:_mat-select-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-select-panel-animations-enabled.mat-select-panel-exit{animation:_mat-select-exit 100ms linear}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field:not(.mat-form-field-animations-enabled) .mat-mdc-select-placeholder,._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform, translateY(-8px))}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelect, [{\n    type: Component,\n    args: [{\n      selector: 'mat-select',\n      exportAs: 'matSelect',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'role': 'combobox',\n        'aria-haspopup': 'listbox',\n        'class': 'mat-mdc-select',\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n        '[attr.aria-expanded]': 'panelOpen',\n        '[attr.aria-label]': 'ariaLabel || null',\n        '[attr.aria-required]': 'required.toString()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n        '[class.mat-mdc-select-disabled]': 'disabled',\n        '[class.mat-mdc-select-invalid]': 'errorState',\n        '[class.mat-mdc-select-required]': 'required',\n        '[class.mat-mdc-select-empty]': 'empty',\n        '[class.mat-mdc-select-multiple]': 'multiple',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatSelect\n      }, {\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatSelect\n      }],\n      imports: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass],\n      template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayDisableClose]=\\\"true\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  [cdkConnectedOverlayFlexibleDimensions]=\\\"true\\\"\\n  (detach)=\\\"close()\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (overlayKeydown)=\\\"_handleOverlayKeydown($event)\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [class.mat-select-panel-animations-enabled]=\\\"!_animationsDisabled\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"@keyframes _mat-select-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-select-exit{from{opacity:1}to{opacity:0}}.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-sys-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-sys-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-disabled .mat-mdc-select-placeholder{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-sys-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}@media(forced-colors: active){.mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .mat-mdc-select-arrow svg{fill:GrayText}}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:relative;background-color:var(--mat-select-panel-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-select-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-select-panel-animations-enabled{animation:_mat-select-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-select-panel-animations-enabled.mat-select-panel-exit{animation:_mat-select-exit 100ms linear}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field:not(.mat-form-field-animations-enabled) .mat-mdc-select-placeholder,._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform, translateY(-8px))}\\n\"]\n    }]\n  }], () => [], {\n    options: [{\n      type: ContentChildren,\n      args: [MatOption, {\n        descendants: true\n      }]\n    }],\n    optionGroups: [{\n      type: ContentChildren,\n      args: [MAT_OPTGROUP, {\n        descendants: true\n      }]\n    }],\n    customTrigger: [{\n      type: ContentChild,\n      args: [MAT_SELECT_TRIGGER]\n    }],\n    userAriaDescribedBy: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    trigger: [{\n      type: ViewChild,\n      args: ['trigger']\n    }],\n    panel: [{\n      type: ViewChild,\n      args: ['panel']\n    }],\n    _overlayDir: [{\n      type: ViewChild,\n      args: [CdkConnectedOverlay]\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableOptionCentering: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    typeaheadDebounceInterval: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    sortComparator: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    panelWidth: [{\n      type: Input\n    }],\n    canSelectNullableOptions: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n  static ɵfac = function MatSelectTrigger_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectTrigger)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSelectTrigger,\n    selectors: [[\"mat-select-trigger\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_SELECT_TRIGGER,\n      useExisting: MatSelectTrigger\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectTrigger, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-select-trigger',\n      providers: [{\n        provide: MAT_SELECT_TRIGGER,\n        useExisting: MatSelectTrigger\n      }]\n    }]\n  }], null, null);\n})();\nclass MatSelectModule {\n  static ɵfac = function MatSelectModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatSelectModule,\n    imports: [OverlayModule, MatOptionModule, MatCommonModule, MatSelect, MatSelectTrigger],\n    exports: [CdkScrollableModule, MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n    imports: [OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule, MatFormFieldModule, MatOptionModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, MatOptionModule, MatCommonModule, MatSelect, MatSelectTrigger],\n      exports: [CdkScrollableModule, MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n      providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n    }]\n  }], null, null);\n})();\nexport { MatSelectModule as M, MAT_SELECT_SCROLL_STRATEGY as a, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY as b, MAT_SELECT_CONFIG as c, MAT_SELECT_SCROLL_STRATEGY_PROVIDER as d, MAT_SELECT_TRIGGER as e, MatSelectChange as f, MatSelect as g, MatSelectTrigger as h };\n","import { InjectionToken, inject, LOCALE_ID } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\nconst NOT_IMPLEMENTED = 'Method not implemented';\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  /** The locale to use for all dates. */\n  locale;\n  _localeChanges = new Subject();\n  /** A stream that emits when the locale changes. */\n  localeChanges = this._localeChanges;\n  /**\n   * Sets the time of one date to the time of another.\n   * @param target Date whose time will be set.\n   * @param hours New hours to set on the date object.\n   * @param minutes New minutes to set on the date object.\n   * @param seconds New seconds to set on the date object.\n   */\n  setTime(target, hours, minutes, seconds) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Gets the hours component of the given date.\n   * @param date The date to extract the hours from.\n   */\n  getHours(date) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Gets the minutes component of the given date.\n   * @param date The date to extract the minutes from.\n   */\n  getMinutes(date) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Gets the seconds component of the given date.\n   * @param date The date to extract the seconds from.\n   */\n  getSeconds(date) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Parses a date with a specific time from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   */\n  parseTime(value, parseFormat) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Adds an amount of seconds to the specified date.\n   * @param date Date to which to add the seconds.\n   * @param amount Amount of seconds to add to the date.\n   */\n  addSeconds(date, amount) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Compares the time values of two dates.\n   * @param first First date to compare.\n   * @param second Second date to compare.\n   * @returns 0 if the times are equal, a number less than 0 if the first time is earlier,\n   *     a number greater than 0 if the first time is later.\n   */\n  compareTime(first, second) {\n    return this.getHours(first) - this.getHours(second) || this.getMinutes(first) - this.getMinutes(second) || this.getSeconds(first) - this.getSeconds(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Checks if the times of two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the times of the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameTime(first, second) {\n    if (first && second) {\n      const firstValid = this.isValid(first);\n      const secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareTime(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\nexport { DateAdapter as D, MAT_DATE_LOCALE as M, MAT_DATE_FORMATS as a, MAT_DATE_LOCALE_FACTORY as b };\n","import * as i0 from '@angular/core';\nimport { Injectable, inject, ElementRef, NgZone, EventEmitter, Injector, Renderer2, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Optional, SkipSelf, InjectionToken, ChangeDetectorRef, ViewChild, ANIMATION_MODULE_TYPE, ViewContainerRef, booleanAttribute, Directive, forwardRef, signal, HostAttributeToken, ContentChild, TemplateRef, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { D as DateAdapter, a as MAT_DATE_FORMATS } from './date-formats-K6TQue-Y.mjs';\nimport { _IdGenerator, CdkMonitorFocus, CdkTrapFocus, A11yModule } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceStringArray } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, _bindEventWithOptions, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { ComponentPortal, CdkPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { NgClass, DOCUMENT } from '@angular/common';\nimport { startWith, take, filter } from 'rxjs/operators';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-BQUT6wsL.mjs';\nimport { MatButton, MatButtonModule } from './button.mjs';\nimport { M as MatIconButton } from './icon-button-D1J0zeqv.mjs';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, ControlContainer, NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { M as MAT_INPUT_VALUE_ACCESSOR } from './input-value-accessor-D1GvPuqO.mjs';\nimport { h as MAT_FORM_FIELD, k as MatFormFieldControl } from './form-field-DqPi4knt.mjs';\nimport { E as ErrorStateMatcher } from './error-options-Dm2JJUbF.mjs';\nimport { _ as _ErrorStateTracker } from './error-state-Dtb1IHM-.mjs';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport './index-SYVYjXwK.mjs';\nimport './ripple-BT3tzh6F.mjs';\nimport './ripple-loader-Ce3DAhPW.mjs';\nimport '@angular/cdk/observers/private';\n\n/** @docs-private */\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction _forTrack0($index, $item) {\n  return this._trackRow($item);\n}\nconst _forTrack1 = ($index, $item) => $item.id;\nfunction MatCalendarBody_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 0)(1, \"td\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    i0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n  }\n}\nfunction MatCalendarBody_For_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    i0.ɵɵattribute(\"colspan\", ctx_r0._firstRowOffset);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0._firstRowOffset >= ctx_r0.labelMinRequiredCells ? ctx_r0.label : \"\", \" \");\n  }\n}\nfunction MatCalendarBody_For_2_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 6)(1, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function MatCalendarBody_For_2_For_3_Template_button_click_1_listener($event) {\n      const item_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._cellClicked(item_r3, $event));\n    })(\"focus\", function MatCalendarBody_For_2_For_3_Template_button_focus_1_listener($event) {\n      const item_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._emitActiveDateChange(item_r3, $event));\n    });\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"span\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ɵ$index_14_r4 = ctx.$index;\n    const ɵ$index_7_r5 = i0.ɵɵnextContext().$index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"width\", ctx_r0._cellWidth)(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    i0.ɵɵattribute(\"data-mat-row\", ɵ$index_7_r5)(\"data-mat-col\", ɵ$index_14_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r3.enabled)(\"mat-calendar-body-active\", ctx_r0._isActiveCell(ɵ$index_7_r5, ɵ$index_14_r4))(\"mat-calendar-body-range-start\", ctx_r0._isRangeStart(item_r3.compareValue))(\"mat-calendar-body-range-end\", ctx_r0._isRangeEnd(item_r3.compareValue))(\"mat-calendar-body-in-range\", ctx_r0._isInRange(item_r3.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r0._isComparisonBridgeStart(item_r3.compareValue, ɵ$index_7_r5, ɵ$index_14_r4))(\"mat-calendar-body-comparison-bridge-end\", ctx_r0._isComparisonBridgeEnd(item_r3.compareValue, ɵ$index_7_r5, ɵ$index_14_r4))(\"mat-calendar-body-comparison-start\", ctx_r0._isComparisonStart(item_r3.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r0._isComparisonEnd(item_r3.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r0._isInComparisonRange(item_r3.compareValue))(\"mat-calendar-body-preview-start\", ctx_r0._isPreviewStart(item_r3.compareValue))(\"mat-calendar-body-preview-end\", ctx_r0._isPreviewEnd(item_r3.compareValue))(\"mat-calendar-body-in-preview\", ctx_r0._isInPreview(item_r3.compareValue));\n    i0.ɵɵproperty(\"ngClass\", item_r3.cssClasses)(\"tabindex\", ctx_r0._isActiveCell(ɵ$index_7_r5, ɵ$index_14_r4) ? 0 : -1);\n    i0.ɵɵattribute(\"aria-label\", item_r3.ariaLabel)(\"aria-disabled\", !item_r3.enabled || null)(\"aria-pressed\", ctx_r0._isSelected(item_r3.compareValue))(\"aria-current\", ctx_r0.todayValue === item_r3.compareValue ? \"date\" : null)(\"aria-describedby\", ctx_r0._getDescribedby(item_r3.compareValue));\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r0._isSelected(item_r3.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r0._isComparisonIdentical(item_r3.compareValue))(\"mat-calendar-body-today\", ctx_r0.todayValue === item_r3.compareValue);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r3.displayValue, \" \");\n  }\n}\nfunction MatCalendarBody_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 1);\n    i0.ɵɵtemplate(1, MatCalendarBody_For_2_Conditional_1_Template, 2, 6, \"td\", 4);\n    i0.ɵɵrepeaterCreate(2, MatCalendarBody_For_2_For_3_Template, 5, 48, \"td\", 5, _forTrack1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r6 = ctx.$implicit;\n    const ɵ$index_7_r5 = ctx.$index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ɵ$index_7_r5 === 0 && ctx_r0._firstRowOffset ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(row_r6);\n  }\n}\nfunction MatMonthView_For_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 2)(1, \"span\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(day_r1.long);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(day_r1.narrow);\n  }\n}\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) {}\nfunction MatCalendar_Case_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-month-view\", 4);\n    i0.ɵɵtwoWayListener(\"activeDateChange\", function MatCalendar_Case_2_Template_mat_month_view_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.activeDate, $event) || (ctx_r1.activeDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"_userSelection\", function MatCalendar_Case_2_Template_mat_month_view__userSelection_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._dateSelected($event));\n    })(\"dragStarted\", function MatCalendar_Case_2_Template_mat_month_view_dragStarted_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._dragStarted($event));\n    })(\"dragEnded\", function MatCalendar_Case_2_Template_mat_month_view_dragEnded_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._dragEnded($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"activeDate\", ctx_r1.activeDate);\n    i0.ɵɵproperty(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd)(\"startDateAccessibleName\", ctx_r1.startDateAccessibleName)(\"endDateAccessibleName\", ctx_r1.endDateAccessibleName)(\"activeDrag\", ctx_r1._activeDrag);\n  }\n}\nfunction MatCalendar_Case_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-year-view\", 5);\n    i0.ɵɵtwoWayListener(\"activeDateChange\", function MatCalendar_Case_3_Template_mat_year_view_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.activeDate, $event) || (ctx_r1.activeDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"monthSelected\", function MatCalendar_Case_3_Template_mat_year_view_monthSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._monthSelectedInYearView($event));\n    })(\"selectedChange\", function MatCalendar_Case_3_Template_mat_year_view_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._goToDateInView($event, \"month\"));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"activeDate\", ctx_r1.activeDate);\n    i0.ɵɵproperty(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n  }\n}\nfunction MatCalendar_Case_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-multi-year-view\", 6);\n    i0.ɵɵtwoWayListener(\"activeDateChange\", function MatCalendar_Case_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.activeDate, $event) || (ctx_r1.activeDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"yearSelected\", function MatCalendar_Case_4_Template_mat_multi_year_view_yearSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._yearSelectedInMultiYearView($event));\n    })(\"selectedChange\", function MatCalendar_Case_4_Template_mat_multi_year_view_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._goToDateInView($event, \"year\"));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"activeDate\", ctx_r1.activeDate);\n    i0.ɵɵproperty(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n  }\n}\nfunction MatDatepickerContent_ng_template_2_Template(rf, ctx) {}\nconst _c2 = [\"button\"];\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction MatDatepickerToggle_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"path\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nconst _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\nfunction MatDatepickerActions_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction createMissingDateImplError(provider) {\n  return Error(`MatDatepicker: No provider found for ${provider}. You must add one of the following ` + `to your app config: provideNativeDateAdapter, provideDateFnsAdapter, ` + `provideLuxonDateAdapter, provideMomentDateAdapter, or provide a custom implementation.`);\n}\n\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  changes = new Subject();\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel = 'Calendar';\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel = 'Open calendar';\n  /** Label for the button used to close the calendar popup. */\n  closeCalendarLabel = 'Close calendar';\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel = 'Previous month';\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel = 'Next month';\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel = 'Previous year';\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel = 'Next year';\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel = 'Previous 24 years';\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel = 'Next 24 years';\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel = 'Choose date';\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel = 'Choose month and year';\n  /**\n   * A label for the first date of a range of dates (used by screen readers).\n   * @deprecated Provide your own internationalization string.\n   * @breaking-change 17.0.0\n   */\n  startDateLabel = 'Start date';\n  /**\n   * A label for the last date of a range of dates (used by screen readers).\n   * @deprecated Provide your own internationalization string.\n   * @breaking-change 17.0.0\n   */\n  endDateLabel = 'End date';\n  /**\n   * A label for the Comparison date of a range of dates (used by screen readers).\n   */\n  comparisonDateLabel = 'Comparison range';\n  /** Formats a range of years (used for visuals). */\n  formatYearRange(start, end) {\n    return `${start} \\u2013 ${end}`;\n  }\n  /** Formats a label for a range of years (used by screen readers). */\n  formatYearRangeLabel(start, end) {\n    return `${start} to ${end}`;\n  }\n  static ɵfac = function MatDatepickerIntl_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerIntl)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatDatepickerIntl,\n    factory: MatDatepickerIntl.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nlet uniqueIdCounter$1 = 0;\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n  value;\n  displayValue;\n  ariaLabel;\n  enabled;\n  cssClasses;\n  compareValue;\n  rawValue;\n  id = uniqueIdCounter$1++;\n  constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n    this.value = value;\n    this.displayValue = displayValue;\n    this.ariaLabel = ariaLabel;\n    this.enabled = enabled;\n    this.cssClasses = cssClasses;\n    this.compareValue = compareValue;\n    this.rawValue = rawValue;\n  }\n}\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = {\n  passive: false,\n  capture: true\n};\n/** Event options that can be used to bind a passive, capturing event. */\nconst passiveCapturingEventOptions = {\n  passive: true,\n  capture: true\n};\n/** Event options that can be used to bind a passive, non-capturing event. */\nconst passiveEventOptions = {\n  passive: true\n};\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n  _elementRef = inject(ElementRef);\n  _ngZone = inject(NgZone);\n  _platform = inject(Platform);\n  _intl = inject(MatDatepickerIntl);\n  _eventCleanups;\n  /**\n   * Used to skip the next focus event when rendering the preview range.\n   * We need a flag like this, because some browsers fire focus events asynchronously.\n   */\n  _skipNextFocus;\n  /**\n   * Used to focus the active cell after change detection has run.\n   */\n  _focusActiveCellAfterViewChecked = false;\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  label;\n  /** The cells to display in the table. */\n  rows;\n  /** The value in the table that corresponds to today. */\n  todayValue;\n  /** Start value of the selected date range. */\n  startValue;\n  /** End value of the selected date range. */\n  endValue;\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  labelMinRequiredCells;\n  /** The number of columns in the table. */\n  numCols = 7;\n  /** The cell number of the active cell in the table. */\n  activeCell = 0;\n  ngAfterViewChecked() {\n    if (this._focusActiveCellAfterViewChecked) {\n      this._focusActiveCell();\n      this._focusActiveCellAfterViewChecked = false;\n    }\n  }\n  /** Whether a range is being selected. */\n  isRange = false;\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  cellAspectRatio = 1;\n  /** Start of the comparison range. */\n  comparisonStart;\n  /** End of the comparison range. */\n  comparisonEnd;\n  /** Start of the preview range. */\n  previewStart = null;\n  /** End of the preview range. */\n  previewEnd = null;\n  /** ARIA Accessible name of the `<input matStartDate/>` */\n  startDateAccessibleName;\n  /** ARIA Accessible name of the `<input matEndDate/>` */\n  endDateAccessibleName;\n  /** Emits when a new value is selected. */\n  selectedValueChange = new EventEmitter();\n  /** Emits when the preview has changed as a result of a user action. */\n  previewChange = new EventEmitter();\n  activeDateChange = new EventEmitter();\n  /** Emits the date at the possible start of a drag event. */\n  dragStarted = new EventEmitter();\n  /** Emits the date at the conclusion of a drag, or null if mouse was not released on a date. */\n  dragEnded = new EventEmitter();\n  /** The number of blank cells to put at the beginning for the first row. */\n  _firstRowOffset;\n  /** Padding for the individual date cells. */\n  _cellPadding;\n  /** Width of an individual cell. */\n  _cellWidth;\n  /** ID for the start date label. */\n  _startDateLabelId;\n  /** ID for the end date label. */\n  _endDateLabelId;\n  /** ID for the comparison start date label. */\n  _comparisonStartDateLabelId;\n  /** ID for the comparison end date label. */\n  _comparisonEndDateLabelId;\n  _didDragSinceMouseDown = false;\n  _injector = inject(Injector);\n  comparisonDateAccessibleName = this._intl.comparisonDateLabel;\n  /**\n   * Tracking function for rows based on their identity. Ideally we would use some sort of\n   * key on the row, but that would require a breaking change for the `rows` input. We don't\n   * use the built-in identity tracking, because it logs warnings.\n   */\n  _trackRow = row => row;\n  constructor() {\n    const renderer = inject(Renderer2);\n    const idGenerator = inject(_IdGenerator);\n    this._startDateLabelId = idGenerator.getId('mat-calendar-body-start-');\n    this._endDateLabelId = idGenerator.getId('mat-calendar-body-end-');\n    this._comparisonStartDateLabelId = idGenerator.getId('mat-calendar-body-comparison-start-');\n    this._comparisonEndDateLabelId = idGenerator.getId('mat-calendar-body-comparison-end-');\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    this._ngZone.runOutsideAngular(() => {\n      const element = this._elementRef.nativeElement;\n      const cleanups = [\n      // `touchmove` is active since we need to call `preventDefault`.\n      _bindEventWithOptions(renderer, element, 'touchmove', this._touchmoveHandler, activeCapturingEventOptions), _bindEventWithOptions(renderer, element, 'mouseenter', this._enterHandler, passiveCapturingEventOptions), _bindEventWithOptions(renderer, element, 'focus', this._enterHandler, passiveCapturingEventOptions), _bindEventWithOptions(renderer, element, 'mouseleave', this._leaveHandler, passiveCapturingEventOptions), _bindEventWithOptions(renderer, element, 'blur', this._leaveHandler, passiveCapturingEventOptions), _bindEventWithOptions(renderer, element, 'mousedown', this._mousedownHandler, passiveEventOptions), _bindEventWithOptions(renderer, element, 'touchstart', this._mousedownHandler, passiveEventOptions)];\n      if (this._platform.isBrowser) {\n        cleanups.push(renderer.listen('window', 'mouseup', this._mouseupHandler), renderer.listen('window', 'touchend', this._touchendHandler));\n      }\n      this._eventCleanups = cleanups;\n    });\n  }\n  /** Called when a cell is clicked. */\n  _cellClicked(cell, event) {\n    // Ignore \"clicks\" that are actually canceled drags (eg the user dragged\n    // off and then went back to this cell to undo).\n    if (this._didDragSinceMouseDown) {\n      return;\n    }\n    if (cell.enabled) {\n      this.selectedValueChange.emit({\n        value: cell.value,\n        event\n      });\n    }\n  }\n  _emitActiveDateChange(cell, event) {\n    if (cell.enabled) {\n      this.activeDateChange.emit({\n        value: cell.value,\n        event\n      });\n    }\n  }\n  /** Returns whether a cell should be marked as selected. */\n  _isSelected(value) {\n    return this.startValue === value || this.endValue === value;\n  }\n  ngOnChanges(changes) {\n    const columnChanges = changes['numCols'];\n    const {\n      rows,\n      numCols\n    } = this;\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n  ngOnDestroy() {\n    this._eventCleanups.forEach(cleanup => cleanup());\n  }\n  /** Returns whether a cell is active. */\n  _isActiveCell(rowIndex, colIndex) {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n    return cellNumber == this.activeCell;\n  }\n  /**\n   * Focuses the active cell after the microtask queue is empty.\n   *\n   * Adding a 0ms setTimeout seems to fix Voiceover losing focus when pressing PageUp/PageDown\n   * (issue #24330).\n   *\n   * Determined a 0ms by gradually increasing duration from 0 and testing two use cases with screen\n   * reader enabled:\n   *\n   * 1. Pressing PageUp/PageDown repeatedly with pausing between each key press.\n   * 2. Pressing and holding the PageDown key with repeated keys enabled.\n   *\n   * Test 1 worked roughly 95-99% of the time with 0ms and got a little bit better as the duration\n   * increased. Test 2 got slightly better until the duration was long enough to interfere with\n   * repeated keys. If the repeated key speed was faster than the timeout duration, then pressing\n   * and holding pagedown caused the entire page to scroll.\n   *\n   * Since repeated key speed can verify across machines, determined that any duration could\n   * potentially interfere with repeated keys. 0ms would be best because it almost entirely\n   * eliminates the focus being lost in Voiceover (#24330) without causing unintended side effects.\n   * Adding delay also complicates writing tests.\n   */\n  _focusActiveCell(movePreview = true) {\n    afterNextRender(() => {\n      setTimeout(() => {\n        const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n        if (activeCell) {\n          if (!movePreview) {\n            this._skipNextFocus = true;\n          }\n          activeCell.focus();\n        }\n      });\n    }, {\n      injector: this._injector\n    });\n  }\n  /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n  _scheduleFocusActiveCellAfterViewChecked() {\n    this._focusActiveCellAfterViewChecked = true;\n  }\n  /** Gets whether a value is the start of the main range. */\n  _isRangeStart(value) {\n    return isStart(value, this.startValue, this.endValue);\n  }\n  /** Gets whether a value is the end of the main range. */\n  _isRangeEnd(value) {\n    return isEnd(value, this.startValue, this.endValue);\n  }\n  /** Gets whether a value is within the currently-selected range. */\n  _isInRange(value) {\n    return isInRange(value, this.startValue, this.endValue, this.isRange);\n  }\n  /** Gets whether a value is the start of the comparison range. */\n  _isComparisonStart(value) {\n    return isStart(value, this.comparisonStart, this.comparisonEnd);\n  }\n  /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n  _isComparisonBridgeStart(value, rowIndex, colIndex) {\n    if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n      return false;\n    }\n    let previousCell = this.rows[rowIndex][colIndex - 1];\n    if (!previousCell) {\n      const previousRow = this.rows[rowIndex - 1];\n      previousCell = previousRow && previousRow[previousRow.length - 1];\n    }\n    return previousCell && !this._isRangeEnd(previousCell.compareValue);\n  }\n  /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n  _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n    if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n      return false;\n    }\n    let nextCell = this.rows[rowIndex][colIndex + 1];\n    if (!nextCell) {\n      const nextRow = this.rows[rowIndex + 1];\n      nextCell = nextRow && nextRow[0];\n    }\n    return nextCell && !this._isRangeStart(nextCell.compareValue);\n  }\n  /** Gets whether a value is the end of the comparison range. */\n  _isComparisonEnd(value) {\n    return isEnd(value, this.comparisonStart, this.comparisonEnd);\n  }\n  /** Gets whether a value is within the current comparison range. */\n  _isInComparisonRange(value) {\n    return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n  }\n  /**\n   * Gets whether a value is the same as the start and end of the comparison range.\n   * For context, the functions that we use to determine whether something is the start/end of\n   * a range don't allow for the start and end to be on the same day, because we'd have to use\n   * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n   * the regular range, because when it happens, the selected styles take over and still show where\n   * the range would've been, however we don't have these selected styles for a comparison range.\n   * This function is used to apply a class that serves the same purpose as the one for selected\n   * dates, but it only applies in the context of a comparison range.\n   */\n  _isComparisonIdentical(value) {\n    // Note that we don't need to null check the start/end\n    // here, because the `value` will always be defined.\n    return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n  }\n  /** Gets whether a value is the start of the preview range. */\n  _isPreviewStart(value) {\n    return isStart(value, this.previewStart, this.previewEnd);\n  }\n  /** Gets whether a value is the end of the preview range. */\n  _isPreviewEnd(value) {\n    return isEnd(value, this.previewStart, this.previewEnd);\n  }\n  /** Gets whether a value is inside the preview range. */\n  _isInPreview(value) {\n    return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n  }\n  /** Gets ids of aria descriptions for the start and end of a date range. */\n  _getDescribedby(value) {\n    if (!this.isRange) {\n      return null;\n    }\n    if (this.startValue === value && this.endValue === value) {\n      return `${this._startDateLabelId} ${this._endDateLabelId}`;\n    } else if (this.startValue === value) {\n      return this._startDateLabelId;\n    } else if (this.endValue === value) {\n      return this._endDateLabelId;\n    }\n    if (this.comparisonStart !== null && this.comparisonEnd !== null) {\n      if (value === this.comparisonStart && value === this.comparisonEnd) {\n        return `${this._comparisonStartDateLabelId} ${this._comparisonEndDateLabelId}`;\n      } else if (value === this.comparisonStart) {\n        return this._comparisonStartDateLabelId;\n      } else if (value === this.comparisonEnd) {\n        return this._comparisonEndDateLabelId;\n      }\n    }\n    return null;\n  }\n  /**\n   * Event handler for when the user enters an element\n   * inside the calendar body (e.g. by hovering in or focus).\n   */\n  _enterHandler = event => {\n    if (this._skipNextFocus && event.type === 'focus') {\n      this._skipNextFocus = false;\n      return;\n    }\n    // We only need to hit the zone when we're selecting a range.\n    if (event.target && this.isRange) {\n      const cell = this._getCellFromElement(event.target);\n      if (cell) {\n        this._ngZone.run(() => this.previewChange.emit({\n          value: cell.enabled ? cell : null,\n          event\n        }));\n      }\n    }\n  };\n  _touchmoveHandler = event => {\n    if (!this.isRange) return;\n    const target = getActualTouchTarget(event);\n    const cell = target ? this._getCellFromElement(target) : null;\n    if (target !== event.target) {\n      this._didDragSinceMouseDown = true;\n    }\n    // If the initial target of the touch is a date cell, prevent default so\n    // that the move is not handled as a scroll.\n    if (getCellElement(event.target)) {\n      event.preventDefault();\n    }\n    this._ngZone.run(() => this.previewChange.emit({\n      value: cell?.enabled ? cell : null,\n      event\n    }));\n  };\n  /**\n   * Event handler for when the user's pointer leaves an element\n   * inside the calendar body (e.g. by hovering out or blurring).\n   */\n  _leaveHandler = event => {\n    // We only need to hit the zone when we're selecting a range.\n    if (this.previewEnd !== null && this.isRange) {\n      if (event.type !== 'blur') {\n        this._didDragSinceMouseDown = true;\n      }\n      // Only reset the preview end value when leaving cells. This looks better, because\n      // we have a gap between the cells and the rows and we don't want to remove the\n      // range just for it to show up again when the user moves a few pixels to the side.\n      if (event.target && this._getCellFromElement(event.target) && !(event.relatedTarget && this._getCellFromElement(event.relatedTarget))) {\n        this._ngZone.run(() => this.previewChange.emit({\n          value: null,\n          event\n        }));\n      }\n    }\n  };\n  /**\n   * Triggered on mousedown or touchstart on a date cell.\n   * Respsonsible for starting a drag sequence.\n   */\n  _mousedownHandler = event => {\n    if (!this.isRange) return;\n    this._didDragSinceMouseDown = false;\n    // Begin a drag if a cell within the current range was targeted.\n    const cell = event.target && this._getCellFromElement(event.target);\n    if (!cell || !this._isInRange(cell.compareValue)) {\n      return;\n    }\n    this._ngZone.run(() => {\n      this.dragStarted.emit({\n        value: cell.rawValue,\n        event\n      });\n    });\n  };\n  /** Triggered on mouseup anywhere. Respsonsible for ending a drag sequence. */\n  _mouseupHandler = event => {\n    if (!this.isRange) return;\n    const cellElement = getCellElement(event.target);\n    if (!cellElement) {\n      // Mouseup happened outside of datepicker. Cancel drag.\n      this._ngZone.run(() => {\n        this.dragEnded.emit({\n          value: null,\n          event\n        });\n      });\n      return;\n    }\n    if (cellElement.closest('.mat-calendar-body') !== this._elementRef.nativeElement) {\n      // Mouseup happened inside a different month instance.\n      // Allow it to handle the event.\n      return;\n    }\n    this._ngZone.run(() => {\n      const cell = this._getCellFromElement(cellElement);\n      this.dragEnded.emit({\n        value: cell?.rawValue ?? null,\n        event\n      });\n    });\n  };\n  /** Triggered on touchend anywhere. Respsonsible for ending a drag sequence. */\n  _touchendHandler = event => {\n    const target = getActualTouchTarget(event);\n    if (target) {\n      this._mouseupHandler({\n        target\n      });\n    }\n  };\n  /** Finds the MatCalendarCell that corresponds to a DOM node. */\n  _getCellFromElement(element) {\n    const cell = getCellElement(element);\n    if (cell) {\n      const row = cell.getAttribute('data-mat-row');\n      const col = cell.getAttribute('data-mat-col');\n      if (row && col) {\n        return this.rows[parseInt(row)][parseInt(col)];\n      }\n    }\n    return null;\n  }\n  static ɵfac = function MatCalendarBody_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCalendarBody)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCalendarBody,\n    selectors: [[\"\", \"mat-calendar-body\", \"\"]],\n    hostAttrs: [1, \"mat-calendar-body\"],\n    inputs: {\n      label: \"label\",\n      rows: \"rows\",\n      todayValue: \"todayValue\",\n      startValue: \"startValue\",\n      endValue: \"endValue\",\n      labelMinRequiredCells: \"labelMinRequiredCells\",\n      numCols: \"numCols\",\n      activeCell: \"activeCell\",\n      isRange: \"isRange\",\n      cellAspectRatio: \"cellAspectRatio\",\n      comparisonStart: \"comparisonStart\",\n      comparisonEnd: \"comparisonEnd\",\n      previewStart: \"previewStart\",\n      previewEnd: \"previewEnd\",\n      startDateAccessibleName: \"startDateAccessibleName\",\n      endDateAccessibleName: \"endDateAccessibleName\"\n    },\n    outputs: {\n      selectedValueChange: \"selectedValueChange\",\n      previewChange: \"previewChange\",\n      activeDateChange: \"activeDateChange\",\n      dragStarted: \"dragStarted\",\n      dragEnded: \"dragEnded\"\n    },\n    exportAs: [\"matCalendarBody\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c0,\n    decls: 11,\n    vars: 11,\n    consts: [[\"aria-hidden\", \"true\"], [\"role\", \"row\"], [1, \"mat-calendar-body-hidden-label\", 3, \"id\"], [1, \"mat-calendar-body-label\"], [1, \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell-container\", 3, \"width\", \"paddingTop\", \"paddingBottom\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell-container\"], [\"type\", \"button\", 1, \"mat-calendar-body-cell\", 3, \"click\", \"focus\", \"ngClass\", \"tabindex\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-cell-preview\"]],\n    template: function MatCalendarBody_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MatCalendarBody_Conditional_0_Template, 3, 6, \"tr\", 0);\n        i0.ɵɵrepeaterCreate(1, MatCalendarBody_For_2_Template, 4, 1, \"tr\", 1, _forTrack0, true);\n        i0.ɵɵelementStart(3, \"span\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\", 2);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"span\", 2);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"span\", 2);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx._firstRowOffset < ctx.labelMinRequiredCells ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵrepeater(ctx.rows);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"id\", ctx._startDateLabelId);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\" \", ctx.startDateAccessibleName, \"\\n\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"id\", ctx._endDateLabelId);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\" \", ctx.endDateAccessibleName, \"\\n\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"id\", ctx._comparisonStartDateLabelId);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate2(\" \", ctx.comparisonDateAccessibleName, \" \", ctx.startDateAccessibleName, \"\\n\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"id\", ctx._comparisonEndDateLabelId);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate2(\" \", ctx.comparisonDateAccessibleName, \" \", ctx.endDateAccessibleName, \"\\n\");\n      }\n    },\n    dependencies: [NgClass],\n    styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-sys-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-sys-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-sys-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-sys-body-medium-size));-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-sys-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mat-calendar-body-disabled{opacity:.5}}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-sys-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color, transparent)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}@media(forced-colors: active){.mat-calendar-body-cell-content{border:none}}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-sys-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-sys-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-sys-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-sys-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-sys-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-sys-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-sys-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-sys-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-sys-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-sys-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-sys-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-sys-secondary))}@media(forced-colors: active){.mat-datepicker-popup:not(:empty),.mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-selected{background:none}.mat-calendar-body-in-range::before,.mat-calendar-body-comparison-bridge-start::before,.mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCalendarBody, [{\n    type: Component,\n    args: [{\n      selector: '[mat-calendar-body]',\n      host: {\n        'class': 'mat-calendar-body'\n      },\n      exportAs: 'matCalendarBody',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [NgClass],\n      template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n@if (_firstRowOffset < labelMinRequiredCells) {\\n  <tr aria-hidden=\\\"true\\\">\\n    <td class=\\\"mat-calendar-body-label\\\"\\n        [attr.colspan]=\\\"numCols\\\"\\n        [style.paddingTop]=\\\"_cellPadding\\\"\\n        [style.paddingBottom]=\\\"_cellPadding\\\">\\n      {{label}}\\n    </td>\\n  </tr>\\n}\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n@for (row of rows; track _trackRow(row); let rowIndex = $index) {\\n  <tr role=\\\"row\\\">\\n    <!--\\n      This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n      because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n      table cells is maintained by setting the top and bottom padding as a percentage of the width\\n      (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n    -->\\n    @if (rowIndex === 0 && _firstRowOffset) {\\n      <td\\n        class=\\\"mat-calendar-body-label\\\"\\n        [attr.colspan]=\\\"_firstRowOffset\\\"\\n        [style.paddingTop]=\\\"_cellPadding\\\"\\n        [style.paddingBottom]=\\\"_cellPadding\\\">\\n        {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n      </td>\\n    }\\n    <!--\\n      Each gridcell in the calendar contains a button, which signals to assistive technology that the\\n      cell is interactable, as well as the selection state via `aria-pressed`. See #23476 for\\n      background.\\n    -->\\n    @for (item of row; track item.id; let colIndex = $index) {\\n      <td\\n        role=\\\"gridcell\\\"\\n        class=\\\"mat-calendar-body-cell-container\\\"\\n        [style.width]=\\\"_cellWidth\\\"\\n        [style.paddingTop]=\\\"_cellPadding\\\"\\n        [style.paddingBottom]=\\\"_cellPadding\\\"\\n        [attr.data-mat-row]=\\\"rowIndex\\\"\\n        [attr.data-mat-col]=\\\"colIndex\\\"\\n      >\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"mat-calendar-body-cell\\\"\\n            [ngClass]=\\\"item.cssClasses\\\"\\n            [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n            [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n            [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n            [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n            [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n            [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n            [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n            [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n            [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n            [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n            [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n            [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n            [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n            [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n            [attr.aria-label]=\\\"item.ariaLabel\\\"\\n            [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n            [attr.aria-pressed]=\\\"_isSelected(item.compareValue)\\\"\\n            [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n            [attr.aria-describedby]=\\\"_getDescribedby(item.compareValue)\\\"\\n            (click)=\\\"_cellClicked(item, $event)\\\"\\n            (focus)=\\\"_emitActiveDateChange(item, $event)\\\">\\n            <span class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n              [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n              [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n              [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n              {{item.displayValue}}\\n            </span>\\n            <span class=\\\"mat-calendar-body-cell-preview\\\" aria-hidden=\\\"true\\\"></span>\\n        </button>\\n      </td>\\n    }\\n  </tr>\\n}\\n\\n<span [id]=\\\"_startDateLabelId\\\" class=\\\"mat-calendar-body-hidden-label\\\">\\n  {{startDateAccessibleName}}\\n</span>\\n<span [id]=\\\"_endDateLabelId\\\" class=\\\"mat-calendar-body-hidden-label\\\">\\n  {{endDateAccessibleName}}\\n</span>\\n<span [id]=\\\"_comparisonStartDateLabelId\\\" class=\\\"mat-calendar-body-hidden-label\\\">\\n  {{comparisonDateAccessibleName}} {{startDateAccessibleName}}\\n</span>\\n<span [id]=\\\"_comparisonEndDateLabelId\\\" class=\\\"mat-calendar-body-hidden-label\\\">\\n  {{comparisonDateAccessibleName}} {{endDateAccessibleName}}\\n</span>\\n\",\n      styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-sys-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-sys-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-sys-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-sys-body-medium-size));-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-sys-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mat-calendar-body-disabled{opacity:.5}}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-sys-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color, transparent)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}@media(forced-colors: active){.mat-calendar-body-cell-content{border:none}}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-sys-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-sys-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-sys-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-sys-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-sys-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-sys-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-sys-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-sys-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-sys-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-sys-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-sys-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-sys-secondary))}@media(forced-colors: active){.mat-datepicker-popup:not(:empty),.mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-selected{background:none}.mat-calendar-body-in-range::before,.mat-calendar-body-comparison-bridge-start::before,.mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}}\\n\"]\n    }]\n  }], () => [], {\n    label: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    todayValue: [{\n      type: Input\n    }],\n    startValue: [{\n      type: Input\n    }],\n    endValue: [{\n      type: Input\n    }],\n    labelMinRequiredCells: [{\n      type: Input\n    }],\n    numCols: [{\n      type: Input\n    }],\n    activeCell: [{\n      type: Input\n    }],\n    isRange: [{\n      type: Input\n    }],\n    cellAspectRatio: [{\n      type: Input\n    }],\n    comparisonStart: [{\n      type: Input\n    }],\n    comparisonEnd: [{\n      type: Input\n    }],\n    previewStart: [{\n      type: Input\n    }],\n    previewEnd: [{\n      type: Input\n    }],\n    startDateAccessibleName: [{\n      type: Input\n    }],\n    endDateAccessibleName: [{\n      type: Input\n    }],\n    selectedValueChange: [{\n      type: Output\n    }],\n    previewChange: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    dragStarted: [{\n      type: Output\n    }],\n    dragEnded: [{\n      type: Output\n    }]\n  });\n})();\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n  return node?.nodeName === 'TD';\n}\n/**\n * Gets the date table cell element that is or contains the specified element.\n * Or returns null if element is not part of a date cell.\n */\nfunction getCellElement(element) {\n  let cell;\n  if (isTableCell(element)) {\n    cell = element;\n  } else if (isTableCell(element.parentNode)) {\n    cell = element.parentNode;\n  } else if (isTableCell(element.parentNode?.parentNode)) {\n    cell = element.parentNode.parentNode;\n  }\n  return cell?.getAttribute('data-mat-row') != null ? cell : null;\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n  return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n  return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n  return rangeEnabled && start !== null && end !== null && start !== end && value >= start && value <= end;\n}\n/**\n * Extracts the element that actually corresponds to a touch event's location\n * (rather than the element that initiated the sequence of touch events).\n */\nfunction getActualTouchTarget(event) {\n  const touchLocation = event.changedTouches[0];\n  return document.elementFromPoint(touchLocation.clientX, touchLocation.clientY);\n}\n\n/** A class representing a range of dates. */\nclass DateRange {\n  start;\n  end;\n  /**\n   * Ensures that objects with a `start` and `end` property can't be assigned to a variable that\n   * expects a `DateRange`\n   */\n  // tslint:disable-next-line:no-unused-variable\n  _disableStructuralEquivalency;\n  constructor(/** The start date of the range. */\n  start, /** The end date of the range. */\n  end) {\n    this.start = start;\n    this.end = end;\n  }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n  selection;\n  _adapter;\n  _selectionChanged = new Subject();\n  /** Emits when the selection has changed. */\n  selectionChanged = this._selectionChanged;\n  constructor(/** The current selection. */\n  selection, _adapter) {\n    this.selection = selection;\n    this._adapter = _adapter;\n    this.selection = selection;\n  }\n  /**\n   * Updates the current selection in the model.\n   * @param value New selection that should be assigned.\n   * @param source Object that triggered the selection change.\n   */\n  updateSelection(value, source) {\n    const oldValue = this.selection;\n    this.selection = value;\n    this._selectionChanged.next({\n      selection: value,\n      source,\n      oldValue\n    });\n  }\n  ngOnDestroy() {\n    this._selectionChanged.complete();\n  }\n  _isValidDateInstance(date) {\n    return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n  }\n  static ɵfac = function MatDateSelectionModel_Factory(__ngFactoryType__) {\n    i0.ɵɵinvalidFactory();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatDateSelectionModel,\n    factory: MatDateSelectionModel.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDateSelectionModel, [{\n    type: Injectable\n  }], () => [{\n    type: undefined\n  }, {\n    type: DateAdapter\n  }], null);\n})();\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n  constructor(adapter) {\n    super(null, adapter);\n  }\n  /**\n   * Adds a date to the current selection. In the case of a single date selection, the added date\n   * simply overwrites the previous selection\n   */\n  add(date) {\n    super.updateSelection(date, this);\n  }\n  /** Checks whether the current selection is valid. */\n  isValid() {\n    return this.selection != null && this._isValidDateInstance(this.selection);\n  }\n  /**\n   * Checks whether the current selection is complete. In the case of a single date selection, this\n   * is true if the current selection is not null.\n   */\n  isComplete() {\n    return this.selection != null;\n  }\n  /** Clones the selection model. */\n  clone() {\n    const clone = new MatSingleDateSelectionModel(this._adapter);\n    clone.updateSelection(this.selection, this);\n    return clone;\n  }\n  static ɵfac = function MatSingleDateSelectionModel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSingleDateSelectionModel)(i0.ɵɵinject(DateAdapter));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatSingleDateSelectionModel,\n    factory: MatSingleDateSelectionModel.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSingleDateSelectionModel, [{\n    type: Injectable\n  }], () => [{\n    type: DateAdapter\n  }], null);\n})();\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n  constructor(adapter) {\n    super(new DateRange(null, null), adapter);\n  }\n  /**\n   * Adds a date to the current selection. In the case of a date range selection, the added date\n   * fills in the next `null` value in the range. If both the start and the end already have a date,\n   * the selection is reset so that the given date is the new `start` and the `end` is null.\n   */\n  add(date) {\n    let {\n      start,\n      end\n    } = this.selection;\n    if (start == null) {\n      start = date;\n    } else if (end == null) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n    super.updateSelection(new DateRange(start, end), this);\n  }\n  /** Checks whether the current selection is valid. */\n  isValid() {\n    const {\n      start,\n      end\n    } = this.selection;\n    // Empty ranges are valid.\n    if (start == null && end == null) {\n      return true;\n    }\n    // Complete ranges are only valid if both dates are valid and the start is before the end.\n    if (start != null && end != null) {\n      return this._isValidDateInstance(start) && this._isValidDateInstance(end) && this._adapter.compareDate(start, end) <= 0;\n    }\n    // Partial ranges are valid if the start/end is valid.\n    return (start == null || this._isValidDateInstance(start)) && (end == null || this._isValidDateInstance(end));\n  }\n  /**\n   * Checks whether the current selection is complete. In the case of a date range selection, this\n   * is true if the current selection has a non-null `start` and `end`.\n   */\n  isComplete() {\n    return this.selection.start != null && this.selection.end != null;\n  }\n  /** Clones the selection model. */\n  clone() {\n    const clone = new MatRangeDateSelectionModel(this._adapter);\n    clone.updateSelection(this.selection, this);\n    return clone;\n  }\n  static ɵfac = function MatRangeDateSelectionModel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatRangeDateSelectionModel)(i0.ɵɵinject(DateAdapter));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatRangeDateSelectionModel,\n    factory: MatRangeDateSelectionModel.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRangeDateSelectionModel, [{\n    type: Injectable\n  }], () => [{\n    type: DateAdapter\n  }], null);\n})();\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n  return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY\n};\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n  return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY\n};\n\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n  _dateAdapter;\n  constructor(_dateAdapter) {\n    this._dateAdapter = _dateAdapter;\n  }\n  selectionFinished(date, currentRange) {\n    let {\n      start,\n      end\n    } = currentRange;\n    if (start == null) {\n      start = date;\n    } else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n    return new DateRange(start, end);\n  }\n  createPreview(activeDate, currentRange) {\n    let start = null;\n    let end = null;\n    if (currentRange.start && !currentRange.end && activeDate) {\n      start = currentRange.start;\n      end = activeDate;\n    }\n    return new DateRange(start, end);\n  }\n  createDrag(dragOrigin, originalRange, newDate) {\n    let start = originalRange.start;\n    let end = originalRange.end;\n    if (!start || !end) {\n      // Can't drag from an incomplete range.\n      return null;\n    }\n    const adapter = this._dateAdapter;\n    const isRange = adapter.compareDate(start, end) !== 0;\n    const diffYears = adapter.getYear(newDate) - adapter.getYear(dragOrigin);\n    const diffMonths = adapter.getMonth(newDate) - adapter.getMonth(dragOrigin);\n    const diffDays = adapter.getDate(newDate) - adapter.getDate(dragOrigin);\n    if (isRange && adapter.sameDate(dragOrigin, originalRange.start)) {\n      start = newDate;\n      if (adapter.compareDate(newDate, end) > 0) {\n        end = adapter.addCalendarYears(end, diffYears);\n        end = adapter.addCalendarMonths(end, diffMonths);\n        end = adapter.addCalendarDays(end, diffDays);\n      }\n    } else if (isRange && adapter.sameDate(dragOrigin, originalRange.end)) {\n      end = newDate;\n      if (adapter.compareDate(newDate, start) < 0) {\n        start = adapter.addCalendarYears(start, diffYears);\n        start = adapter.addCalendarMonths(start, diffMonths);\n        start = adapter.addCalendarDays(start, diffDays);\n      }\n    } else {\n      start = adapter.addCalendarYears(start, diffYears);\n      start = adapter.addCalendarMonths(start, diffMonths);\n      start = adapter.addCalendarDays(start, diffDays);\n      end = adapter.addCalendarYears(end, diffYears);\n      end = adapter.addCalendarMonths(end, diffMonths);\n      end = adapter.addCalendarDays(end, diffDays);\n    }\n    return new DateRange(start, end);\n  }\n  static ɵfac = function DefaultMatCalendarRangeStrategy_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DefaultMatCalendarRangeStrategy)(i0.ɵɵinject(DateAdapter));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DefaultMatCalendarRangeStrategy,\n    factory: DefaultMatCalendarRangeStrategy.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultMatCalendarRangeStrategy, [{\n    type: Injectable\n  }], () => [{\n    type: DateAdapter\n  }], null);\n})();\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n  return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n  provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n  deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n  useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY\n};\nconst DAYS_PER_WEEK = 7;\nlet uniqueIdCounter = 0;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _dateFormats = inject(MAT_DATE_FORMATS, {\n    optional: true\n  });\n  _dateAdapter = inject(DateAdapter, {\n    optional: true\n  });\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _rangeStrategy = inject(MAT_DATE_RANGE_SELECTION_STRATEGY, {\n    optional: true\n  });\n  _rerenderSubscription = Subscription.EMPTY;\n  /** Flag used to filter out space/enter keyup events that originated outside of the view. */\n  _selectionKeyPressed;\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  get activeDate() {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    const oldActiveDate = this._activeDate;\n    const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  _activeDate;\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    this._setRanges(this._selected);\n  }\n  _selected;\n  /** The minimum selectable date. */\n  get minDate() {\n    return this._minDate;\n  }\n  set minDate(value) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _minDate;\n  /** The maximum selectable date. */\n  get maxDate() {\n    return this._maxDate;\n  }\n  set maxDate(value) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _maxDate;\n  /** Function used to filter which dates are selectable. */\n  dateFilter;\n  /** Function that can be used to add custom CSS classes to dates. */\n  dateClass;\n  /** Start of the comparison range. */\n  comparisonStart;\n  /** End of the comparison range. */\n  comparisonEnd;\n  /** ARIA Accessible name of the `<input matStartDate/>` */\n  startDateAccessibleName;\n  /** ARIA Accessible name of the `<input matEndDate/>` */\n  endDateAccessibleName;\n  /** Origin of active drag, or null when dragging is not active. */\n  activeDrag = null;\n  /** Emits when a new date is selected. */\n  selectedChange = new EventEmitter();\n  /** Emits when any date is selected. */\n  _userSelection = new EventEmitter();\n  /** Emits when the user initiates a date range drag via mouse or touch. */\n  dragStarted = new EventEmitter();\n  /**\n   * Emits when the user completes or cancels a date range drag.\n   * Emits null when the drag was canceled or the newly selected date range if completed.\n   */\n  dragEnded = new EventEmitter();\n  /** Emits when any date is activated. */\n  activeDateChange = new EventEmitter();\n  /** The body of calendar table */\n  _matCalendarBody;\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel;\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks;\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset;\n  /** Start value of the currently-shown date range. */\n  _rangeStart;\n  /** End value of the currently-shown date range. */\n  _rangeEnd;\n  /** Start value of the currently-shown comparison date range. */\n  _comparisonRangeStart;\n  /** End value of the currently-shown comparison date range. */\n  _comparisonRangeEnd;\n  /** Start of the preview range. */\n  _previewStart;\n  /** End of the preview range. */\n  _previewEnd;\n  /** Whether the user is currently selecting a range of dates. */\n  _isRange;\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate;\n  /** The names of the weekdays. */\n  _weekdays;\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n    this._activeDate = this._dateAdapter.today();\n  }\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(() => this._init());\n  }\n  ngOnChanges(changes) {\n    const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n    if (comparisonChange && !comparisonChange.firstChange) {\n      this._setRanges(this.selected);\n    }\n    if (changes['activeDrag'] && !this.activeDrag) {\n      this._clearPreview();\n    }\n  }\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n  /** Handles when a new date is selected. */\n  _dateSelected(event) {\n    const date = event.value;\n    const selectedDate = this._getDateFromDayOfMonth(date);\n    let rangeStartDate;\n    let rangeEndDate;\n    if (this._selected instanceof DateRange) {\n      rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n      rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n    } else {\n      rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n    }\n    if (rangeStartDate !== date || rangeEndDate !== date) {\n      this.selectedChange.emit(selectedDate);\n    }\n    this._userSelection.emit({\n      value: selectedDate,\n      event: event.event\n    });\n    this._clearPreview();\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n   * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n   * that date.\n   *\n   * This function is used to match each component's model of the active date with the calendar\n   * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n   * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n   * updated value asynchronously via the `activeCell` Input.\n   */\n  _updateActiveDate(event) {\n    const month = event.value;\n    const oldActiveDate = this._activeDate;\n    this.activeDate = this._getDateFromDayOfMonth(month);\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this._activeDate);\n    }\n  }\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event) {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, -1) : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, 1) : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._selectionKeyPressed = true;\n        if (this._canSelect(this._activeDate)) {\n          // Prevent unexpected default actions such as form submission.\n          // Note that we only prevent the default action here while the selection happens in\n          // `keyup` below. We can't do the selection here, because it can cause the calendar to\n          // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n          // because it's too late (see #23305).\n          event.preventDefault();\n        }\n        return;\n      case ESCAPE:\n        // Abort the current range selection if the user presses escape mid-selection.\n        if (this._previewEnd != null && !hasModifierKey(event)) {\n          this._clearPreview();\n          // If a drag is in progress, cancel the drag without changing the\n          // current selection.\n          if (this.activeDrag) {\n            this.dragEnded.emit({\n              value: null,\n              event\n            });\n          } else {\n            this.selectedChange.emit(null);\n            this._userSelection.emit({\n              value: null,\n              event\n            });\n          }\n          event.preventDefault();\n          event.stopPropagation(); // Prevents the overlay from closing.\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n      this._focusActiveCellAfterViewChecked();\n    }\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n  /** Handles keyup events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeyup(event) {\n    if (event.keyCode === SPACE || event.keyCode === ENTER) {\n      if (this._selectionKeyPressed && this._canSelect(this._activeDate)) {\n        this._dateSelected({\n          value: this._dateAdapter.getDate(this._activeDate),\n          event\n        });\n      }\n      this._selectionKeyPressed = false;\n    }\n  }\n  /** Initializes this month view. */\n  _init() {\n    this._setRanges(this.selected);\n    this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n    this._monthLabel = this._dateFormats.display.monthLabel ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel) : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset = (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n    this._initWeekdays();\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell(movePreview) {\n    this._matCalendarBody._focusActiveCell(movePreview);\n  }\n  /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n  _focusActiveCellAfterViewChecked() {\n    this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n  }\n  /** Called when the user has activated a new cell and the preview needs to be updated. */\n  _previewChanged({\n    event,\n    value: cell\n  }) {\n    if (this._rangeStrategy) {\n      // We can assume that this will be a range, because preview\n      // events aren't fired for single date selections.\n      const value = cell ? cell.rawValue : null;\n      const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n      this._previewStart = this._getCellCompareValue(previewRange.start);\n      this._previewEnd = this._getCellCompareValue(previewRange.end);\n      if (this.activeDrag && value) {\n        const dragRange = this._rangeStrategy.createDrag?.(this.activeDrag.value, this.selected, value, event);\n        if (dragRange) {\n          this._previewStart = this._getCellCompareValue(dragRange.start);\n          this._previewEnd = this._getCellCompareValue(dragRange.end);\n        }\n      }\n      // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n      // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n      // when navigating one month back using the keyboard which will cause this handler\n      // to throw a \"changed after checked\" error when updating the preview state.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  /**\n   * Called when the user has ended a drag. If the drag/drop was successful,\n   * computes and emits the new range selection.\n   */\n  _dragEnded(event) {\n    if (!this.activeDrag) return;\n    if (event.value) {\n      // Propagate drag effect\n      const dragDropResult = this._rangeStrategy?.createDrag?.(this.activeDrag.value, this.selected, event.value, event.event);\n      this.dragEnded.emit({\n        value: dragDropResult ?? null,\n        event: event.event\n      });\n    } else {\n      this.dragEnded.emit({\n        value: null,\n        event: event.event\n      });\n    }\n  }\n  /**\n   * Takes a day of the month and returns a new date in the same month and year as the currently\n   *  active date. The returned date will have the same day of the month as the argument date.\n   */\n  _getDateFromDayOfMonth(dayOfMonth) {\n    return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), dayOfMonth);\n  }\n  /** Initializes the weekdays. */\n  _initWeekdays() {\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n      return {\n        long,\n        narrow: narrowWeekdays[i],\n        id: uniqueIdCounter++\n      };\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n  }\n  /** Creates MatCalendarCells for the dates in this month. */\n  _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n      this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n    }\n  }\n  /** Date filter for the month */\n  _shouldEnableDate(date) {\n    return !!date && (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) && (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) && (!this.dateFilter || this.dateFilter(date));\n  }\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  _getDateInCurrentMonth(date) {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;\n  }\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  _hasSameMonthAndYear(d1, d2) {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) && this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n  /** Gets the value that will be used to one cell to another. */\n  _getCellCompareValue(date) {\n    if (date) {\n      // We use the time since the Unix epoch to compare dates in this view, rather than the\n      // cell values, because we need to support ranges that span across multiple months/years.\n      const year = this._dateAdapter.getYear(date);\n      const month = this._dateAdapter.getMonth(date);\n      const day = this._dateAdapter.getDate(date);\n      return new Date(year, month, day).getTime();\n    }\n    return null;\n  }\n  /** Determines whether the user has the RTL layout direction. */\n  _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n  /** Sets the current range based on a model value. */\n  _setRanges(selectedValue) {\n    if (selectedValue instanceof DateRange) {\n      this._rangeStart = this._getCellCompareValue(selectedValue.start);\n      this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n      this._isRange = true;\n    } else {\n      this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n      this._isRange = false;\n    }\n    this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n    this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n  }\n  /** Gets whether a date can be selected in the month view. */\n  _canSelect(date) {\n    return !this.dateFilter || this.dateFilter(date);\n  }\n  /** Clears out preview state. */\n  _clearPreview() {\n    this._previewStart = this._previewEnd = null;\n  }\n  static ɵfac = function MatMonthView_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatMonthView)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatMonthView,\n    selectors: [[\"mat-month-view\"]],\n    viewQuery: function MatMonthView_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatCalendarBody, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n      }\n    },\n    inputs: {\n      activeDate: \"activeDate\",\n      selected: \"selected\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\",\n      dateFilter: \"dateFilter\",\n      dateClass: \"dateClass\",\n      comparisonStart: \"comparisonStart\",\n      comparisonEnd: \"comparisonEnd\",\n      startDateAccessibleName: \"startDateAccessibleName\",\n      endDateAccessibleName: \"endDateAccessibleName\",\n      activeDrag: \"activeDrag\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\",\n      _userSelection: \"_userSelection\",\n      dragStarted: \"dragStarted\",\n      dragEnded: \"dragEnded\",\n      activeDateChange: \"activeDateChange\"\n    },\n    exportAs: [\"matMonthView\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 8,\n    vars: 14,\n    consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\"], [\"aria-hidden\", \"true\"], [\"colspan\", \"7\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"selectedValueChange\", \"activeDateChange\", \"previewChange\", \"dragStarted\", \"dragEnded\", \"keyup\", \"keydown\", \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"startDateAccessibleName\", \"endDateAccessibleName\"], [1, \"cdk-visually-hidden\"]],\n    template: function MatMonthView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        i0.ɵɵrepeaterCreate(3, MatMonthView_For_4_Template, 5, 2, \"th\", 2, _forTrack1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"tr\", 3);\n        i0.ɵɵelement(6, \"th\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"tbody\", 5);\n        i0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_7_listener($event) {\n          return ctx._dateSelected($event);\n        })(\"activeDateChange\", function MatMonthView_Template_tbody_activeDateChange_7_listener($event) {\n          return ctx._updateActiveDate($event);\n        })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_7_listener($event) {\n          return ctx._previewChanged($event);\n        })(\"dragStarted\", function MatMonthView_Template_tbody_dragStarted_7_listener($event) {\n          return ctx.dragStarted.emit($event);\n        })(\"dragEnded\", function MatMonthView_Template_tbody_dragEnded_7_listener($event) {\n          return ctx._dragEnded($event);\n        })(\"keyup\", function MatMonthView_Template_tbody_keyup_7_listener($event) {\n          return ctx._handleCalendarBodyKeyup($event);\n        })(\"keydown\", function MatMonthView_Template_tbody_keydown_7_listener($event) {\n          return ctx._handleCalendarBodyKeydown($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵrepeater(ctx._weekdays);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1)(\"startDateAccessibleName\", ctx.startDateAccessibleName)(\"endDateAccessibleName\", ctx.endDateAccessibleName);\n      }\n    },\n    dependencies: [MatCalendarBody],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMonthView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-month-view',\n      exportAs: 'matMonthView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatCalendarBody],\n      template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      @for (day of _weekdays; track day.id) {\\n        <th scope=\\\"col\\\">\\n          <span class=\\\"cdk-visually-hidden\\\">{{day.long}}</span>\\n          <span aria-hidden=\\\"true\\\">{{day.narrow}}</span>\\n        </th>\\n      }\\n    </tr>\\n    <tr aria-hidden=\\\"true\\\"><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         [startDateAccessibleName]=\\\"startDateAccessibleName\\\"\\n         [endDateAccessibleName]=\\\"endDateAccessibleName\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (dragStarted)=\\\"dragStarted.emit($event)\\\"\\n         (dragEnded)=\\\"_dragEnded($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\"\n    }]\n  }], () => [], {\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    comparisonStart: [{\n      type: Input\n    }],\n    comparisonEnd: [{\n      type: Input\n    }],\n    startDateAccessibleName: [{\n      type: Input\n    }],\n    endDateAccessibleName: [{\n      type: Input\n    }],\n    activeDrag: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    dragStarted: [{\n      type: Output\n    }],\n    dragEnded: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _dateAdapter = inject(DateAdapter, {\n    optional: true\n  });\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _rerenderSubscription = Subscription.EMPTY;\n  /** Flag used to filter out space/enter keyup events that originated outside of the view. */\n  _selectionKeyPressed;\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  get activeDate() {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    let oldActiveDate = this._activeDate;\n    const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n      this._init();\n    }\n  }\n  _activeDate;\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    this._setSelectedYear(value);\n  }\n  _selected;\n  /** The minimum selectable date. */\n  get minDate() {\n    return this._minDate;\n  }\n  set minDate(value) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _minDate;\n  /** The maximum selectable date. */\n  get maxDate() {\n    return this._maxDate;\n  }\n  set maxDate(value) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _maxDate;\n  /** A function used to filter which dates are selectable. */\n  dateFilter;\n  /** Function that can be used to add custom CSS classes to date cells. */\n  dateClass;\n  /** Emits when a new year is selected. */\n  selectedChange = new EventEmitter();\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  yearSelected = new EventEmitter();\n  /** Emits when any date is activated. */\n  activeDateChange = new EventEmitter();\n  /** The body of calendar table */\n  _matCalendarBody;\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years;\n  /** The year that today falls on. */\n  _todayYear;\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear;\n  constructor() {\n    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    this._activeDate = this._dateAdapter.today();\n  }\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(() => this._init());\n  }\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n    // We want a range years such that we maximize the number of\n    // enabled dates visible at once. This prevents issues where the minimum year\n    // is the last item of a page OR the maximum year is the first item of a page.\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view.\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    this._years = [];\n    for (let i = 0, row = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Handles when a new year is selected. */\n  _yearSelected(event) {\n    const year = event.value;\n    const selectedYear = this._dateAdapter.createDate(year, 0, 1);\n    const selectedDate = this._getDateFromYear(year);\n    this.yearSelected.emit(selectedYear);\n    this.selectedChange.emit(selectedDate);\n  }\n  /**\n   * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n   * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n   * that date.\n   *\n   * This function is used to match each component's model of the active date with the calendar\n   * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n   * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n   * updated value asynchronously via the `activeCell` Input.\n   */\n  _updateActiveDate(event) {\n    const year = event.value;\n    const oldActiveDate = this._activeDate;\n    this.activeDate = this._getDateFromYear(year);\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n  }\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event) {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        // Note that we only prevent the default action here while the selection happens in\n        // `keyup` below. We can't do the selection here, because it can cause the calendar to\n        // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n        // because it's too late (see #23305).\n        this._selectionKeyPressed = true;\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n    this._focusActiveCellAfterViewChecked();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n  /** Handles keyup events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeyup(event) {\n    if (event.keyCode === SPACE || event.keyCode === ENTER) {\n      if (this._selectionKeyPressed) {\n        this._yearSelected({\n          value: this._dateAdapter.getYear(this._activeDate),\n          event\n        });\n      }\n      this._selectionKeyPressed = false;\n    }\n  }\n  _getActiveCell() {\n    return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n  }\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n  /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n  _focusActiveCellAfterViewChecked() {\n    this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n  }\n  /**\n   * Takes a year and returns a new date on the same day and month as the currently active date\n   *  The returned date will have the same year as the argument date.\n   */\n  _getDateFromYear(year) {\n    const activeMonth = this._dateAdapter.getMonth(this.activeDate);\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, activeMonth, 1));\n    const normalizedDate = this._dateAdapter.createDate(year, activeMonth, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n    return normalizedDate;\n  }\n  /** Creates an MatCalendarCell for the given year. */\n  _createCellForYear(year) {\n    const date = this._dateAdapter.createDate(year, 0, 1);\n    const yearName = this._dateAdapter.getYearName(date);\n    const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n  }\n  /** Whether the given year is enabled. */\n  _shouldEnableYear(year) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null || this.maxDate && year > this._dateAdapter.getYear(this.maxDate) || this.minDate && year < this._dateAdapter.getYear(this.minDate)) {\n      return false;\n    }\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** Determines whether the user has the RTL layout direction. */\n  _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n  /** Sets the currently-highlighted year based on a model value. */\n  _setSelectedYear(value) {\n    this._selectedYear = null;\n    if (value instanceof DateRange) {\n      const displayValue = value.start || value.end;\n      if (displayValue) {\n        this._selectedYear = this._dateAdapter.getYear(displayValue);\n      }\n    } else if (value) {\n      this._selectedYear = this._dateAdapter.getYear(value);\n    }\n  }\n  static ɵfac = function MatMultiYearView_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatMultiYearView)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatMultiYearView,\n    selectors: [[\"mat-multi-year-view\"]],\n    viewQuery: function MatMultiYearView_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatCalendarBody, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n      }\n    },\n    inputs: {\n      activeDate: \"activeDate\",\n      selected: \"selected\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\",\n      dateFilter: \"dateFilter\",\n      dateClass: \"dateClass\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\",\n      yearSelected: \"yearSelected\",\n      activeDateChange: \"activeDateChange\"\n    },\n    exportAs: [\"matMultiYearView\"],\n    decls: 5,\n    vars: 7,\n    consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"selectedValueChange\", \"activeDateChange\", \"keyup\", \"keydown\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\"]],\n    template: function MatMultiYearView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        i0.ɵɵelement(3, \"th\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"tbody\", 3);\n        i0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) {\n          return ctx._yearSelected($event);\n        })(\"activeDateChange\", function MatMultiYearView_Template_tbody_activeDateChange_4_listener($event) {\n          return ctx._updateActiveDate($event);\n        })(\"keyup\", function MatMultiYearView_Template_tbody_keyup_4_listener($event) {\n          return ctx._handleCalendarBodyKeyup($event);\n        })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) {\n          return ctx._handleCalendarBodyKeydown($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n      }\n    },\n    dependencies: [MatCalendarBody],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMultiYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-multi-year-view',\n      exportAs: 'matMultiYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatCalendarBody],\n      template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\"\n    }]\n  }], () => [], {\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) === Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n  return (a % b + b) % b;\n}\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _dateFormats = inject(MAT_DATE_FORMATS, {\n    optional: true\n  });\n  _dateAdapter = inject(DateAdapter, {\n    optional: true\n  });\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _rerenderSubscription = Subscription.EMPTY;\n  /** Flag used to filter out space/enter keyup events that originated outside of the view. */\n  _selectionKeyPressed;\n  /** The date to display in this year view (everything other than the year is ignored). */\n  get activeDate() {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    let oldActiveDate = this._activeDate;\n    const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  _activeDate;\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    this._setSelectedMonth(value);\n  }\n  _selected;\n  /** The minimum selectable date. */\n  get minDate() {\n    return this._minDate;\n  }\n  set minDate(value) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _minDate;\n  /** The maximum selectable date. */\n  get maxDate() {\n    return this._maxDate;\n  }\n  set maxDate(value) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _maxDate;\n  /** A function used to filter which dates are selectable. */\n  dateFilter;\n  /** Function that can be used to add custom CSS classes to date cells. */\n  dateClass;\n  /** Emits when a new month is selected. */\n  selectedChange = new EventEmitter();\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  monthSelected = new EventEmitter();\n  /** Emits when any date is activated. */\n  activeDateChange = new EventEmitter();\n  /** The body of calendar table */\n  _matCalendarBody;\n  /** Grid of calendar cells representing the months of the year. */\n  _months;\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel;\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth;\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth;\n  constructor() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n    this._activeDate = this._dateAdapter.today();\n  }\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(() => this._init());\n  }\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n  /** Handles when a new month is selected. */\n  _monthSelected(event) {\n    const month = event.value;\n    const selectedMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n    this.monthSelected.emit(selectedMonth);\n    const selectedDate = this._getDateFromMonth(month);\n    this.selectedChange.emit(selectedDate);\n  }\n  /**\n   * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n   * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n   * that date.\n   *\n   * This function is used to match each component's model of the active date with the calendar\n   * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n   * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n   * updated value asynchronously via the `activeCell` Input.\n   */\n  _updateActiveDate(event) {\n    const month = event.value;\n    const oldActiveDate = this._activeDate;\n    this.activeDate = this._getDateFromMonth(month);\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n  }\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event) {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        // Note that we only prevent the default action here while the selection happens in\n        // `keyup` below. We can't do the selection here, because it can cause the calendar to\n        // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n        // because it's too late (see #23305).\n        this._selectionKeyPressed = true;\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n      this._focusActiveCellAfterViewChecked();\n    }\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n  /** Handles keyup events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeyup(event) {\n    if (event.keyCode === SPACE || event.keyCode === ENTER) {\n      if (this._selectionKeyPressed) {\n        this._monthSelected({\n          value: this._dateAdapter.getMonth(this._activeDate),\n          event\n        });\n      }\n      this._selectionKeyPressed = false;\n    }\n  }\n  /** Initializes this year view. */\n  _init() {\n    this._setSelectedMonth(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n  /** Schedules the matCalendarBody to focus the active cell after change detection has run */\n  _focusActiveCellAfterViewChecked() {\n    this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n  }\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  _getMonthInCurrentYear(date) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ? this._dateAdapter.getMonth(date) : null;\n  }\n  /**\n   * Takes a month and returns a new date in the same day and year as the currently active date.\n   *  The returned date will have the same month as the argument date.\n   */\n  _getDateFromMonth(month) {\n    const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n    return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n  }\n  /** Creates an MatCalendarCell for the given month. */\n  _createCellForMonth(month, monthName) {\n    const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n    const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n    const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n    return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n  }\n  /** Whether the given month is enabled. */\n  _shouldEnableMonth(month) {\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n    if (month === undefined || month === null || this._isYearAndMonthAfterMaxDate(activeYear, month) || this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n    if (!this.dateFilter) {\n      return true;\n    }\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  _isYearAndMonthAfterMaxDate(year, month) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n      return year > maxYear || year === maxYear && month > maxMonth;\n    }\n    return false;\n  }\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  _isYearAndMonthBeforeMinDate(year, month) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n      return year < minYear || year === minYear && month < minMonth;\n    }\n    return false;\n  }\n  /** Determines whether the user has the RTL layout direction. */\n  _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n  /** Sets the currently-selected month based on a model value. */\n  _setSelectedMonth(value) {\n    if (value instanceof DateRange) {\n      this._selectedMonth = this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);\n    } else {\n      this._selectedMonth = this._getMonthInCurrentYear(value);\n    }\n  }\n  static ɵfac = function MatYearView_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatYearView)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatYearView,\n    selectors: [[\"mat-year-view\"]],\n    viewQuery: function MatYearView_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatCalendarBody, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n      }\n    },\n    inputs: {\n      activeDate: \"activeDate\",\n      selected: \"selected\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\",\n      dateFilter: \"dateFilter\",\n      dateClass: \"dateClass\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\",\n      monthSelected: \"monthSelected\",\n      activeDateChange: \"activeDateChange\"\n    },\n    exportAs: [\"matYearView\"],\n    decls: 5,\n    vars: 9,\n    consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"selectedValueChange\", \"activeDateChange\", \"keyup\", \"keydown\", \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\"]],\n    template: function MatYearView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        i0.ɵɵelement(3, \"th\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"tbody\", 3);\n        i0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) {\n          return ctx._monthSelected($event);\n        })(\"activeDateChange\", function MatYearView_Template_tbody_activeDateChange_4_listener($event) {\n          return ctx._updateActiveDate($event);\n        })(\"keyup\", function MatYearView_Template_tbody_keyup_4_listener($event) {\n          return ctx._handleCalendarBodyKeyup($event);\n        })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) {\n          return ctx._handleCalendarBodyKeydown($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n      }\n    },\n    dependencies: [MatCalendarBody],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-year-view',\n      exportAs: 'matYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatCalendarBody],\n      template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (activeDateChange)=\\\"_updateActiveDate($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\"\n    }]\n  }], () => [], {\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n  _intl = inject(MatDatepickerIntl);\n  calendar = inject(MatCalendar);\n  _dateAdapter = inject(DateAdapter, {\n    optional: true\n  });\n  _dateFormats = inject(MAT_DATE_FORMATS, {\n    optional: true\n  });\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n    const changeDetectorRef = inject(ChangeDetectorRef);\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n  /** The display text for the current calendar view. */\n  get periodButtonText() {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n    return this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());\n  }\n  /** The aria description for the current calendar view. */\n  get periodButtonDescription() {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n    // Format a label for the window of years displayed in the multi-year calendar view. Use\n    // `formatYearRangeLabel` because it is TTS friendly.\n    return this._intl.formatYearRangeLabel(...this._formatMinAndMaxYearLabels());\n  }\n  /** The `aria-label` for changing the calendar view. */\n  get periodButtonLabel() {\n    return this.calendar.currentView == 'month' ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n  /** The label for the previous button. */\n  get prevButtonLabel() {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n  /** The label for the next button. */\n  get nextButtonLabel() {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n  /** Handles user clicks on the period label. */\n  currentPeriodClicked() {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n  /** Handles user clicks on the previous button. */\n  previousClicked() {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n  }\n  /** Handles user clicks on the next button. */\n  nextClicked() {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n  }\n  /** Whether the previous period button is enabled. */\n  previousEnabled() {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n  /** Whether the next period button is enabled. */\n  nextEnabled() {\n    return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  _isSameView(date1, date2) {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) && this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n  }\n  /**\n   * Format two individual labels for the minimum year and maximum year available in the multi-year\n   * calendar view. Returns an array of two strings where the first string is the formatted label\n   * for the minimum year, and the second string is the formatted label for the maximum year.\n   */\n  _formatMinAndMaxYearLabels() {\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view, and the last year is\n    // just yearsPerPage - 1 away.\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n    const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n    const minYearLabel = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n    const maxYearLabel = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n    return [minYearLabel, maxYearLabel];\n  }\n  _periodButtonLabelId = inject(_IdGenerator).getId('mat-calendar-period-label-');\n  static ɵfac = function MatCalendarHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCalendarHeader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCalendarHeader,\n    selectors: [[\"mat-calendar-header\"]],\n    exportAs: [\"matCalendarHeader\"],\n    ngContentSelectors: _c1,\n    decls: 17,\n    vars: 11,\n    consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"aria-live\", \"polite\", 1, \"cdk-visually-hidden\", 3, \"id\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-period-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"viewBox\", \"0 0 10 5\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-calendar-arrow\"], [\"points\", \"0,0 5,5 10,0\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"click\", \"disabled\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", \"aria-hidden\", \"true\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"click\", \"disabled\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"]],\n    template: function MatCalendarHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_4_listener() {\n          return ctx.currentPeriodClicked();\n        });\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(7, \"svg\", 5);\n        i0.ɵɵelement(8, \"polygon\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelement(9, \"div\", 7);\n        i0.ɵɵprojection(10);\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_11_listener() {\n          return ctx.previousClicked();\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(12, \"svg\", 9);\n        i0.ɵɵelement(13, \"path\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(14, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_14_listener() {\n          return ctx.nextClicked();\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(15, \"svg\", 9);\n        i0.ɵɵelement(16, \"path\", 12);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"id\", ctx._periodButtonLabelId);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(ctx.periodButtonDescription);\n        i0.ɵɵadvance();\n        i0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel)(\"aria-describedby\", ctx._periodButtonLabelId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.periodButtonText);\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView !== \"month\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        i0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        i0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n      }\n    },\n    dependencies: [MatButton, MatIconButton],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCalendarHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar-header',\n      exportAs: 'matCalendarHeader',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatButton, MatIconButton],\n      template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <!-- [Firefox Issue: https://bugzilla.mozilla.org/show_bug.cgi?id=1880533]\\n      Relocated label next to related button and made visually hidden via cdk-visually-hidden\\n      to enable label to appear in a11y tree for SR when using Firefox -->\\n    <span [id]=\\\"_periodButtonLabelId\\\" class=\\\"cdk-visually-hidden\\\" aria-live=\\\"polite\\\">{{periodButtonDescription}}</span>\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_periodButtonLabelId\\\">\\n      <span aria-hidden=\\\"true\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n      <svg viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n       </svg>\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n      <svg viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n      </svg>\\n    </button>\\n  </div>\\n</div>\\n\"\n    }]\n  }], () => [], null);\n})();\n/** A calendar that is used as part of the datepicker. */\nclass MatCalendar {\n  _dateAdapter = inject(DateAdapter, {\n    optional: true\n  });\n  _dateFormats = inject(MAT_DATE_FORMATS, {\n    optional: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  /** An input indicating the type of the header component, if set. */\n  headerComponent;\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal;\n  _intlChanges;\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  _moveFocusOnNextTick = false;\n  /** A date representing the period (month or year) to start the calendar in. */\n  get startAt() {\n    return this._startAt;\n  }\n  set startAt(value) {\n    this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _startAt;\n  /** Whether the calendar should be started in month or year view. */\n  startView = 'month';\n  /** The currently selected date. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n  }\n  _selected;\n  /** The minimum selectable date. */\n  get minDate() {\n    return this._minDate;\n  }\n  set minDate(value) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _minDate;\n  /** The maximum selectable date. */\n  get maxDate() {\n    return this._maxDate;\n  }\n  set maxDate(value) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _maxDate;\n  /** Function used to filter which dates are selectable. */\n  dateFilter;\n  /** Function that can be used to add custom CSS classes to dates. */\n  dateClass;\n  /** Start of the comparison range. */\n  comparisonStart;\n  /** End of the comparison range. */\n  comparisonEnd;\n  /** ARIA Accessible name of the `<input matStartDate/>` */\n  startDateAccessibleName;\n  /** ARIA Accessible name of the `<input matEndDate/>` */\n  endDateAccessibleName;\n  /** Emits when the currently selected date changes. */\n  selectedChange = new EventEmitter();\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  yearSelected = new EventEmitter();\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  monthSelected = new EventEmitter();\n  /**\n   * Emits when the current view changes.\n   */\n  viewChanged = new EventEmitter(true);\n  /** Emits when any date is selected. */\n  _userSelection = new EventEmitter();\n  /** Emits a new date range value when the user completes a drag drop operation. */\n  _userDragDrop = new EventEmitter();\n  /** Reference to the current month view component. */\n  monthView;\n  /** Reference to the current year view component. */\n  yearView;\n  /** Reference to the current multi-year view component. */\n  multiYearView;\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate() {\n    return this._clampedActiveDate;\n  }\n  set activeDate(value) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  _clampedActiveDate;\n  /** Whether the calendar is in month view. */\n  get currentView() {\n    return this._currentView;\n  }\n  set currentView(value) {\n    const viewChangedResult = this._currentView !== value ? value : null;\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n    if (viewChangedResult) {\n      this.viewChanged.emit(viewChangedResult);\n    }\n  }\n  _currentView;\n  /** Origin of active drag, or null when dragging is not active. */\n  _activeDrag = null;\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject();\n  constructor() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n    this._intlChanges = inject(MatDatepickerIntl).changes.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n  ngOnChanges(changes) {\n    // Ignore date changes that are at a different time on the same day. This fixes issues where\n    // the calendar re-renders when there is no meaningful change to [minDate] or [maxDate]\n    // (#24435).\n    const minDateChange = changes['minDate'] && !this._dateAdapter.sameDate(changes['minDate'].previousValue, changes['minDate'].currentValue) ? changes['minDate'] : undefined;\n    const maxDateChange = changes['maxDate'] && !this._dateAdapter.sameDate(changes['maxDate'].previousValue, changes['maxDate'].currentValue) ? changes['maxDate'] : undefined;\n    const changeRequiringRerender = minDateChange || maxDateChange || changes['dateFilter'];\n    if (changeRequiringRerender && !changeRequiringRerender.firstChange) {\n      const view = this._getCurrentViewComponent();\n      if (view) {\n        // Schedule focus to be moved to the active date since re-rendering can blur the active\n        // cell (see #29265), however don't do so if focus is outside of the calendar, because it\n        // can steal away the user's attention (see #30635).\n        if (this._elementRef.nativeElement.contains(_getFocusedElementPierceShadowDom())) {\n          this._moveFocusOnNextTick = true;\n        }\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n    this.stateChanges.next();\n  }\n  /** Focuses the active date. */\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell(false);\n  }\n  /** Updates today's date after an update of the active date */\n  updateTodaysDate() {\n    this._getCurrentViewComponent()._init();\n  }\n  /** Handles date selection in the month view. */\n  _dateSelected(event) {\n    const date = event.value;\n    if (this.selected instanceof DateRange || date && !this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n    this._userSelection.emit(event);\n  }\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear) {\n    this.yearSelected.emit(normalizedYear);\n  }\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date, view) {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n  /** Called when the user starts dragging to change a date range. */\n  _dragStarted(event) {\n    this._activeDrag = event;\n  }\n  /**\n   * Called when a drag completes. It may end in cancelation or in the selection\n   * of a new range.\n   */\n  _dragEnded(event) {\n    if (!this._activeDrag) return;\n    if (event.value) {\n      this._userDragDrop.emit(event);\n    }\n    this._activeDrag = null;\n  }\n  /** Returns the component instance that corresponds to the current calendar view. */\n  _getCurrentViewComponent() {\n    // The return type is explicitly written as a union to ensure that the Closure compiler does\n    // not optimize calls to _init(). Without the explicit return type, TypeScript narrows it to\n    // only the first component type. See https://github.com/angular/components/issues/22996.\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n  static ɵfac = function MatCalendar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCalendar)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCalendar,\n    selectors: [[\"mat-calendar\"]],\n    viewQuery: function MatCalendar_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatMonthView, 5);\n        i0.ɵɵviewQuery(MatYearView, 5);\n        i0.ɵɵviewQuery(MatMultiYearView, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-calendar\"],\n    inputs: {\n      headerComponent: \"headerComponent\",\n      startAt: \"startAt\",\n      startView: \"startView\",\n      selected: \"selected\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\",\n      dateFilter: \"dateFilter\",\n      dateClass: \"dateClass\",\n      comparisonStart: \"comparisonStart\",\n      comparisonEnd: \"comparisonEnd\",\n      startDateAccessibleName: \"startDateAccessibleName\",\n      endDateAccessibleName: \"endDateAccessibleName\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\",\n      yearSelected: \"yearSelected\",\n      monthSelected: \"monthSelected\",\n      viewChanged: \"viewChanged\",\n      _userSelection: \"_userSelection\",\n      _userDragDrop: \"_userDragDrop\"\n    },\n    exportAs: [\"matCalendar\"],\n    features: [i0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), i0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 2,\n    consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\", \"activeDrag\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\"], [3, \"activeDateChange\", \"_userSelection\", \"dragStarted\", \"dragEnded\", \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\", \"activeDrag\"], [3, \"activeDateChange\", \"monthSelected\", \"selectedChange\", \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\"], [3, \"activeDateChange\", \"yearSelected\", \"selectedChange\", \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\"]],\n    template: function MatCalendar_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, MatCalendar_Case_2_Template, 1, 11, \"mat-month-view\", 2)(3, MatCalendar_Case_3_Template, 1, 6, \"mat-year-view\", 3)(4, MatCalendar_Case_4_Template, 1, 6, \"mat-multi-year-view\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional((tmp_1_0 = ctx.currentView) === \"month\" ? 2 : tmp_1_0 === \"year\" ? 3 : tmp_1_0 === \"multi-year\" ? 4 : -1);\n      }\n    },\n    dependencies: [CdkPortalOutlet, CdkMonitorFocus, MatMonthView, MatYearView, MatMultiYearView],\n    styles: [\".mat-calendar{display:block;line-height:normal;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-sys-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-sys-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-sys-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-sys-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-sys-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}@media(forced-colors: active){.mat-calendar-arrow{fill:CanvasText}}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-sys-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-sys-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color, transparent)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:\\\"\\\"}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCalendar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar',\n      host: {\n        'class': 'mat-calendar'\n      },\n      exportAs: 'matCalendar',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER],\n      imports: [CdkPortalOutlet, CdkMonitorFocus, MatMonthView, MatYearView, MatMultiYearView],\n      template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  @switch (currentView) {\\n    @case ('month') {\\n        <mat-month-view\\n            [(activeDate)]=\\\"activeDate\\\"\\n            [selected]=\\\"selected\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [dateClass]=\\\"dateClass\\\"\\n            [comparisonStart]=\\\"comparisonStart\\\"\\n            [comparisonEnd]=\\\"comparisonEnd\\\"\\n            [startDateAccessibleName]=\\\"startDateAccessibleName\\\"\\n            [endDateAccessibleName]=\\\"endDateAccessibleName\\\"\\n            (_userSelection)=\\\"_dateSelected($event)\\\"\\n            (dragStarted)=\\\"_dragStarted($event)\\\"\\n            (dragEnded)=\\\"_dragEnded($event)\\\"\\n            [activeDrag]=\\\"_activeDrag\\\"></mat-month-view>\\n    }\\n\\n    @case ('year') {\\n        <mat-year-view\\n            [(activeDate)]=\\\"activeDate\\\"\\n            [selected]=\\\"selected\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [dateClass]=\\\"dateClass\\\"\\n            (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n            (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view>\\n    }\\n\\n    @case ('multi-year') {\\n        <mat-multi-year-view\\n            [(activeDate)]=\\\"activeDate\\\"\\n            [selected]=\\\"selected\\\"\\n            [dateFilter]=\\\"dateFilter\\\"\\n            [maxDate]=\\\"maxDate\\\"\\n            [minDate]=\\\"minDate\\\"\\n            [dateClass]=\\\"dateClass\\\"\\n            (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n            (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view>\\n    }\\n  }\\n</div>\\n\",\n      styles: [\".mat-calendar{display:block;line-height:normal;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-sys-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-sys-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-sys-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-sys-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-sys-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}@media(forced-colors: active){.mat-calendar-arrow{fill:CanvasText}}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-sys-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-sys-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color, transparent)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:\\\"\\\"}\\n\"]\n    }]\n  }], () => [], {\n    headerComponent: [{\n      type: Input\n    }],\n    startAt: [{\n      type: Input\n    }],\n    startView: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    comparisonStart: [{\n      type: Input\n    }],\n    comparisonEnd: [{\n      type: Input\n    }],\n    startDateAccessibleName: [{\n      type: Input\n    }],\n    endDateAccessibleName: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    viewChanged: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    _userDragDrop: [{\n      type: Output\n    }],\n    monthView: [{\n      type: ViewChild,\n      args: [MatMonthView]\n    }],\n    yearView: [{\n      type: ViewChild,\n      args: [MatYearView]\n    }],\n    multiYearView: [{\n      type: ViewChild,\n      args: [MatMultiYearView]\n    }]\n  });\n})();\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent {\n  _elementRef = inject(ElementRef);\n  _animationsDisabled = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  }) === 'NoopAnimations';\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _globalModel = inject(MatDateSelectionModel);\n  _dateAdapter = inject(DateAdapter);\n  _ngZone = inject(NgZone);\n  _rangeSelectionStrategy = inject(MAT_DATE_RANGE_SELECTION_STRATEGY, {\n    optional: true\n  });\n  _stateChanges;\n  _model;\n  _eventCleanups;\n  _animationFallback;\n  /** Reference to the internal calendar component. */\n  _calendar;\n  /**\n   * Theme color of the internal calendar. This API is supported in M2 themes\n   * only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/datepicker/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Reference to the datepicker that created the overlay. */\n  datepicker;\n  /** Start of the comparison range. */\n  comparisonStart;\n  /** End of the comparison range. */\n  comparisonEnd;\n  /** ARIA Accessible name of the `<input matStartDate/>` */\n  startDateAccessibleName;\n  /** ARIA Accessible name of the `<input matEndDate/>` */\n  endDateAccessibleName;\n  /** Whether the datepicker is above or below the input. */\n  _isAbove;\n  /** Emits when an animation has finished. */\n  _animationDone = new Subject();\n  /** Whether there is an in-progress animation. */\n  _isAnimating = false;\n  /** Text for the close button. */\n  _closeButtonText;\n  /** Whether the close button currently has focus. */\n  _closeButtonFocused;\n  /** Portal with projected action buttons. */\n  _actionsPortal = null;\n  /** Id of the label for the `role=\"dialog\"` element. */\n  _dialogLabelId;\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n    this._closeButtonText = inject(MatDatepickerIntl).closeCalendarLabel;\n    if (!this._animationsDisabled) {\n      const element = this._elementRef.nativeElement;\n      const renderer = inject(Renderer2);\n      this._eventCleanups = this._ngZone.runOutsideAngular(() => [renderer.listen(element, 'animationstart', this._handleAnimationEvent), renderer.listen(element, 'animationend', this._handleAnimationEvent), renderer.listen(element, 'animationcancel', this._handleAnimationEvent)]);\n    }\n  }\n  ngAfterViewInit() {\n    this._stateChanges = this.datepicker.stateChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n    this._calendar.focusActiveCell();\n  }\n  ngOnDestroy() {\n    clearTimeout(this._animationFallback);\n    this._eventCleanups?.forEach(cleanup => cleanup());\n    this._stateChanges?.unsubscribe();\n    this._animationDone.complete();\n  }\n  _handleUserSelection(event) {\n    const selection = this._model.selection;\n    const value = event.value;\n    const isRange = selection instanceof DateRange;\n    // If we're selecting a range and we have a selection strategy, always pass the value through\n    // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n    // A null value when picking a range means that the user cancelled the selection (e.g. by\n    // pressing escape), whereas when selecting a single value it means that the value didn't\n    // change. This isn't very intuitive, but it's here for backwards-compatibility.\n    if (isRange && this._rangeSelectionStrategy) {\n      const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n      this._model.updateSelection(newSelection, this);\n    } else if (value && (isRange || !this._dateAdapter.sameDate(value, selection))) {\n      this._model.add(value);\n    }\n    // Delegate closing the overlay to the actions.\n    if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n      this.datepicker.close();\n    }\n  }\n  _handleUserDragDrop(event) {\n    this._model.updateSelection(event.value, this);\n  }\n  _startExitAnimation() {\n    this._elementRef.nativeElement.classList.add('mat-datepicker-content-exit');\n    if (this._animationsDisabled) {\n      this._animationDone.next();\n    } else {\n      // Some internal apps disable animations in tests using `* {animation: none !important}`.\n      // If that happens, the animation events won't fire and we'll never clean up the overlay.\n      // Add a fallback that will fire if the animation doesn't run in a certain amount of time.\n      clearTimeout(this._animationFallback);\n      this._animationFallback = setTimeout(() => {\n        if (!this._isAnimating) {\n          this._animationDone.next();\n        }\n      }, 200);\n    }\n  }\n  _handleAnimationEvent = event => {\n    const element = this._elementRef.nativeElement;\n    if (event.target !== element || !event.animationName.startsWith('_mat-datepicker-content')) {\n      return;\n    }\n    clearTimeout(this._animationFallback);\n    this._isAnimating = event.type === 'animationstart';\n    element.classList.toggle('mat-datepicker-content-animating', this._isAnimating);\n    if (!this._isAnimating) {\n      this._animationDone.next();\n    }\n  };\n  _getSelected() {\n    return this._model.selection;\n  }\n  /** Applies the current pending selection to the global model. */\n  _applyPendingSelection() {\n    if (this._model !== this._globalModel) {\n      this._globalModel.updateSelection(this._model.selection, this);\n    }\n  }\n  /**\n   * Assigns a new portal containing the datepicker actions.\n   * @param portal Portal with the actions to be assigned.\n   * @param forceRerender Whether a re-render of the portal should be triggered. This isn't\n   * necessary if the portal is assigned during initialization, but it may be required if it's\n   * added at a later point.\n   */\n  _assignActions(portal, forceRerender) {\n    // If we have actions, clone the model so that we have the ability to cancel the selection,\n    // otherwise update the global model directly. Note that we want to assign this as soon as\n    // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n    this._model = portal ? this._globalModel.clone() : this._globalModel;\n    this._actionsPortal = portal;\n    if (forceRerender) {\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  static ɵfac = function MatDatepickerContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerContent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDatepickerContent,\n    selectors: [[\"mat-datepicker-content\"]],\n    viewQuery: function MatDatepickerContent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatCalendar, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-datepicker-content\"],\n    hostVars: 6,\n    hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n        i0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi)(\"mat-datepicker-content-animations-enabled\", !ctx._animationsDisabled);\n      }\n    },\n    inputs: {\n      color: \"color\"\n    },\n    exportAs: [\"matDatepickerContent\"],\n    decls: 5,\n    vars: 26,\n    consts: [[\"cdkTrapFocus\", \"\", \"role\", \"dialog\", 1, \"mat-datepicker-content-container\"], [3, \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\", \"_userDragDrop\", \"id\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\"], [3, \"cdkPortalOutlet\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"mat-datepicker-close-button\", 3, \"focus\", \"blur\", \"click\", \"color\"]],\n    template: function MatDatepickerContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-calendar\", 1);\n        i0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener($event) {\n          return ctx.datepicker._selectYear($event);\n        })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener($event) {\n          return ctx.datepicker._selectMonth($event);\n        })(\"viewChanged\", function MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener($event) {\n          return ctx.datepicker._viewChanged($event);\n        })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_1_listener($event) {\n          return ctx._handleUserSelection($event);\n        })(\"_userDragDrop\", function MatDatepickerContent_Template_mat_calendar__userDragDrop_1_listener($event) {\n          return ctx._handleUserDragDrop($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, MatDatepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵlistener(\"focus\", function MatDatepickerContent_Template_button_focus_3_listener() {\n          return ctx._closeButtonFocused = true;\n        })(\"blur\", function MatDatepickerContent_Template_button_blur_3_listener() {\n          return ctx._closeButtonFocused = false;\n        })(\"click\", function MatDatepickerContent_Template_button_click_3_listener() {\n          return ctx.datepicker.close();\n        });\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_3_0;\n        i0.ɵɵclassProp(\"mat-datepicker-content-container-with-custom-header\", ctx.datepicker.calendarHeaderComponent)(\"mat-datepicker-content-container-with-actions\", ctx._actionsPortal);\n        i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", (tmp_3_0 = ctx._dialogLabelId) !== null && tmp_3_0 !== undefined ? tmp_3_0 : undefined);\n        i0.ɵɵadvance();\n        i0.ɵɵclassMap(ctx.datepicker.panelClass);\n        i0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"startDateAccessibleName\", ctx.startDateAccessibleName)(\"endDateAccessibleName\", ctx.endDateAccessibleName);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._actionsPortal);\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"cdk-visually-hidden\", !ctx._closeButtonFocused);\n        i0.ɵɵproperty(\"color\", ctx.color || \"primary\");\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(ctx._closeButtonText);\n      }\n    },\n    dependencies: [CdkTrapFocus, MatCalendar, CdkPortalOutlet, MatButton],\n    styles: [\"@keyframes _mat-datepicker-content-dropdown-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-datepicker-content-dialog-enter{from{opacity:0;transform:scale(0.8)}to{opacity:1;transform:none}}@keyframes _mat-datepicker-content-exit{from{opacity:1}to{opacity:0}}.mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-sys-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-sys-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12));border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-sys-corner-large))}.mat-datepicker-content.mat-datepicker-content-animations-enabled{animation:_mat-datepicker-content-dropdown-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.mat-datepicker-content-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12));border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-sys-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch.mat-datepicker-content-animations-enabled{animation:_mat-datepicker-content-dialog-enter 150ms cubic-bezier(0, 0, 0.2, 1)}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}.mat-datepicker-content-exit.mat-datepicker-content-animations-enabled{animation:_mat-datepicker-content-exit 100ms linear}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-content',\n      host: {\n        'class': 'mat-datepicker-content',\n        '[class]': 'color ? \"mat-\" + color : \"\"',\n        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n        '[class.mat-datepicker-content-animations-enabled]': '!_animationsDisabled'\n      },\n      exportAs: 'matDatepickerContent',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [CdkTrapFocus, MatCalendar, CdkPortalOutlet, MatButton],\n      template: \"<div\\n  cdkTrapFocus\\n  role=\\\"dialog\\\"\\n  [attr.aria-modal]=\\\"true\\\"\\n  [attr.aria-labelledby]=\\\"_dialogLabelId ?? undefined\\\"\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-custom-header]=\\\"datepicker.calendarHeaderComponent\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [class]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [startDateAccessibleName]=\\\"startDateAccessibleName\\\"\\n    [endDateAccessibleName]=\\\"endDateAccessibleName\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"\\n    (_userDragDrop)=\\\"_handleUserDragDrop($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\",\n      styles: [\"@keyframes _mat-datepicker-content-dropdown-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-datepicker-content-dialog-enter{from{opacity:0;transform:scale(0.8)}to{opacity:1;transform:none}}@keyframes _mat-datepicker-content-exit{from{opacity:1}to{opacity:0}}.mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-sys-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-sys-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12));border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-sys-corner-large))}.mat-datepicker-content.mat-datepicker-content-animations-enabled{animation:_mat-datepicker-content-dropdown-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.mat-datepicker-content-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12));border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-sys-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch.mat-datepicker-content-animations-enabled{animation:_mat-datepicker-content-dialog-enter 150ms cubic-bezier(0, 0, 0.2, 1)}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}.mat-datepicker-content-exit.mat-datepicker-content-animations-enabled{animation:_mat-datepicker-content-exit 100ms linear}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"]\n    }]\n  }], () => [], {\n    _calendar: [{\n      type: ViewChild,\n      args: [MatCalendar]\n    }],\n    color: [{\n      type: Input\n    }]\n  });\n})();\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n  _overlay = inject(Overlay);\n  _viewContainerRef = inject(ViewContainerRef);\n  _dateAdapter = inject(DateAdapter, {\n    optional: true\n  });\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _model = inject(MatDateSelectionModel);\n  _scrollStrategy = inject(MAT_DATEPICKER_SCROLL_STRATEGY);\n  _inputStateChanges = Subscription.EMPTY;\n  _document = inject(DOCUMENT);\n  /** An input indicating the type of the custom header component for the calendar, if set. */\n  calendarHeaderComponent;\n  /** The date to open the calendar to initially. */\n  get startAt() {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n  }\n  set startAt(value) {\n    this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _startAt;\n  /** The view that the calendar should start in. */\n  startView = 'month';\n  /**\n   * Theme color of the datepicker's calendar. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/datepicker/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  get color() {\n    return this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n  }\n  set color(value) {\n    this._color = value;\n  }\n  _color;\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a dropdown and elements have more padding to allow for bigger touch targets.\n   */\n  touchUi = false;\n  /** Whether the datepicker pop-up should be disabled. */\n  get disabled() {\n    return this._disabled === undefined && this.datepickerInput ? this.datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value) {\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this.stateChanges.next(undefined);\n    }\n  }\n  _disabled;\n  /** Preferred position of the datepicker in the X axis. */\n  xPosition = 'start';\n  /** Preferred position of the datepicker in the Y axis. */\n  yPosition = 'below';\n  /**\n   * Whether to restore focus to the previously-focused element when the calendar is closed.\n   * Note that automatic focus restoration is an accessibility feature and it is recommended that\n   * you provide your own equivalent, if you decide to turn it off.\n   */\n  restoreFocus = true;\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  yearSelected = new EventEmitter();\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  monthSelected = new EventEmitter();\n  /**\n   * Emits when the current view changes.\n   */\n  viewChanged = new EventEmitter(true);\n  /** Function that can be used to add custom CSS classes to dates. */\n  dateClass;\n  /** Emits when the datepicker has been opened. */\n  openedStream = new EventEmitter();\n  /** Emits when the datepicker has been closed. */\n  closedStream = new EventEmitter();\n  /** Classes to be passed to the date picker panel. */\n  get panelClass() {\n    return this._panelClass;\n  }\n  set panelClass(value) {\n    this._panelClass = coerceStringArray(value);\n  }\n  _panelClass;\n  /** Whether the calendar is open. */\n  get opened() {\n    return this._opened;\n  }\n  set opened(value) {\n    if (value) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n  _opened = false;\n  /** The id for the datepicker calendar. */\n  id = inject(_IdGenerator).getId('mat-datepicker-');\n  /** The minimum selectable date. */\n  _getMinDate() {\n    return this.datepickerInput && this.datepickerInput.min;\n  }\n  /** The maximum selectable date. */\n  _getMaxDate() {\n    return this.datepickerInput && this.datepickerInput.max;\n  }\n  _getDateFilter() {\n    return this.datepickerInput && this.datepickerInput.dateFilter;\n  }\n  /** A reference to the overlay into which we've rendered the calendar. */\n  _overlayRef;\n  /** Reference to the component instance rendered in the overlay. */\n  _componentRef;\n  /** The element that was focused before the datepicker was opened. */\n  _focusedElementBeforeOpen = null;\n  /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n  _backdropHarnessClass = `${this.id}-backdrop`;\n  /** Currently-registered actions portal. */\n  _actionsPortal;\n  /** The input element this datepicker is associated with. */\n  datepickerInput;\n  /** Emits when the datepicker's state changes. */\n  stateChanges = new Subject();\n  _injector = inject(Injector);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  constructor() {\n    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    this._model.selectionChanged.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  ngOnChanges(changes) {\n    const positionChange = changes['xPosition'] || changes['yPosition'];\n    if (positionChange && !positionChange.firstChange && this._overlayRef) {\n      const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n      if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n        this._setConnectedPositions(positionStrategy);\n        if (this.opened) {\n          this._overlayRef.updatePosition();\n        }\n      }\n    }\n    this.stateChanges.next(undefined);\n  }\n  ngOnDestroy() {\n    this._destroyOverlay();\n    this.close();\n    this._inputStateChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n  /** Selects the given date */\n  select(date) {\n    this._model.add(date);\n  }\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear) {\n    this.yearSelected.emit(normalizedYear);\n  }\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n  /** Emits changed view */\n  _viewChanged(view) {\n    this.viewChanged.emit(view);\n  }\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   * @returns Selection model that the input should hook itself up to.\n   */\n  registerInput(input) {\n    if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n    this._inputStateChanges.unsubscribe();\n    this.datepickerInput = input;\n    this._inputStateChanges = input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n    return this._model;\n  }\n  /**\n   * Registers a portal containing action buttons with the datepicker.\n   * @param portal Portal to be registered.\n   */\n  registerActions(portal) {\n    if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('A MatDatepicker can only be associated with a single actions row.');\n    }\n    this._actionsPortal = portal;\n    this._componentRef?.instance._assignActions(portal, true);\n  }\n  /**\n   * Removes a portal containing action buttons from the datepicker.\n   * @param portal Portal to be removed.\n   */\n  removeActions(portal) {\n    if (portal === this._actionsPortal) {\n      this._actionsPortal = null;\n      this._componentRef?.instance._assignActions(null, true);\n    }\n  }\n  /** Open the calendar. */\n  open() {\n    // Skip reopening if there's an in-progress animation to avoid overlapping\n    // sequences which can cause \"changed after checked\" errors. See #25837.\n    if (this._opened || this.disabled || this._componentRef?.instance._isAnimating) {\n      return;\n    }\n    if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n    this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n    this._openOverlay();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n  /** Close the calendar. */\n  close() {\n    // Skip reopening if there's an in-progress animation to avoid overlapping\n    // sequences which can cause \"changed after checked\" errors. See #25837.\n    if (!this._opened || this._componentRef?.instance._isAnimating) {\n      return;\n    }\n    const canRestoreFocus = this.restoreFocus && this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function';\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n      }\n    };\n    if (this._componentRef) {\n      const {\n        instance,\n        location\n      } = this._componentRef;\n      instance._animationDone.pipe(take(1)).subscribe(() => {\n        const activeElement = this._document.activeElement;\n        // Since we restore focus after the exit animation, we have to check that\n        // the user didn't move focus themselves inside the `close` handler.\n        if (canRestoreFocus && (!activeElement || activeElement === this._document.activeElement || location.nativeElement.contains(activeElement))) {\n          this._focusedElementBeforeOpen.focus();\n        }\n        this._focusedElementBeforeOpen = null;\n        this._destroyOverlay();\n      });\n      instance._startExitAnimation();\n    }\n    if (canRestoreFocus) {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n  /** Applies the current pending selection on the overlay to the model. */\n  _applyPendingSelection() {\n    this._componentRef?.instance?._applyPendingSelection();\n  }\n  /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n  _forwardContentValues(instance) {\n    instance.datepicker = this;\n    instance.color = this.color;\n    instance._dialogLabelId = this.datepickerInput.getOverlayLabelId();\n    instance._assignActions(this._actionsPortal, false);\n  }\n  /** Opens the overlay with the calendar. */\n  _openOverlay() {\n    this._destroyOverlay();\n    const isDialog = this.touchUi;\n    const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n    const overlayRef = this._overlayRef = this._overlay.create(new OverlayConfig({\n      positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n      hasBackdrop: true,\n      backdropClass: [isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n      direction: this._dir || 'ltr',\n      scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n      panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`\n    }));\n    this._getCloseStream(overlayRef).subscribe(event => {\n      if (event) {\n        event.preventDefault();\n      }\n      this.close();\n    });\n    // The `preventDefault` call happens inside the calendar as well, however focus moves into\n    // it inside a timeout which can give browsers a chance to fire off a keyboard event in-between\n    // that can scroll the page (see #24969). Always block default actions of arrow keys for the\n    // entire overlay so the page doesn't get scrolled by accident.\n    overlayRef.keydownEvents().subscribe(event => {\n      const keyCode = event.keyCode;\n      if (keyCode === UP_ARROW || keyCode === DOWN_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW || keyCode === PAGE_UP || keyCode === PAGE_DOWN) {\n        event.preventDefault();\n      }\n    });\n    this._componentRef = overlayRef.attach(portal);\n    this._forwardContentValues(this._componentRef.instance);\n    // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n    if (!isDialog) {\n      afterNextRender(() => {\n        overlayRef.updatePosition();\n      }, {\n        injector: this._injector\n      });\n    }\n  }\n  /** Destroys the current overlay. */\n  _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = this._componentRef = null;\n    }\n  }\n  /** Gets a position strategy that will open the calendar as a dropdown. */\n  _getDialogStrategy() {\n    return this._overlay.position().global().centerHorizontally().centerVertically();\n  }\n  /** Gets a position strategy that will open the calendar as a dropdown. */\n  _getDropdownStrategy() {\n    const strategy = this._overlay.position().flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn('.mat-datepicker-content').withFlexibleDimensions(false).withViewportMargin(8).withLockedPosition();\n    return this._setConnectedPositions(strategy);\n  }\n  /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n  _setConnectedPositions(strategy) {\n    const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n    const secondaryX = primaryX === 'start' ? 'end' : 'start';\n    const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n    const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n    return strategy.withPositions([{\n      originX: primaryX,\n      originY: secondaryY,\n      overlayX: primaryX,\n      overlayY: primaryY\n    }, {\n      originX: primaryX,\n      originY: primaryY,\n      overlayX: primaryX,\n      overlayY: secondaryY\n    }, {\n      originX: secondaryX,\n      originY: secondaryY,\n      overlayX: secondaryX,\n      overlayY: primaryY\n    }, {\n      originX: secondaryX,\n      originY: primaryY,\n      overlayX: secondaryX,\n      overlayY: secondaryY\n    }]);\n  }\n  /** Gets an observable that will emit when the overlay is supposed to be closed. */\n  _getCloseStream(overlayRef) {\n    const ctrlShiftMetaModifiers = ['ctrlKey', 'shiftKey', 'metaKey'];\n    return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n      // Closing on alt + up is only valid when there's an input associated with the datepicker.\n      return event.keyCode === ESCAPE && !hasModifierKey(event) || this.datepickerInput && hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW && ctrlShiftMetaModifiers.every(modifier => !hasModifierKey(event, modifier));\n    })));\n  }\n  static ɵfac = function MatDatepickerBase_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerBase)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDatepickerBase,\n    inputs: {\n      calendarHeaderComponent: \"calendarHeaderComponent\",\n      startAt: \"startAt\",\n      startView: \"startView\",\n      color: \"color\",\n      touchUi: [2, \"touchUi\", \"touchUi\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      xPosition: \"xPosition\",\n      yPosition: \"yPosition\",\n      restoreFocus: [2, \"restoreFocus\", \"restoreFocus\", booleanAttribute],\n      dateClass: \"dateClass\",\n      panelClass: \"panelClass\",\n      opened: [2, \"opened\", \"opened\", booleanAttribute]\n    },\n    outputs: {\n      yearSelected: \"yearSelected\",\n      monthSelected: \"monthSelected\",\n      viewChanged: \"viewChanged\",\n      openedStream: \"opened\",\n      closedStream: \"closed\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerBase, [{\n    type: Directive\n  }], () => [], {\n    calendarHeaderComponent: [{\n      type: Input\n    }],\n    startAt: [{\n      type: Input\n    }],\n    startView: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    touchUi: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    viewChanged: [{\n      type: Output\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatDatepicker_BaseFactory;\n    return function MatDatepicker_Factory(__ngFactoryType__) {\n      return (ɵMatDatepicker_BaseFactory || (ɵMatDatepicker_BaseFactory = i0.ɵɵgetInheritedFactory(MatDatepicker)))(__ngFactoryType__ || MatDatepicker);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDatepicker,\n    selectors: [[\"mat-datepicker\"]],\n    exportAs: [\"matDatepicker\"],\n    features: [i0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, {\n      provide: MatDatepickerBase,\n      useExisting: MatDatepicker\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function MatDatepicker_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepicker, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker',\n      template: '',\n      exportAs: 'matDatepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, {\n        provide: MatDatepickerBase,\n        useExisting: MatDatepicker\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n  target;\n  targetElement;\n  /** The new value for the target datepicker input. */\n  value;\n  constructor(/** Reference to the datepicker input component that emitted the event. */\n  target, /** Reference to the native input element associated with the datepicker input. */\n  targetElement) {\n    this.target = target;\n    this.targetElement = targetElement;\n    this.value = this.target.value;\n  }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n  _elementRef = inject(ElementRef);\n  _dateAdapter = inject(DateAdapter, {\n    optional: true\n  });\n  _dateFormats = inject(MAT_DATE_FORMATS, {\n    optional: true\n  });\n  /** Whether the component has been initialized. */\n  _isInitialized;\n  /** The value of the input. */\n  get value() {\n    return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n  }\n  set value(value) {\n    this._assignValueProgrammatically(value);\n  }\n  _model;\n  /** Whether the datepicker-input is disabled. */\n  get disabled() {\n    return !!this._disabled || this._parentDisabled();\n  }\n  set disabled(value) {\n    const newValue = value;\n    const element = this._elementRef.nativeElement;\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this.stateChanges.next(undefined);\n    }\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n    // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n    // element has been inserted.\n    if (newValue && this._isInitialized && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  _disabled;\n  /** Emits when a `change` event is fired on this `<input>`. */\n  dateChange = new EventEmitter();\n  /** Emits when an `input` event is fired on this `<input>`. */\n  dateInput = new EventEmitter();\n  /** Emits when the internal state has changed */\n  stateChanges = new Subject();\n  _onTouched = () => {};\n  _validatorOnChange = () => {};\n  _cvaOnChange = () => {};\n  _valueChangesSubscription = Subscription.EMPTY;\n  _localeSubscription = Subscription.EMPTY;\n  /**\n   * Since the value is kept on the model which is assigned in an Input,\n   * we might get a value before we have a model. This property keeps track\n   * of the value until we have somewhere to assign it.\n   */\n  _pendingValue;\n  /** The form control validator for whether the input parses. */\n  _parseValidator = () => {\n    return this._lastValueValid ? null : {\n      'matDatepickerParse': {\n        'text': this._elementRef.nativeElement.value\n      }\n    };\n  };\n  /** The form control validator for the date filter. */\n  _filterValidator = control => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return !controlValue || this._matchesFilter(controlValue) ? null : {\n      'matDatepickerFilter': true\n    };\n  };\n  /** The form control validator for the min date. */\n  _minValidator = control => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const min = this._getMinDate();\n    return !min || !controlValue || this._dateAdapter.compareDate(min, controlValue) <= 0 ? null : {\n      'matDatepickerMin': {\n        'min': min,\n        'actual': controlValue\n      }\n    };\n  };\n  /** The form control validator for the max date. */\n  _maxValidator = control => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const max = this._getMaxDate();\n    return !max || !controlValue || this._dateAdapter.compareDate(max, controlValue) >= 0 ? null : {\n      'matDatepickerMax': {\n        'max': max,\n        'actual': controlValue\n      }\n    };\n  };\n  /** Gets the base validator functions. */\n  _getValidators() {\n    return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n  }\n  /** Registers a date selection model with the input. */\n  _registerModel(model) {\n    this._model = model;\n    this._valueChangesSubscription.unsubscribe();\n    if (this._pendingValue) {\n      this._assignValue(this._pendingValue);\n    }\n    this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n      if (this._shouldHandleChangeEvent(event)) {\n        const value = this._getValueFromModel(event.selection);\n        this._lastValueValid = this._isValidValue(value);\n        this._cvaOnChange(value);\n        this._onTouched();\n        this._formatValue(value);\n        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      }\n    });\n  }\n  /** Whether the last value set on the input was valid. */\n  _lastValueValid = false;\n  constructor() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = this._dateAdapter.localeChanges.subscribe(() => {\n      this._assignValueProgrammatically(this.value);\n    });\n  }\n  ngAfterViewInit() {\n    this._isInitialized = true;\n  }\n  ngOnChanges(changes) {\n    if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n      this.stateChanges.next(undefined);\n    }\n  }\n  ngOnDestroy() {\n    this._valueChangesSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this.stateChanges.complete();\n  }\n  /** @docs-private */\n  registerOnValidatorChange(fn) {\n    this._validatorOnChange = fn;\n  }\n  /** @docs-private */\n  validate(c) {\n    return this._validator ? this._validator(c) : null;\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    this._assignValueProgrammatically(value);\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._cvaOnChange = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  _onKeydown(event) {\n    const ctrlShiftMetaModifiers = ['ctrlKey', 'shiftKey', 'metaKey'];\n    const isAltDownArrow = hasModifierKey(event, 'altKey') && event.keyCode === DOWN_ARROW && ctrlShiftMetaModifiers.every(modifier => !hasModifierKey(event, modifier));\n    if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._openPopup();\n      event.preventDefault();\n    }\n  }\n  _onInput(value) {\n    const lastValueWasValid = this._lastValueValid;\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = this._isValidValue(date);\n    date = this._dateAdapter.getValidDateOrNull(date);\n    const hasChanged = !this._dateAdapter.sameDate(date, this.value);\n    // We need to fire the CVA change event for all\n    // nulls, otherwise the validators won't run.\n    if (!date || hasChanged) {\n      this._cvaOnChange(date);\n    } else {\n      // Call the CVA change handler for invalid values\n      // since this is what marks the control as dirty.\n      if (value && !this.value) {\n        this._cvaOnChange(date);\n      }\n      if (lastValueWasValid !== this._lastValueValid) {\n        this._validatorOnChange();\n      }\n    }\n    if (hasChanged) {\n      this._assignValue(date);\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n  }\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n    this._onTouched();\n  }\n  /** Formats a value and sets it on the input element. */\n  _formatValue(value) {\n    this._elementRef.nativeElement.value = value != null ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n  /** Assigns a value to the model. */\n  _assignValue(value) {\n    // We may get some incoming values before the model was\n    // assigned. Save the value so that we can assign it later.\n    if (this._model) {\n      this._assignValueToModel(value);\n      this._pendingValue = null;\n    } else {\n      this._pendingValue = value;\n    }\n  }\n  /** Whether a value is considered valid. */\n  _isValidValue(value) {\n    return !value || this._dateAdapter.isValid(value);\n  }\n  /**\n   * Checks whether a parent control is disabled. This is in place so that it can be overridden\n   * by inputs extending this one which can be placed inside of a group that can be disabled.\n   */\n  _parentDisabled() {\n    return false;\n  }\n  /** Programmatically assigns a value to the input. */\n  _assignValueProgrammatically(value) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = this._isValidValue(value);\n    value = this._dateAdapter.getValidDateOrNull(value);\n    this._assignValue(value);\n    this._formatValue(value);\n  }\n  /** Gets whether a value matches the current date filter. */\n  _matchesFilter(value) {\n    const filter = this._getDateFilter();\n    return !filter || filter(value);\n  }\n  static ɵfac = function MatDatepickerInputBase_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerInputBase)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDatepickerInputBase,\n    inputs: {\n      value: \"value\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      dateChange: \"dateChange\",\n      dateInput: \"dateInput\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerInputBase, [{\n    type: Directive\n  }], () => [], {\n    value: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    dateChange: [{\n      type: Output\n    }],\n    dateInput: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n  const keys = Object.keys(changes);\n  for (let key of keys) {\n    const {\n      previousValue,\n      currentValue\n    } = changes[key];\n    if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n      if (!adapter.sameDate(previousValue, currentValue)) {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n  _formField = inject(MAT_FORM_FIELD, {\n    optional: true\n  });\n  _closedSubscription = Subscription.EMPTY;\n  _openedSubscription = Subscription.EMPTY;\n  /** The datepicker that this input is associated with. */\n  set matDatepicker(datepicker) {\n    if (datepicker) {\n      this._datepicker = datepicker;\n      this._ariaOwns.set(datepicker.opened ? datepicker.id : null);\n      this._closedSubscription = datepicker.closedStream.subscribe(() => {\n        this._onTouched();\n        this._ariaOwns.set(null);\n      });\n      this._openedSubscription = datepicker.openedStream.subscribe(() => {\n        this._ariaOwns.set(datepicker.id);\n      });\n      this._registerModel(datepicker.registerInput(this));\n    }\n  }\n  _datepicker;\n  /** The id of the panel owned by this input. */\n  _ariaOwns = signal(null);\n  /** The minimum valid date. */\n  get min() {\n    return this._min;\n  }\n  set min(value) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    if (!this._dateAdapter.sameDate(validValue, this._min)) {\n      this._min = validValue;\n      this._validatorOnChange();\n    }\n  }\n  _min;\n  /** The maximum valid date. */\n  get max() {\n    return this._max;\n  }\n  set max(value) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    if (!this._dateAdapter.sameDate(validValue, this._max)) {\n      this._max = validValue;\n      this._validatorOnChange();\n    }\n  }\n  _max;\n  /** Function that can be used to filter out dates within the datepicker. */\n  get dateFilter() {\n    return this._dateFilter;\n  }\n  set dateFilter(value) {\n    const wasMatchingValue = this._matchesFilter(this.value);\n    this._dateFilter = value;\n    if (this._matchesFilter(this.value) !== wasMatchingValue) {\n      this._validatorOnChange();\n    }\n  }\n  _dateFilter;\n  /** The combined form control validator for this input. */\n  _validator;\n  constructor() {\n    super();\n    this._validator = Validators.compose(super._getValidators());\n  }\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin() {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n  /** Gets the ID of an element that should be used a description for the calendar overlay. */\n  getOverlayLabelId() {\n    if (this._formField) {\n      return this._formField.getLabelId();\n    }\n    return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n  }\n  /** Returns the palette used by the input's form field, if any. */\n  getThemePalette() {\n    return this._formField ? this._formField.color : undefined;\n  }\n  /** Gets the value at which the calendar should start. */\n  getStartValue() {\n    return this.value;\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._closedSubscription.unsubscribe();\n    this._openedSubscription.unsubscribe();\n  }\n  /** Opens the associated datepicker. */\n  _openPopup() {\n    if (this._datepicker) {\n      this._datepicker.open();\n    }\n  }\n  _getValueFromModel(modelValue) {\n    return modelValue;\n  }\n  _assignValueToModel(value) {\n    if (this._model) {\n      this._model.updateSelection(value, this);\n    }\n  }\n  /** Gets the input's minimum date. */\n  _getMinDate() {\n    return this._min;\n  }\n  /** Gets the input's maximum date. */\n  _getMaxDate() {\n    return this._max;\n  }\n  /** Gets the input's date filtering function. */\n  _getDateFilter() {\n    return this._dateFilter;\n  }\n  _shouldHandleChangeEvent(event) {\n    return event.source !== this;\n  }\n  static ɵfac = function MatDatepickerInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDatepickerInput,\n    selectors: [[\"input\", \"matDatepicker\", \"\"]],\n    hostAttrs: [1, \"mat-datepicker-input\"],\n    hostVars: 6,\n    hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) {\n          return ctx._onInput($event.target.value);\n        })(\"change\", function MatDatepickerInput_change_HostBindingHandler() {\n          return ctx._onChange();\n        })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() {\n          return ctx._onBlur();\n        })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) {\n          return ctx._onKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", ctx._ariaOwns())(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n      }\n    },\n    inputs: {\n      matDatepicker: \"matDatepicker\",\n      min: \"min\",\n      max: \"max\",\n      dateFilter: [0, \"matDatepickerFilter\", \"dateFilter\"]\n    },\n    exportAs: [\"matDatepickerInput\"],\n    features: [i0.ɵɵProvidersFeature([MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n      provide: MAT_INPUT_VALUE_ACCESSOR,\n      useExisting: MatDatepickerInput\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matDatepicker]',\n      providers: [MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n        provide: MAT_INPUT_VALUE_ACCESSOR,\n        useExisting: MatDatepickerInput\n      }],\n      host: {\n        'class': 'mat-datepicker-input',\n        '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n        '[attr.aria-owns]': '_ariaOwns()',\n        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n        // Used by the test harness to tie this input to its calendar. We can't depend on\n        // `aria-owns` for this, because it's only defined while the calendar is open.\n        '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)'\n      },\n      exportAs: 'matDatepickerInput'\n    }]\n  }], () => [], {\n    matDatepicker: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input,\n      args: ['matDatepickerFilter']\n    }]\n  });\n})();\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n  static ɵfac = function MatDatepickerToggleIcon_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerToggleIcon)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDatepickerToggleIcon,\n    selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n    type: Directive,\n    args: [{\n      selector: '[matDatepickerToggleIcon]'\n    }]\n  }], null, null);\n})();\nclass MatDatepickerToggle {\n  _intl = inject(MatDatepickerIntl);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _stateChanges = Subscription.EMPTY;\n  /** Datepicker instance that the button will toggle. */\n  datepicker;\n  /** Tabindex for the toggle. */\n  tabIndex;\n  /** Screen-reader label for the button. */\n  ariaLabel;\n  /** Whether the toggle button is disabled. */\n  get disabled() {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n    return !!this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled;\n  /** Whether ripples on the toggle should be disabled. */\n  disableRipple;\n  /** Custom icon set by the consumer. */\n  _customIcon;\n  /** Underlying button element. */\n  _button;\n  constructor() {\n    const defaultTabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n  }\n  ngOnChanges(changes) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n  _open(event) {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n  _watchStateChanges() {\n    const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n    const inputStateChanged = this.datepicker && this.datepicker.datepickerInput ? this.datepicker.datepickerInput.stateChanges : of();\n    const datepickerToggled = this.datepicker ? merge(this.datepicker.openedStream, this.datepicker.closedStream) : of();\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  static ɵfac = function MatDatepickerToggle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerToggle)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDatepickerToggle,\n    selectors: [[\"mat-datepicker-toggle\"]],\n    contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n      }\n    },\n    viewQuery: function MatDatepickerToggle_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._button = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-datepicker-toggle\"],\n    hostVars: 8,\n    hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatDatepickerToggle_click_HostBindingHandler($event) {\n          return ctx._open($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", null)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n        i0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n      }\n    },\n    inputs: {\n      datepicker: [0, \"for\", \"datepicker\"],\n      tabIndex: \"tabIndex\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      disableRipple: \"disableRipple\"\n    },\n    exportAs: [\"matDatepickerToggle\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c4,\n    decls: 4,\n    vars: 7,\n    consts: [[\"button\", \"\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]],\n    template: function MatDatepickerToggle_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵelementStart(0, \"button\", 1, 0);\n        i0.ɵɵtemplate(2, MatDatepickerToggle_Conditional_2_Template, 2, 0, \":svg:svg\", 2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        i0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-expanded\", ctx.datepicker ? ctx.datepicker.opened : null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(!ctx._customIcon ? 2 : -1);\n      }\n    },\n    dependencies: [MatIconButton],\n    styles: [\".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-sys-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-sys-on-surface-variant))}@media(forced-colors: active){.mat-datepicker-toggle-default-icon{color:CanvasText}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-toggle',\n      host: {\n        'class': 'mat-datepicker-toggle',\n        '[attr.tabindex]': 'null',\n        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n        // Used by the test harness to tie this toggle to its datepicker.\n        '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n        // Bind the `click` on the host, rather than the inner `button`, so that we can call\n        // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n        // it so that the input doesn't get focused automatically by the form field (See #21836).\n        '(click)': '_open($event)'\n      },\n      exportAs: 'matDatepickerToggle',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatIconButton],\n      template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [attr.aria-expanded]=\\\"datepicker ? datepicker.opened : null\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  @if (!_customIcon) {\\n    <svg\\n      class=\\\"mat-datepicker-toggle-default-icon\\\"\\n      viewBox=\\\"0 0 24 24\\\"\\n      width=\\\"24px\\\"\\n      height=\\\"24px\\\"\\n      fill=\\\"currentColor\\\"\\n      focusable=\\\"false\\\"\\n      aria-hidden=\\\"true\\\">\\n      <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n    </svg>\\n  }\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n      styles: [\".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-sys-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-sys-on-surface-variant))}@media(forced-colors: active){.mat-datepicker-toggle-default-icon{color:CanvasText}}\\n\"]\n    }]\n  }], () => [], {\n    datepicker: [{\n      type: Input,\n      args: ['for']\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    _customIcon: [{\n      type: ContentChild,\n      args: [MatDatepickerToggleIcon]\n    }],\n    _button: [{\n      type: ViewChild,\n      args: ['button']\n    }]\n  });\n})();\nclass MatDateRangeInput {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _dateAdapter = inject(DateAdapter, {\n    optional: true\n  });\n  _formField = inject(MAT_FORM_FIELD, {\n    optional: true\n  });\n  _closedSubscription = Subscription.EMPTY;\n  _openedSubscription = Subscription.EMPTY;\n  _startInput;\n  _endInput;\n  /** Current value of the range input. */\n  get value() {\n    return this._model ? this._model.selection : null;\n  }\n  /** Unique ID for the group. */\n  id = inject(_IdGenerator).getId('mat-date-range-input-');\n  /** Whether the control is focused. */\n  focused = false;\n  /** Whether the control's label should float. */\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n  /** Name of the form control. */\n  controlType = 'mat-date-range-input';\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n   * @docs-private\n   */\n  get placeholder() {\n    const start = this._startInput?._getPlaceholder() || '';\n    const end = this._endInput?._getPlaceholder() || '';\n    return start || end ? `${start} ${this.separator} ${end}` : '';\n  }\n  /** The range picker that this input is associated with. */\n  get rangePicker() {\n    return this._rangePicker;\n  }\n  set rangePicker(rangePicker) {\n    if (rangePicker) {\n      this._model = rangePicker.registerInput(this);\n      this._rangePicker = rangePicker;\n      this._closedSubscription.unsubscribe();\n      this._openedSubscription.unsubscribe();\n      this._ariaOwns.set(this.rangePicker.opened ? rangePicker.id : null);\n      this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n        this._startInput?._onTouched();\n        this._endInput?._onTouched();\n        this._ariaOwns.set(null);\n      });\n      this._openedSubscription = rangePicker.openedStream.subscribe(() => {\n        this._ariaOwns.set(rangePicker.id);\n      });\n      this._registerModel(this._model);\n    }\n  }\n  _rangePicker;\n  /** The id of the panel owned by this input. */\n  _ariaOwns = signal(null);\n  /** Whether the input is required. */\n  get required() {\n    return this._required ?? (this._isTargetRequired(this) || this._isTargetRequired(this._startInput) || this._isTargetRequired(this._endInput)) ?? false;\n  }\n  set required(value) {\n    this._required = value;\n  }\n  _required;\n  /** Function that can be used to filter out dates within the date range picker. */\n  get dateFilter() {\n    return this._dateFilter;\n  }\n  set dateFilter(value) {\n    const start = this._startInput;\n    const end = this._endInput;\n    const wasMatchingStart = start && start._matchesFilter(start.value);\n    const wasMatchingEnd = end && end._matchesFilter(start.value);\n    this._dateFilter = value;\n    if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n      start._validatorOnChange();\n    }\n    if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n      end._validatorOnChange();\n    }\n  }\n  _dateFilter;\n  /** The minimum valid date. */\n  get min() {\n    return this._min;\n  }\n  set min(value) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    if (!this._dateAdapter.sameDate(validValue, this._min)) {\n      this._min = validValue;\n      this._revalidate();\n    }\n  }\n  _min;\n  /** The maximum valid date. */\n  get max() {\n    return this._max;\n  }\n  set max(value) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    if (!this._dateAdapter.sameDate(validValue, this._max)) {\n      this._max = validValue;\n      this._revalidate();\n    }\n  }\n  _max;\n  /** Whether the input is disabled. */\n  get disabled() {\n    return this._startInput && this._endInput ? this._startInput.disabled && this._endInput.disabled : this._groupDisabled;\n  }\n  set disabled(value) {\n    if (value !== this._groupDisabled) {\n      this._groupDisabled = value;\n      this.stateChanges.next(undefined);\n    }\n  }\n  _groupDisabled = false;\n  /** Whether the input is in an error state. */\n  get errorState() {\n    if (this._startInput && this._endInput) {\n      return this._startInput.errorState || this._endInput.errorState;\n    }\n    return false;\n  }\n  /** Whether the datepicker input is empty. */\n  get empty() {\n    const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n    const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n    return startEmpty && endEmpty;\n  }\n  /** Value for the `aria-describedby` attribute of the inputs. */\n  _ariaDescribedBy = null;\n  /** Date selection model currently registered with the input. */\n  _model;\n  /** Separator text to be shown between the inputs. */\n  separator = '–';\n  /** Start of the comparison range that should be shown in the calendar. */\n  comparisonStart = null;\n  /** End of the comparison range that should be shown in the calendar. */\n  comparisonEnd = null;\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * TODO(crisbeto): change type to `AbstractControlDirective` after #18206 lands.\n   * @docs-private\n   */\n  ngControl;\n  /** Emits when the input's state has changed. */\n  stateChanges = new Subject();\n  /**\n   * Disable the automatic labeling to avoid issues like #27241.\n   * @docs-private\n   */\n  disableAutomaticLabeling = true;\n  constructor() {\n    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    // The datepicker module can be used both with MDC and non-MDC form fields. We have\n    // to conditionally add the MDC input class so that the range picker looks correctly.\n    if (this._formField?._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n      this._elementRef.nativeElement.classList.add('mat-mdc-input-element', 'mat-mdc-form-field-input-control', 'mdc-text-field__input');\n    }\n    // TODO(crisbeto): remove `as any` after #18206 lands.\n    this.ngControl = inject(ControlContainer, {\n      optional: true,\n      self: true\n    });\n  }\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n  }\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  onContainerClick() {\n    if (!this.focused && !this.disabled) {\n      if (!this._model || !this._model.selection.start) {\n        this._startInput.focus();\n      } else {\n        this._endInput.focus();\n      }\n    }\n  }\n  ngAfterContentInit() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._startInput) {\n        throw Error('mat-date-range-input must contain a matStartDate input');\n      }\n      if (!this._endInput) {\n        throw Error('mat-date-range-input must contain a matEndDate input');\n      }\n    }\n    if (this._model) {\n      this._registerModel(this._model);\n    }\n    // We don't need to unsubscribe from this, because we\n    // know that the input streams will be completed on destroy.\n    merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n      this.stateChanges.next(undefined);\n    });\n  }\n  ngOnChanges(changes) {\n    if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n      this.stateChanges.next(undefined);\n    }\n  }\n  ngOnDestroy() {\n    this._closedSubscription.unsubscribe();\n    this._openedSubscription.unsubscribe();\n    this.stateChanges.complete();\n  }\n  /** Gets the date at which the calendar should start. */\n  getStartValue() {\n    return this.value ? this.value.start : null;\n  }\n  /** Gets the input's theme palette. */\n  getThemePalette() {\n    return this._formField ? this._formField.color : undefined;\n  }\n  /** Gets the element to which the calendar overlay should be attached. */\n  getConnectedOverlayOrigin() {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n  /** Gets the ID of an element that should be used a description for the calendar overlay. */\n  getOverlayLabelId() {\n    return this._formField ? this._formField.getLabelId() : null;\n  }\n  /** Gets the value that is used to mirror the state input. */\n  _getInputMirrorValue(part) {\n    const input = part === 'start' ? this._startInput : this._endInput;\n    return input ? input.getMirrorValue() : '';\n  }\n  /** Whether the input placeholders should be hidden. */\n  _shouldHidePlaceholders() {\n    return this._startInput ? !this._startInput.isEmpty() : false;\n  }\n  /** Handles the value in one of the child inputs changing. */\n  _handleChildValueChange() {\n    this.stateChanges.next(undefined);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Opens the date range picker associated with the input. */\n  _openDatepicker() {\n    if (this._rangePicker) {\n      this._rangePicker.open();\n    }\n  }\n  /** Whether the separate text should be hidden. */\n  _shouldHideSeparator() {\n    return (!this._formField || this._formField.getLabelId() && !this._formField._shouldLabelFloat()) && this.empty;\n  }\n  /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n  _getAriaLabelledby() {\n    const formField = this._formField;\n    return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n  }\n  _getStartDateAccessibleName() {\n    return this._startInput._getAccessibleName();\n  }\n  _getEndDateAccessibleName() {\n    return this._endInput._getAccessibleName();\n  }\n  /** Updates the focused state of the range input. */\n  _updateFocus(origin) {\n    this.focused = origin !== null;\n    this.stateChanges.next();\n  }\n  /** Re-runs the validators on the start/end inputs. */\n  _revalidate() {\n    if (this._startInput) {\n      this._startInput._validatorOnChange();\n    }\n    if (this._endInput) {\n      this._endInput._validatorOnChange();\n    }\n  }\n  /** Registers the current date selection model with the start/end inputs. */\n  _registerModel(model) {\n    if (this._startInput) {\n      this._startInput._registerModel(model);\n    }\n    if (this._endInput) {\n      this._endInput._registerModel(model);\n    }\n  }\n  /** Checks whether a specific range input directive is required. */\n  _isTargetRequired(target) {\n    return target?.ngControl?.control?.hasValidator(Validators.required);\n  }\n  static ɵfac = function MatDateRangeInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDateRangeInput)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDateRangeInput,\n    selectors: [[\"mat-date-range-input\"]],\n    hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"],\n    hostVars: 8,\n    hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n        i0.ɵɵclassProp(\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n      }\n    },\n    inputs: {\n      rangePicker: \"rangePicker\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      dateFilter: \"dateFilter\",\n      min: \"min\",\n      max: \"max\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      separator: \"separator\",\n      comparisonStart: \"comparisonStart\",\n      comparisonEnd: \"comparisonEnd\"\n    },\n    exportAs: [\"matDateRangeInput\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatDateRangeInput\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c6,\n    decls: 11,\n    vars: 5,\n    consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-wrapper\", \"mat-date-range-input-end-wrapper\"]],\n    template: function MatDateRangeInput_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c5);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) {\n          return ctx._updateFocus($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementStart(3, \"span\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"span\", 3);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵprojection(8, 1);\n        i0.ɵɵelementStart(9, \"span\", 2);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx._getInputMirrorValue(\"start\"));\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(ctx.separator);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx._getInputMirrorValue(\"end\"));\n      }\n    },\n    dependencies: [CdkMonitorFocus],\n    styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px;color:var(--mat-datepicker-range-input-separator-color, var(--mat-sys-on-surface))}.mat-form-field-disabled .mat-date-range-input-separator{color:var(--mat-datepicker-range-input-disabled-state-separator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}._mat-animation-noopable .mat-date-range-input-separator{transition:none}.mat-date-range-input-separator-hidden{-webkit-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-end-wrapper{flex-grow:1}.mat-date-range-input-inner{position:absolute;top:0;left:0;font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%;height:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner[disabled]{color:var(--mat-datepicker-range-input-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}@media(forced-colors: active){.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}@media(forced-colors: active){.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}@media(forced-colors: active){.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}@media(forced-colors: active){.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}}._mat-animation-noopable .mat-date-range-input-inner::placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-moz-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner:-ms-input-placeholder{transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-mdc-form-field-type-mat-date-range-input .mat-mdc-form-field-infix{width:200px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDateRangeInput, [{\n    type: Component,\n    args: [{\n      selector: 'mat-date-range-input',\n      exportAs: 'matDateRangeInput',\n      host: {\n        'class': 'mat-date-range-input',\n        '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n        '[class.mat-date-range-input-required]': 'required',\n        '[attr.id]': 'id',\n        'role': 'group',\n        '[attr.aria-labelledby]': '_getAriaLabelledby()',\n        '[attr.aria-describedby]': '_ariaDescribedBy',\n        // Used by the test harness to tie this input to its calendar. We can't depend on\n        // `aria-owns` for this, because it's only defined while the calendar is open.\n        '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatDateRangeInput\n      }],\n      imports: [CdkMonitorFocus],\n      template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue('start')}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-wrapper mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue('end')}}</span>\\n  </div>\\n</div>\\n\\n\",\n      styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px;color:var(--mat-datepicker-range-input-separator-color, var(--mat-sys-on-surface))}.mat-form-field-disabled .mat-date-range-input-separator{color:var(--mat-datepicker-range-input-disabled-state-separator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}._mat-animation-noopable .mat-date-range-input-separator{transition:none}.mat-date-range-input-separator-hidden{-webkit-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-end-wrapper{flex-grow:1}.mat-date-range-input-inner{position:absolute;top:0;left:0;font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%;height:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner[disabled]{color:var(--mat-datepicker-range-input-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}@media(forced-colors: active){.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}@media(forced-colors: active){.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}@media(forced-colors: active){.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}@media(forced-colors: active){.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}}._mat-animation-noopable .mat-date-range-input-inner::placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-moz-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner:-ms-input-placeholder{transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-mdc-form-field-type-mat-date-range-input .mat-mdc-form-field-infix{width:200px}\\n\"]\n    }]\n  }], () => [], {\n    rangePicker: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    separator: [{\n      type: Input\n    }],\n    comparisonStart: [{\n      type: Input\n    }],\n    comparisonEnd: [{\n      type: Input\n    }]\n  });\n})();\n\n// This file contains the `_computeAriaAccessibleName` function, which computes what the *expected*\n// ARIA accessible name would be for a given element. Implements a subset of ARIA specification\n// [Accessible Name and Description Computation 1.2](https://www.w3.org/TR/accname-1.2/).\n//\n// Specification accname-1.2 can be summarized by returning the result of the first method\n// available.\n//\n//  1. `aria-labelledby` attribute\n//     ```\n//       <!-- example using aria-labelledby-->\n//       <label id='label-id'>Start Date</label>\n//       <input aria-labelledby='label-id'/>\n//     ```\n//  2. `aria-label` attribute (e.g. `<input aria-label=\"Departure\"/>`)\n//  3. Label with `for`/`id`\n//     ```\n//       <!-- example using for/id -->\n//       <label for=\"current-node\">Label</label>\n//       <input id=\"current-node\"/>\n//     ```\n//  4. `placeholder` attribute (e.g. `<input placeholder=\"06/03/1990\"/>`)\n//  5. `title` attribute (e.g. `<input title=\"Check-In\"/>`)\n//  6. text content\n//     ```\n//       <!-- example using text content -->\n//       <label for=\"current-node\"><span>Departure</span> Date</label>\n//       <input id=\"current-node\"/>\n//     ```\n/**\n * Computes the *expected* ARIA accessible name for argument element based on [accname-1.2\n * specification](https://www.w3.org/TR/accname-1.2/). Implements a subset of accname-1.2,\n * and should only be used for the Datepicker's specific use case.\n *\n * Intended use:\n * This is not a general use implementation. Only implements the parts of accname-1.2 that are\n * required for the Datepicker's specific use case. This function is not intended for any other\n * use.\n *\n * Limitations:\n *  - Only covers the needs of `matStartDate` and `matEndDate`. Does not support other use cases.\n *  - See NOTES's in implementation for specific details on what parts of the accname-1.2\n *  specification are not implemented.\n *\n *  @param element {HTMLInputElement} native &lt;input/&gt; element of `matStartDate` or\n *  `matEndDate` component. Corresponds to the 'Root Element' from accname-1.2\n *\n *  @return expected ARIA accessible name of argument &lt;input/&gt;\n */\nfunction _computeAriaAccessibleName(element) {\n  return _computeAriaAccessibleNameInternal(element, true);\n}\n/**\n * Determine if argument node is an Element based on `nodeType` property. This function is safe to\n * use with server-side rendering.\n */\nfunction ssrSafeIsElement(node) {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Determine if argument node is an HTMLInputElement based on `nodeName` property. This funciton is\n * safe to use with server-side rendering.\n */\nfunction ssrSafeIsHTMLInputElement(node) {\n  return node.nodeName === 'INPUT';\n}\n/**\n * Determine if argument node is an HTMLTextAreaElement based on `nodeName` property. This\n * funciton is safe to use with server-side rendering.\n */\nfunction ssrSafeIsHTMLTextAreaElement(node) {\n  return node.nodeName === 'TEXTAREA';\n}\n/**\n * Calculate the expected ARIA accessible name for given DOM Node. Given DOM Node may be either the\n * \"Root node\" passed to `_computeAriaAccessibleName` or \"Current node\" as result of recursion.\n *\n * @return the accessible name of argument DOM Node\n *\n * @param currentNode node to determine accessible name of\n * @param isDirectlyReferenced true if `currentNode` is the root node to calculate ARIA accessible\n * name of. False if it is a result of recursion.\n */\nfunction _computeAriaAccessibleNameInternal(currentNode, isDirectlyReferenced) {\n  // NOTE: this differs from accname-1.2 specification.\n  //  - Does not implement Step 1. of accname-1.2: '''If `currentNode`'s role prohibits naming,\n  //    return the empty string (\"\")'''.\n  //  - Does not implement Step 2.A. of accname-1.2: '''if current node is hidden and not directly\n  //    referenced by aria-labelledby... return the empty string.'''\n  // acc-name-1.2 Step 2.B.: aria-labelledby\n  if (ssrSafeIsElement(currentNode) && isDirectlyReferenced) {\n    const labelledbyIds = currentNode.getAttribute?.('aria-labelledby')?.split(/\\s+/g) || [];\n    const validIdRefs = labelledbyIds.reduce((validIds, id) => {\n      const elem = document.getElementById(id);\n      if (elem) {\n        validIds.push(elem);\n      }\n      return validIds;\n    }, []);\n    if (validIdRefs.length) {\n      return validIdRefs.map(idRef => {\n        return _computeAriaAccessibleNameInternal(idRef, false);\n      }).join(' ');\n    }\n  }\n  // acc-name-1.2 Step 2.C.: aria-label\n  if (ssrSafeIsElement(currentNode)) {\n    const ariaLabel = currentNode.getAttribute('aria-label')?.trim();\n    if (ariaLabel) {\n      return ariaLabel;\n    }\n  }\n  // acc-name-1.2 Step 2.D. attribute or element that defines a text alternative\n  //\n  // NOTE: this differs from accname-1.2 specification.\n  // Only implements Step 2.D. for `<label>`,`<input/>`, and `<textarea/>` element. Does not\n  // implement other elements that have an attribute or element that defines a text alternative.\n  if (ssrSafeIsHTMLInputElement(currentNode) || ssrSafeIsHTMLTextAreaElement(currentNode)) {\n    // use label with a `for` attribute referencing the current node\n    if (currentNode.labels?.length) {\n      return Array.from(currentNode.labels).map(x => _computeAriaAccessibleNameInternal(x, false)).join(' ');\n    }\n    // use placeholder if available\n    const placeholder = currentNode.getAttribute('placeholder')?.trim();\n    if (placeholder) {\n      return placeholder;\n    }\n    // use title if available\n    const title = currentNode.getAttribute('title')?.trim();\n    if (title) {\n      return title;\n    }\n  }\n  // NOTE: this differs from accname-1.2 specification.\n  //  - does not implement acc-name-1.2 Step 2.E.: '''if the current node is a control embedded\n  //     within the label... then include the embedded control as part of the text alternative in\n  //     the following manner...'''. Step 2E applies to embedded controls such as textbox, listbox,\n  //     range, etc.\n  //  - does not implement acc-name-1.2 step 2.F.: check that '''role allows name from content''',\n  //    which applies to `currentNode` and its children.\n  //  - does not implement acc-name-1.2 Step 2.F.ii.: '''Check for CSS generated textual content'''\n  //    (e.g. :before and :after).\n  //  - does not implement acc-name-1.2 Step 2.I.: '''if the current node has a Tooltip attribute,\n  //    return its value'''\n  // Return text content with whitespace collapsed into a single space character. Accomplish\n  // acc-name-1.2 steps 2F, 2G, and 2H.\n  return (currentNode.textContent || '').replace(/\\s+/g, ' ').trim();\n}\n\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n  _rangeInput = inject(MatDateRangeInput);\n  _elementRef = inject(ElementRef);\n  _defaultErrorStateMatcher = inject(ErrorStateMatcher);\n  _injector = inject(Injector);\n  _parentForm = inject(NgForm, {\n    optional: true\n  });\n  _parentFormGroup = inject(FormGroupDirective, {\n    optional: true\n  });\n  /**\n   * Form control bound to this input part.\n   * @docs-private\n   */\n  ngControl;\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _errorStateTracker;\n  /** Object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /** Whether the input is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  constructor() {\n    super();\n    this._errorStateTracker = new _ErrorStateTracker(this._defaultErrorStateMatcher, null, this._parentFormGroup, this._parentForm, this.stateChanges);\n  }\n  ngOnInit() {\n    // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n    // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n    // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n    // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n    // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n    // everything has been resolved.\n    const ngControl = this._injector.get(NgControl, null, {\n      optional: true,\n      self: true\n    });\n    if (ngControl) {\n      this.ngControl = ngControl;\n      this._errorStateTracker.ngControl = ngControl;\n    }\n  }\n  ngAfterContentInit() {\n    this._register();\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n  /** Gets whether the input is empty. */\n  isEmpty() {\n    return this._elementRef.nativeElement.value.length === 0;\n  }\n  /** Gets the placeholder of the input. */\n  _getPlaceholder() {\n    return this._elementRef.nativeElement.placeholder;\n  }\n  /** Focuses the input. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  /** Gets the value that should be used when mirroring the input's size. */\n  getMirrorValue() {\n    const element = this._elementRef.nativeElement;\n    const value = element.value;\n    return value.length > 0 ? value : element.placeholder;\n  }\n  /** Refreshes the error state of the input. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** Handles `input` events on the input element. */\n  _onInput(value) {\n    super._onInput(value);\n    this._rangeInput._handleChildValueChange();\n  }\n  /** Opens the datepicker associated with the input. */\n  _openPopup() {\n    this._rangeInput._openDatepicker();\n  }\n  /** Gets the minimum date from the range input. */\n  _getMinDate() {\n    return this._rangeInput.min;\n  }\n  /** Gets the maximum date from the range input. */\n  _getMaxDate() {\n    return this._rangeInput.max;\n  }\n  /** Gets the date filter function from the range input. */\n  _getDateFilter() {\n    return this._rangeInput.dateFilter;\n  }\n  _parentDisabled() {\n    return this._rangeInput._groupDisabled;\n  }\n  _shouldHandleChangeEvent({\n    source\n  }) {\n    return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n  }\n  _assignValueProgrammatically(value) {\n    super._assignValueProgrammatically(value);\n    const opposite = this === this._rangeInput._startInput ? this._rangeInput._endInput : this._rangeInput._startInput;\n    opposite?._validatorOnChange();\n  }\n  _formatValue(value) {\n    super._formatValue(value);\n    // Any time the input value is reformatted we need to tell the parent.\n    this._rangeInput._handleChildValueChange();\n  }\n  /** return the ARIA accessible name of the input element */\n  _getAccessibleName() {\n    return _computeAriaAccessibleName(this._elementRef.nativeElement);\n  }\n  static ɵfac = function MatDateRangeInputPartBase_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDateRangeInputPartBase)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDateRangeInputPartBase,\n    inputs: {\n      errorStateMatcher: \"errorStateMatcher\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDateRangeInputPartBase, [{\n    type: Directive\n  }], () => [], {\n    errorStateMatcher: [{\n      type: Input\n    }]\n  });\n})();\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends MatDateRangeInputPartBase {\n  /** Validator that checks that the start date isn't after the end date. */\n  _startValidator = control => {\n    const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const end = this._model ? this._model.selection.end : null;\n    return !start || !end || this._dateAdapter.compareDate(start, end) <= 0 ? null : {\n      'matStartDateInvalid': {\n        'end': end,\n        'actual': start\n      }\n    };\n  };\n  _validator = Validators.compose([...super._getValidators(), this._startValidator]);\n  _register() {\n    this._rangeInput._startInput = this;\n  }\n  _getValueFromModel(modelValue) {\n    return modelValue.start;\n  }\n  _shouldHandleChangeEvent(change) {\n    if (!super._shouldHandleChangeEvent(change)) {\n      return false;\n    } else {\n      return !change.oldValue?.start ? !!change.selection.start : !change.selection.start || !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n    }\n  }\n  _assignValueToModel(value) {\n    if (this._model) {\n      const range = new DateRange(value, this._model.selection.end);\n      this._model.updateSelection(range, this);\n      this._rangeInput._handleChildValueChange();\n    }\n  }\n  _onKeydown(event) {\n    const endInput = this._rangeInput._endInput;\n    const element = this._elementRef.nativeElement;\n    const isLtr = this._dir?.value !== 'rtl';\n    // If the user hits RIGHT (LTR) when at the end of the input (and no\n    // selection), move the cursor to the start of the end input.\n    if ((event.keyCode === RIGHT_ARROW && isLtr || event.keyCode === LEFT_ARROW && !isLtr) && element.selectionStart === element.value.length && element.selectionEnd === element.value.length) {\n      event.preventDefault();\n      endInput._elementRef.nativeElement.setSelectionRange(0, 0);\n      endInput.focus();\n    } else {\n      super._onKeydown(event);\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatStartDate_BaseFactory;\n    return function MatStartDate_Factory(__ngFactoryType__) {\n      return (ɵMatStartDate_BaseFactory || (ɵMatStartDate_BaseFactory = i0.ɵɵgetInheritedFactory(MatStartDate)))(__ngFactoryType__ || MatStartDate);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStartDate,\n    selectors: [[\"input\", \"matStartDate\", \"\"]],\n    hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"],\n    hostVars: 5,\n    hostBindings: function MatStartDate_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function MatStartDate_input_HostBindingHandler($event) {\n          return ctx._onInput($event.target.value);\n        })(\"change\", function MatStartDate_change_HostBindingHandler() {\n          return ctx._onChange();\n        })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) {\n          return ctx._onKeydown($event);\n        })(\"blur\", function MatStartDate_blur_HostBindingHandler() {\n          return ctx._onBlur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", ctx._rangeInput._ariaOwns ? ctx._rangeInput._ariaOwns() : (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n      }\n    },\n    outputs: {\n      dateChange: \"dateChange\",\n      dateInput: \"dateInput\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: MatStartDate,\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: MatStartDate,\n      multi: true\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStartDate, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matStartDate]',\n      host: {\n        'class': 'mat-start-date mat-date-range-input-inner',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(keydown)': '_onKeydown($event)',\n        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n        '[attr.aria-owns]': `_rangeInput._ariaOwns\n        ? _rangeInput._ariaOwns()\n        : (_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null`,\n        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n        '(blur)': '_onBlur()',\n        'type': 'text'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: MatStartDate,\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: MatStartDate,\n        multi: true\n      }],\n      // These need to be specified explicitly, because some tooling doesn't\n      // seem to pick them up from the base class. See #20932.\n      outputs: ['dateChange', 'dateInput']\n    }]\n  }], null, null);\n})();\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends MatDateRangeInputPartBase {\n  /** Validator that checks that the end date isn't before the start date. */\n  _endValidator = control => {\n    const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const start = this._model ? this._model.selection.start : null;\n    return !end || !start || this._dateAdapter.compareDate(end, start) >= 0 ? null : {\n      'matEndDateInvalid': {\n        'start': start,\n        'actual': end\n      }\n    };\n  };\n  _register() {\n    this._rangeInput._endInput = this;\n  }\n  _validator = Validators.compose([...super._getValidators(), this._endValidator]);\n  _getValueFromModel(modelValue) {\n    return modelValue.end;\n  }\n  _shouldHandleChangeEvent(change) {\n    if (!super._shouldHandleChangeEvent(change)) {\n      return false;\n    } else {\n      return !change.oldValue?.end ? !!change.selection.end : !change.selection.end || !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n    }\n  }\n  _assignValueToModel(value) {\n    if (this._model) {\n      const range = new DateRange(this._model.selection.start, value);\n      this._model.updateSelection(range, this);\n    }\n  }\n  _moveCaretToEndOfStartInput() {\n    const startInput = this._rangeInput._startInput._elementRef.nativeElement;\n    const value = startInput.value;\n    if (value.length > 0) {\n      startInput.setSelectionRange(value.length, value.length);\n    }\n    startInput.focus();\n  }\n  _onKeydown(event) {\n    const element = this._elementRef.nativeElement;\n    const isLtr = this._dir?.value !== 'rtl';\n    // If the user is pressing backspace on an empty end input, move focus back to the start.\n    if (event.keyCode === BACKSPACE && !element.value) {\n      this._moveCaretToEndOfStartInput();\n    }\n    // If the user hits LEFT (LTR) when at the start of the input (and no\n    // selection), move the cursor to the end of the start input.\n    else if ((event.keyCode === LEFT_ARROW && isLtr || event.keyCode === RIGHT_ARROW && !isLtr) && element.selectionStart === 0 && element.selectionEnd === 0) {\n      event.preventDefault();\n      this._moveCaretToEndOfStartInput();\n    } else {\n      super._onKeydown(event);\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatEndDate_BaseFactory;\n    return function MatEndDate_Factory(__ngFactoryType__) {\n      return (ɵMatEndDate_BaseFactory || (ɵMatEndDate_BaseFactory = i0.ɵɵgetInheritedFactory(MatEndDate)))(__ngFactoryType__ || MatEndDate);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatEndDate,\n    selectors: [[\"input\", \"matEndDate\", \"\"]],\n    hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"],\n    hostVars: 5,\n    hostBindings: function MatEndDate_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function MatEndDate_input_HostBindingHandler($event) {\n          return ctx._onInput($event.target.value);\n        })(\"change\", function MatEndDate_change_HostBindingHandler() {\n          return ctx._onChange();\n        })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) {\n          return ctx._onKeydown($event);\n        })(\"blur\", function MatEndDate_blur_HostBindingHandler() {\n          return ctx._onBlur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", ctx._rangeInput._ariaOwns ? ctx._rangeInput._ariaOwns() : (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n      }\n    },\n    outputs: {\n      dateChange: \"dateChange\",\n      dateInput: \"dateInput\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: MatEndDate,\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: MatEndDate,\n      multi: true\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatEndDate, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matEndDate]',\n      host: {\n        'class': 'mat-end-date mat-date-range-input-inner',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(keydown)': '_onKeydown($event)',\n        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n        '[attr.aria-owns]': `_rangeInput._ariaOwns\n        ? _rangeInput._ariaOwns()\n        : (_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null`,\n        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n        '(blur)': '_onBlur()',\n        'type': 'text'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: MatEndDate,\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: MatEndDate,\n        multi: true\n      }],\n      // These need to be specified explicitly, because some tooling doesn't\n      // seem to pick them up from the base class. See #20932.\n      outputs: ['dateChange', 'dateInput']\n    }]\n  }], null, null);\n})();\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n  _forwardContentValues(instance) {\n    super._forwardContentValues(instance);\n    const input = this.datepickerInput;\n    if (input) {\n      instance.comparisonStart = input.comparisonStart;\n      instance.comparisonEnd = input.comparisonEnd;\n      instance.startDateAccessibleName = input._getStartDateAccessibleName();\n      instance.endDateAccessibleName = input._getEndDateAccessibleName();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatDateRangePicker_BaseFactory;\n    return function MatDateRangePicker_Factory(__ngFactoryType__) {\n      return (ɵMatDateRangePicker_BaseFactory || (ɵMatDateRangePicker_BaseFactory = i0.ɵɵgetInheritedFactory(MatDateRangePicker)))(__ngFactoryType__ || MatDateRangePicker);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDateRangePicker,\n    selectors: [[\"mat-date-range-picker\"]],\n    exportAs: [\"matDateRangePicker\"],\n    features: [i0.ɵɵProvidersFeature([MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER, {\n      provide: MatDatepickerBase,\n      useExisting: MatDateRangePicker\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function MatDateRangePicker_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDateRangePicker, [{\n    type: Component,\n    args: [{\n      selector: 'mat-date-range-picker',\n      template: '',\n      exportAs: 'matDateRangePicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER, {\n        provide: MatDatepickerBase,\n        useExisting: MatDateRangePicker\n      }]\n    }]\n  }], null, null);\n})();\n\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n  _datepicker = inject(MatDatepickerBase);\n  constructor() {}\n  _applySelection() {\n    this._datepicker._applyPendingSelection();\n    this._datepicker.close();\n  }\n  static ɵfac = function MatDatepickerApply_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerApply)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDatepickerApply,\n    selectors: [[\"\", \"matDatepickerApply\", \"\"], [\"\", \"matDateRangePickerApply\", \"\"]],\n    hostBindings: function MatDatepickerApply_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatDatepickerApply_click_HostBindingHandler() {\n          return ctx._applySelection();\n        });\n      }\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerApply, [{\n    type: Directive,\n    args: [{\n      selector: '[matDatepickerApply], [matDateRangePickerApply]',\n      host: {\n        '(click)': '_applySelection()'\n      }\n    }]\n  }], () => [], null);\n})();\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n  _datepicker = inject(MatDatepickerBase);\n  constructor() {}\n  static ɵfac = function MatDatepickerCancel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerCancel)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDatepickerCancel,\n    selectors: [[\"\", \"matDatepickerCancel\", \"\"], [\"\", \"matDateRangePickerCancel\", \"\"]],\n    hostBindings: function MatDatepickerCancel_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatDatepickerCancel_click_HostBindingHandler() {\n          return ctx._datepicker.close();\n        });\n      }\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerCancel, [{\n    type: Directive,\n    args: [{\n      selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n      host: {\n        '(click)': '_datepicker.close()'\n      }\n    }]\n  }], () => [], null);\n})();\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n  _datepicker = inject(MatDatepickerBase);\n  _viewContainerRef = inject(ViewContainerRef);\n  _template;\n  _portal;\n  constructor() {}\n  ngAfterViewInit() {\n    this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    this._datepicker.registerActions(this._portal);\n  }\n  ngOnDestroy() {\n    this._datepicker.removeActions(this._portal);\n    // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n    if (this._portal && this._portal.isAttached) {\n      this._portal?.detach();\n    }\n  }\n  static ɵfac = function MatDatepickerActions_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerActions)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDatepickerActions,\n    selectors: [[\"mat-datepicker-actions\"], [\"mat-date-range-picker-actions\"]],\n    viewQuery: function MatDatepickerActions_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._template = _t.first);\n      }\n    },\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    consts: [[1, \"mat-datepicker-actions\"]],\n    template: function MatDatepickerActions_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatDatepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n      }\n    },\n    styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerActions, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-actions, mat-date-range-picker-actions',\n      template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n    }]\n  }], () => [], {\n    _template: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }]\n  });\n})();\nclass MatDatepickerModule {\n  static ɵfac = function MatDatepickerModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDatepickerModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatDatepickerModule,\n    imports: [MatButtonModule, OverlayModule, A11yModule, PortalModule, MatCommonModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply],\n    exports: [CdkScrollableModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    imports: [MatButtonModule, OverlayModule, A11yModule, PortalModule, MatCommonModule, MatDatepickerContent, MatDatepickerToggle, MatCalendarHeader, CdkScrollableModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatButtonModule, OverlayModule, A11yModule, PortalModule, MatCommonModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply],\n      exports: [CdkScrollableModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply],\n      providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matDatepickerAnimations = {\n  // Represents:\n  // trigger('transformPanel', [\n  //   transition(\n  //     'void => enter-dropdown',\n  //     animate(\n  //       '120ms cubic-bezier(0, 0, 0.2, 1)',\n  //       keyframes([\n  //         style({opacity: 0, transform: 'scale(1, 0.8)'}),\n  //         style({opacity: 1, transform: 'scale(1, 1)'}),\n  //       ]),\n  //     ),\n  //   ),\n  //   transition(\n  //     'void => enter-dialog',\n  //     animate(\n  //       '150ms cubic-bezier(0, 0, 0.2, 1)',\n  //       keyframes([\n  //         style({opacity: 0, transform: 'scale(0.7)'}),\n  //         style({transform: 'none', opacity: 1}),\n  //       ]),\n  //     ),\n  //   ),\n  //   transition('* => void', animate('100ms linear', style({opacity: 0}))),\n  // ])\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: {\n    type: 7,\n    name: 'transformPanel',\n    definitions: [{\n      type: 1,\n      expr: 'void => enter-dropdown',\n      animation: {\n        type: 4,\n        styles: {\n          type: 5,\n          steps: [{\n            type: 6,\n            styles: {\n              opacity: 0,\n              transform: 'scale(1, 0.8)'\n            },\n            offset: null\n          }, {\n            type: 6,\n            styles: {\n              opacity: 1,\n              transform: 'scale(1, 1)'\n            },\n            offset: null\n          }]\n        },\n        timings: '120ms cubic-bezier(0, 0, 0.2, 1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: 'void => enter-dialog',\n      animation: {\n        type: 4,\n        styles: {\n          type: 5,\n          steps: [{\n            type: 6,\n            styles: {\n              opacity: 0,\n              transform: 'scale(0.7)'\n            },\n            offset: null\n          }, {\n            type: 6,\n            styles: {\n              transform: 'none',\n              opacity: 1\n            },\n            offset: null\n          }]\n        },\n        timings: '150ms cubic-bezier(0, 0, 0.2, 1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: '* => void',\n      animation: {\n        type: 4,\n        styles: {\n          type: 6,\n          styles: {\n            opacity: 0\n          },\n          offset: null\n        },\n        timings: '100ms linear'\n      },\n      options: null\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('fadeInCalendar', [\n  //   state('void', style({opacity: 0})),\n  //   state('enter', style({opacity: 1})),\n  //   // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n  //   // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n  //   transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n  // ])\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: {\n    type: 7,\n    name: 'fadeInCalendar',\n    definitions: [{\n      type: 0,\n      name: 'void',\n      styles: {\n        type: 6,\n        styles: {\n          opacity: 0\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'enter',\n      styles: {\n        type: 6,\n        styles: {\n          opacity: 1\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'void => *',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'\n      },\n      options: null\n    }],\n    options: {}\n  }\n};\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n","export { _ as _MatInternalFormField } from './internal-form-field-grv62mCZ.mjs';\nimport * as i0 from '@angular/core';\nimport { Version, inject, Injectable, NgModule } from '@angular/core';\nexport { a as MATERIAL_SANITY_CHECKS, M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nexport { _ as _ErrorStateTracker } from './error-state-Dtb1IHM-.mjs';\nimport { D as DateAdapter, M as MAT_DATE_LOCALE, a as MAT_DATE_FORMATS } from './date-formats-K6TQue-Y.mjs';\nexport { b as MAT_DATE_LOCALE_FACTORY } from './date-formats-K6TQue-Y.mjs';\nexport { E as ErrorStateMatcher, S as ShowOnDirtyErrorStateMatcher } from './error-options-Dm2JJUbF.mjs';\nexport { _ as _StructuralStylesLoader } from './structural-styles-BQUT6wsL.mjs';\nexport { M as MatLine, a as MatLineModule, s as setLines } from './line-Bm3zUbBF.mjs';\nexport { d as MAT_OPTGROUP, c as MAT_OPTION_PARENT_COMPONENT, a as MatOptgroup, M as MatOption, e as MatOptionSelectionChange, _ as _countGroupLabelsBeforeOption, b as _getOptionScrollPosition } from './option-ChV6uQgD.mjs';\nexport { M as MatOptionModule } from './index-DOxJc1m4.mjs';\nexport { M as MatRippleLoader } from './ripple-loader-Ce3DAhPW.mjs';\nexport { a as MAT_RIPPLE_GLOBAL_OPTIONS, M as MatRipple, c as RippleRef, R as RippleRenderer, b as RippleState, d as defaultRippleAnimationConfig } from './ripple-BT3tzh6F.mjs';\nexport { M as MatRippleModule } from './index-SYVYjXwK.mjs';\nexport { M as MatPseudoCheckbox } from './pseudo-checkbox-CJ7seqQH.mjs';\nexport { M as MatPseudoCheckboxModule } from './pseudo-checkbox-module-CAX2sutq.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport '@angular/cdk/keycodes';\nimport '@angular/cdk/private';\nimport '@angular/common';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\n\n/** Current version of Angular Material. */\nconst VERSION = new Version('19.2.18');\n\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings with an out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Matches a time string. Supported formats:\n * - {{hours}}:{{minutes}}\n * - {{hours}}:{{minutes}}:{{seconds}}\n * - {{hours}}:{{minutes}} AM/PM\n * - {{hours}}:{{minutes}}:{{seconds}} AM/PM\n * - {{hours}}.{{minutes}}\n * - {{hours}}.{{minutes}}.{{seconds}}\n * - {{hours}}.{{minutes}} AM/PM\n * - {{hours}}.{{minutes}}.{{seconds}} AM/PM\n */\nconst TIME_REGEX = /^(\\d?\\d)[:.](\\d?\\d)(?:[:.](\\d?\\d))?\\s*(AM|PM)?$/i;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n  /**\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 14.0.0\n   */\n  useUtcForDisplay = false;\n  /** The injected locale. */\n  _matDateLocale = inject(MAT_DATE_LOCALE, {\n    optional: true\n  });\n  constructor() {\n    super();\n    const matDateLocale = inject(MAT_DATE_LOCALE, {\n      optional: true\n    });\n    if (matDateLocale !== undefined) {\n      this._matDateLocale = matDateLocale;\n    }\n    super.setLocale(this._matDateLocale);\n  }\n  getYear(date) {\n    return date.getFullYear();\n  }\n  getMonth(date) {\n    return date.getMonth();\n  }\n  getDate(date) {\n    return date.getDate();\n  }\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n  getMonthNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      month: style,\n      timeZone: 'utc'\n    });\n    return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n  }\n  getDateNames() {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      day: 'numeric',\n      timeZone: 'utc'\n    });\n    return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getDayOfWeekNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      weekday: style,\n      timeZone: 'utc'\n    });\n    return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getYearName(date) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      year: 'numeric',\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  getFirstDayOfWeek() {\n    // At the time of writing `Intl.Locale` isn't available\n    // in the internal types so we need to cast to `any`.\n    if (typeof Intl !== 'undefined' && Intl.Locale) {\n      const locale = new Intl.Locale(this.locale);\n      // Some browsers implement a `getWeekInfo` method while others have a `weekInfo` getter.\n      // Note that this isn't supported in all browsers so we need to null check it.\n      const firstDay = (locale.getWeekInfo?.() || locale.weekInfo)?.firstDay ?? 0;\n      // `weekInfo.firstDay` is a number between 1 and 7 where, starting from Monday,\n      // whereas our representation is 0 to 6 where 0 is Sunday so we need to normalize it.\n      return firstDay === 7 ? 0 : firstDay;\n    }\n    // Default to Sunday if the browser doesn't provide the week information.\n    return 0;\n  }\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n  clone(date) {\n    return new Date(date.getTime());\n  }\n  createDate(year, month, date) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n  today() {\n    return new Date();\n  }\n  parse(value, parseFormat) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      ...displayFormat,\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n  addCalendarMonths(date, months) {\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n    return newDate;\n  }\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n  invalid() {\n    return new Date(NaN);\n  }\n  setTime(target, hours, minutes, seconds) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!inRange(hours, 0, 23)) {\n        throw Error(`Invalid hours \"${hours}\". Hours value must be between 0 and 23.`);\n      }\n      if (!inRange(minutes, 0, 59)) {\n        throw Error(`Invalid minutes \"${minutes}\". Minutes value must be between 0 and 59.`);\n      }\n      if (!inRange(seconds, 0, 59)) {\n        throw Error(`Invalid seconds \"${seconds}\". Seconds value must be between 0 and 59.`);\n      }\n    }\n    const clone = this.clone(target);\n    clone.setHours(hours, minutes, seconds, 0);\n    return clone;\n  }\n  getHours(date) {\n    return date.getHours();\n  }\n  getMinutes(date) {\n    return date.getMinutes();\n  }\n  getSeconds(date) {\n    return date.getSeconds();\n  }\n  parseTime(userValue, parseFormat) {\n    if (typeof userValue !== 'string') {\n      return userValue instanceof Date ? new Date(userValue.getTime()) : null;\n    }\n    const value = userValue.trim();\n    if (value.length === 0) {\n      return null;\n    }\n    // Attempt to parse the value directly.\n    let result = this._parseTimeString(value);\n    // Some locales add extra characters around the time, but are otherwise parseable\n    // (e.g. `00:05 ч.` in bg-BG). Try replacing all non-number and non-colon characters.\n    if (result === null) {\n      const withoutExtras = value.replace(/[^0-9:(AM|PM)]/gi, '').trim();\n      if (withoutExtras.length > 0) {\n        result = this._parseTimeString(withoutExtras);\n      }\n    }\n    return result || this.invalid();\n  }\n  addSeconds(date, amount) {\n    return new Date(date.getTime() + amount * 1000);\n  }\n  /** Creates a date but allows the month and date to overflow. */\n  _createDateWithOverflow(year, month, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  _format(dtf, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n  /**\n   * Attempts to parse a time string into a date object. Returns null if it cannot be parsed.\n   * @param value Time string to parse.\n   */\n  _parseTimeString(value) {\n    // Note: we can technically rely on the browser for the time parsing by generating\n    // an ISO string and appending the string to the end of it. We don't do it, because\n    // browsers aren't consistent in what they support. Some examples:\n    // - Safari doesn't support AM/PM.\n    // - Firefox produces a valid date object if the time string has overflows (e.g. 12:75) while\n    //   other browsers produce an invalid date.\n    // - Safari doesn't allow padded numbers.\n    const parsed = value.toUpperCase().match(TIME_REGEX);\n    if (parsed) {\n      let hours = parseInt(parsed[1]);\n      const minutes = parseInt(parsed[2]);\n      let seconds = parsed[3] == null ? undefined : parseInt(parsed[3]);\n      const amPm = parsed[4];\n      if (hours === 12) {\n        hours = amPm === 'AM' ? 0 : hours;\n      } else if (amPm === 'PM') {\n        hours += 12;\n      }\n      if (inRange(hours, 0, 23) && inRange(minutes, 0, 59) && (seconds == null || inRange(seconds, 0, 59))) {\n        return this.setTime(this.today(), hours, minutes, seconds || 0);\n      }\n    }\n    return null;\n  }\n  static ɵfac = function NativeDateAdapter_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NativeDateAdapter)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NativeDateAdapter,\n    factory: NativeDateAdapter.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], () => [], null);\n})();\n/** Checks whether a number is within a certain range. */\nfunction inRange(value, min, max) {\n  return !isNaN(value) && value >= min && value <= max;\n}\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null,\n    timeInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    timeInput: {\n      hour: 'numeric',\n      minute: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    },\n    timeOptionLabel: {\n      hour: 'numeric',\n      minute: 'numeric'\n    }\n  }\n};\nclass NativeDateModule {\n  static ɵfac = function NativeDateModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NativeDateModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NativeDateModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [{\n      provide: DateAdapter,\n      useClass: NativeDateAdapter\n    }]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\nclass MatNativeDateModule {\n  static ɵfac = function MatNativeDateModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatNativeDateModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatNativeDateModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideNativeDateAdapter()]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [provideNativeDateAdapter()]\n    }]\n  }], null, null);\n})();\nfunction provideNativeDateAdapter(formats = MAT_NATIVE_DATE_FORMATS) {\n  return [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }, {\n    provide: MAT_DATE_FORMATS,\n    useValue: formats\n  }];\n}\nexport { AnimationCurves, AnimationDurations, DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_NATIVE_DATE_FORMATS, MatNativeDateModule, NativeDateAdapter, NativeDateModule, VERSION, provideNativeDateAdapter };\n","import { c as MAT_OPTION_PARENT_COMPONENT, M as MatOption, d as MAT_OPTGROUP, e as MatOptionSelectionChange, _ as _countGroupLabelsBeforeOption, b as _getOptionScrollPosition } from './option-ChV6uQgD.mjs';\nconst _c0 = [\"panel\"];\nconst _c1 = [\"*\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1, 0);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const formFieldId_r1 = ctx.id;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1._classList);\n    i0.ɵɵclassProp(\"mat-mdc-autocomplete-visible\", ctx_r1.showPanel)(\"mat-mdc-autocomplete-hidden\", !ctx_r1.showPanel)(\"mat-autocomplete-panel-animations-enabled\", !ctx_r1._animationsDisabled)(\"mat-primary\", ctx_r1._color === \"primary\")(\"mat-accent\", ctx_r1._color === \"accent\")(\"mat-warn\", ctx_r1._color === \"warn\");\n    i0.ɵɵproperty(\"id\", ctx_r1.id);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby(formFieldId_r1));\n  }\n}\nexport { a as MatOptgroup } from './option-ChV6uQgD.mjs';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, ANIMATION_MODULE_TYPE, EventEmitter, booleanAttribute, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ContentChildren, Input, Output, Directive, forwardRef, EnvironmentInjector, ViewContainerRef, NgZone, Renderer2, afterNextRender, NgModule } from '@angular/core';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { _IdGenerator, ActiveDescendantKeyManager, removeAriaReferencedId, addAriaReferencedId } from '@angular/cdk/a11y';\nimport { Platform, _getFocusedElementPierceShadowDom, _getEventTarget } from '@angular/cdk/platform';\nimport { Subscription, Subject, merge, of, defer, Observable } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { hasModifierKey, ESCAPE, ENTER, TAB, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { filter, map, startWith, switchMap, tap, delay, take } from 'rxjs/operators';\nimport { h as MAT_FORM_FIELD } from './form-field-DqPi4knt.mjs';\nimport { M as MatOptionModule } from './index-DOxJc1m4.mjs';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport './ripple-BT3tzh6F.mjs';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/private';\nimport './pseudo-checkbox-CJ7seqQH.mjs';\nimport './structural-styles-BQUT6wsL.mjs';\nimport '@angular/common';\nimport '@angular/cdk/observers/private';\nimport './index-SYVYjXwK.mjs';\nimport './pseudo-checkbox-module-CAX2sutq.mjs';\n\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n  source;\n  option;\n  constructor(/** Reference to the autocomplete panel that emitted the event. */\n  source, /** Option that was selected. */\n  option) {\n    this.source = source;\n    this.option = option;\n  }\n}\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n  providedIn: 'root',\n  factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    autoActiveFirstOption: false,\n    autoSelectActiveOption: false,\n    hideSingleSelectionIndicator: false,\n    requireSelection: false,\n    hasBackdrop: false\n  };\n}\n/** Autocomplete component. */\nclass MatAutocomplete {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _defaults = inject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS);\n  _animationsDisabled = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  }) === 'NoopAnimations';\n  _activeOptionChanges = Subscription.EMPTY;\n  /** Manages active item in option list based on key events. */\n  _keyManager;\n  /** Whether the autocomplete panel should be visible, depending on option length. */\n  showPanel = false;\n  /** Whether the autocomplete panel is open. */\n  get isOpen() {\n    return this._isOpen && this.showPanel;\n  }\n  _isOpen = false;\n  /** Latest trigger that opened the autocomplete. */\n  _latestOpeningTrigger;\n  /** @docs-private Sets the theme color of the panel. */\n  _setColor(value) {\n    this._color = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** @docs-private theme color of the panel */\n  _color;\n  // The @ViewChild query for TemplateRef here needs to be static because some code paths\n  // lead to the overlay being created before change detection has finished for this component.\n  // Notably, another component may trigger `focus` on the autocomplete-trigger.\n  /** @docs-private */\n  template;\n  /** Element for the panel containing the autocomplete options. */\n  panel;\n  /** Reference to all options within the autocomplete. */\n  options;\n  /** Reference to all option groups within the autocomplete. */\n  optionGroups;\n  /** Aria label of the autocomplete. */\n  ariaLabel;\n  /** Input that can be used to specify the `aria-labelledby` attribute. */\n  ariaLabelledby;\n  /** Function that maps an option's control value to its display value in the trigger. */\n  displayWith = null;\n  /**\n   * Whether the first option should be highlighted when the autocomplete panel is opened.\n   * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n   */\n  autoActiveFirstOption;\n  /** Whether the active option should be selected as the user is navigating. */\n  autoSelectActiveOption;\n  /**\n   * Whether the user is required to make a selection when they're interacting with the\n   * autocomplete. If the user moves away from the autocomplete without selecting an option from\n   * the list, the value will be reset. If the user opens the panel and closes it without\n   * interacting or selecting a value, the initial value will be kept.\n   */\n  requireSelection;\n  /**\n   * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n   * match the width of its host.\n   */\n  panelWidth;\n  /** Whether ripples are disabled within the autocomplete panel. */\n  disableRipple;\n  /** Event that is emitted whenever an option from the list is selected. */\n  optionSelected = new EventEmitter();\n  /** Event that is emitted when the autocomplete panel is opened. */\n  opened = new EventEmitter();\n  /** Event that is emitted when the autocomplete panel is closed. */\n  closed = new EventEmitter();\n  /** Emits whenever an option is activated. */\n  optionActivated = new EventEmitter();\n  /**\n   * Takes classes set on the host mat-autocomplete element and applies them to the panel\n   * inside the overlay container to allow for easy styling.\n   */\n  set classList(value) {\n    this._classList = value;\n    this._elementRef.nativeElement.className = '';\n  }\n  _classList;\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncParentProperties();\n  }\n  _hideSingleSelectionIndicator;\n  /** Syncs the parent state with the individual options. */\n  _syncParentProperties() {\n    if (this.options) {\n      for (const option of this.options) {\n        option._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n  id = inject(_IdGenerator).getId('mat-autocomplete-');\n  /**\n   * Tells any descendant `mat-optgroup` to use the inert a11y pattern.\n   * @docs-private\n   */\n  inertGroups;\n  constructor() {\n    const platform = inject(Platform);\n    // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n    // Safari using VoiceOver. We should occasionally check back to see whether the bug\n    // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n    // option altogether.\n    this.inertGroups = platform?.SAFARI || false;\n    this.autoActiveFirstOption = !!this._defaults.autoActiveFirstOption;\n    this.autoSelectActiveOption = !!this._defaults.autoSelectActiveOption;\n    this.requireSelection = !!this._defaults.requireSelection;\n    this._hideSingleSelectionIndicator = this._defaults.hideSingleSelectionIndicator ?? false;\n  }\n  ngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap().skipPredicate(this._skipPredicate);\n    this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n      if (this.isOpen) {\n        this.optionActivated.emit({\n          source: this,\n          option: this.options.toArray()[index] || null\n        });\n      }\n    });\n    // Set the initial visibility state.\n    this._setVisibility();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._activeOptionChanges.unsubscribe();\n  }\n  /**\n   * Sets the panel scrollTop. This allows us to manually scroll to display options\n   * above or below the fold, as they are not actually being focused when active.\n   */\n  _setScrollTop(scrollTop) {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n  /** Returns the panel's scrollTop. */\n  _getScrollTop() {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n  /** Panel should hide itself when the option list is empty. */\n  _setVisibility() {\n    this.showPanel = !!this.options?.length;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits the `select` event. */\n  _emitSelectEvent(option) {\n    const event = new MatAutocompleteSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n  /** Gets the aria-labelledby for the autocomplete panel. */\n  _getPanelAriaLabelledby(labelId) {\n    if (this.ariaLabel) {\n      return null;\n    }\n    const labelExpression = labelId ? labelId + ' ' : '';\n    return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n  }\n  // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n  // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n  // recommendation.\n  //\n  // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n  // makes a few exceptions for compound widgets.\n  //\n  // From [Developing a Keyboard Interface](\n  // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n  //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n  //   Listbox...\"\n  //\n  // The user can focus disabled options using the keyboard, but the user cannot click disabled\n  // options.\n  _skipPredicate() {\n    return false;\n  }\n  static ɵfac = function MatAutocomplete_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatAutocomplete)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatAutocomplete,\n    selectors: [[\"mat-autocomplete\"]],\n    contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n      }\n    },\n    viewQuery: function MatAutocomplete_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 7);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-autocomplete\"],\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      displayWith: \"displayWith\",\n      autoActiveFirstOption: [2, \"autoActiveFirstOption\", \"autoActiveFirstOption\", booleanAttribute],\n      autoSelectActiveOption: [2, \"autoSelectActiveOption\", \"autoSelectActiveOption\", booleanAttribute],\n      requireSelection: [2, \"requireSelection\", \"requireSelection\", booleanAttribute],\n      panelWidth: \"panelWidth\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      classList: [0, \"class\", \"classList\"],\n      hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute]\n    },\n    outputs: {\n      optionSelected: \"optionSelected\",\n      opened: \"opened\",\n      closed: \"closed\",\n      optionActivated: \"optionActivated\"\n    },\n    exportAs: [\"matAutocomplete\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_OPTION_PARENT_COMPONENT,\n      useExisting: MatAutocomplete\n    }])],\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    consts: [[\"panel\", \"\"], [\"role\", \"listbox\", 1, \"mat-mdc-autocomplete-panel\", \"mdc-menu-surface\", \"mdc-menu-surface--open\", 3, \"id\"]],\n    template: function MatAutocomplete_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 17, \"ng-template\");\n      }\n    },\n    styles: [\"div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:relative;border-radius:var(--mat-autocomplete-container-shape, var(--mat-sys-corner-extra-small));box-shadow:var(--mat-autocomplete-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));background-color:var(--mat-autocomplete-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-autocomplete-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}@keyframes _mat-autocomplete-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}.mat-autocomplete-panel-animations-enabled{animation:_mat-autocomplete-enter 120ms cubic-bezier(0, 0, 0.2, 1)}mat-autocomplete{display:none}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocomplete, [{\n    type: Component,\n    args: [{\n      selector: 'mat-autocomplete',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'matAutocomplete',\n      host: {\n        'class': 'mat-mdc-autocomplete'\n      },\n      providers: [{\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatAutocomplete\n      }],\n      template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div\\n    class=\\\"mat-mdc-autocomplete-panel mdc-menu-surface mdc-menu-surface--open\\\"\\n    role=\\\"listbox\\\"\\n    [id]=\\\"id\\\"\\n    [class]=\\\"_classList\\\"\\n    [class.mat-mdc-autocomplete-visible]=\\\"showPanel\\\"\\n    [class.mat-mdc-autocomplete-hidden]=\\\"!showPanel\\\"\\n    [class.mat-autocomplete-panel-animations-enabled]=\\\"!_animationsDisabled\\\"\\n    [class.mat-primary]=\\\"_color === 'primary'\\\"\\n    [class.mat-accent]=\\\"_color === 'accent'\\\"\\n    [class.mat-warn]=\\\"_color === 'warn'\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n    #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:relative;border-radius:var(--mat-autocomplete-container-shape, var(--mat-sys-corner-extra-small));box-shadow:var(--mat-autocomplete-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));background-color:var(--mat-autocomplete-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-autocomplete-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}@keyframes _mat-autocomplete-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}.mat-autocomplete-panel-animations-enabled{animation:_mat-autocomplete-enter 120ms cubic-bezier(0, 0, 0.2, 1)}mat-autocomplete{display:none}\\n\"]\n    }]\n  }], () => [], {\n    template: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    panel: [{\n      type: ViewChild,\n      args: ['panel']\n    }],\n    options: [{\n      type: ContentChildren,\n      args: [MatOption, {\n        descendants: true\n      }]\n    }],\n    optionGroups: [{\n      type: ContentChildren,\n      args: [MAT_OPTGROUP, {\n        descendants: true\n      }]\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    autoActiveFirstOption: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    autoSelectActiveOption: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    requireSelection: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    panelWidth: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    optionSelected: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    optionActivated: [{\n      type: Output\n    }],\n    classList: [{\n      type: Input,\n      args: ['class']\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n  elementRef = inject(ElementRef);\n  constructor() {}\n  static ɵfac = function MatAutocompleteOrigin_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatAutocompleteOrigin)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatAutocompleteOrigin,\n    selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]],\n    exportAs: [\"matAutocompleteOrigin\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n    type: Directive,\n    args: [{\n      selector: '[matAutocompleteOrigin]',\n      exportAs: 'matAutocompleteOrigin'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatAutocompleteTrigger),\n  multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n  return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' + 'Make sure that the id passed to the `matAutocomplete` is correct and that ' + \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY\n};\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass MatAutocompleteTrigger {\n  _environmentInjector = inject(EnvironmentInjector);\n  _element = inject(ElementRef);\n  _overlay = inject(Overlay);\n  _viewContainerRef = inject(ViewContainerRef);\n  _zone = inject(NgZone);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _formField = inject(MAT_FORM_FIELD, {\n    optional: true,\n    host: true\n  });\n  _viewportRuler = inject(ViewportRuler);\n  _scrollStrategy = inject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY);\n  _renderer = inject(Renderer2);\n  _defaults = inject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  _overlayRef;\n  _portal;\n  _componentDestroyed = false;\n  _initialized = new Subject();\n  _keydownSubscription;\n  _outsideClickSubscription;\n  _cleanupWindowBlur;\n  /** Old value of the native input. Used to work around issues with the `input` event on IE. */\n  _previousValue;\n  /** Value of the input element when the panel was attached (even if there are no options). */\n  _valueOnAttach;\n  /** Value on the previous keydown event. */\n  _valueOnLastKeydown;\n  /** Strategy that is used to position the panel. */\n  _positionStrategy;\n  /** Whether or not the label state is being overridden. */\n  _manuallyFloatingLabel = false;\n  /** The subscription for closing actions (some are bound to document). */\n  _closingActionsSubscription;\n  /** Subscription to viewport size changes. */\n  _viewportSubscription = Subscription.EMPTY;\n  /** Implements BreakpointObserver to be used to detect handset landscape */\n  _breakpointObserver = inject(BreakpointObserver);\n  _handsetLandscapeSubscription = Subscription.EMPTY;\n  /**\n   * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n   * closed autocomplete from being reopened if the user switches to another browser tab and then\n   * comes back.\n   */\n  _canOpenOnNextFocus = true;\n  /** Value inside the input before we auto-selected an option. */\n  _valueBeforeAutoSelection;\n  /**\n   * Current option that we have auto-selected as the user is navigating,\n   * but which hasn't been propagated to the model value yet.\n   */\n  _pendingAutoselectedOption;\n  /** Stream of keyboard events that can close the panel. */\n  _closeKeyEventStream = new Subject();\n  /**\n   * Event handler for when the window is blurred. Needs to be an\n   * arrow function in order to preserve the context.\n   */\n  _windowBlurHandler = () => {\n    // If the user blurred the window while the autocomplete is focused, it means that it'll be\n    // refocused when they come back. In this case we want to skip the first focus event, if the\n    // pane was closed, in order to avoid reopening it unintentionally.\n    this._canOpenOnNextFocus = this.panelOpen || !this._hasFocus();\n  };\n  /** `View -> model callback called when value changes` */\n  _onChange = () => {};\n  /** `View -> model callback called when autocomplete has been touched` */\n  _onTouched = () => {};\n  /** The autocomplete panel to be attached to this trigger. */\n  autocomplete;\n  /**\n   * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n   * will render the panel underneath the trigger if there is enough space for it to fit in\n   * the viewport, otherwise the panel will be shown above it. If the position is set to\n   * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n   * whether it fits completely in the viewport.\n   */\n  position = 'auto';\n  /**\n   * Reference relative to which to position the autocomplete panel.\n   * Defaults to the autocomplete trigger element.\n   */\n  connectedTo;\n  /**\n   * `autocomplete` attribute to be set on the input element.\n   * @docs-private\n   */\n  autocompleteAttribute = 'off';\n  /**\n   * Whether the autocomplete is disabled. When disabled, the element will\n   * act as a regular input and the user won't be able to open the panel.\n   */\n  autocompleteDisabled;\n  constructor() {}\n  /** Class to apply to the panel when it's above the input. */\n  _aboveClass = 'mat-mdc-autocomplete-panel-above';\n  ngAfterViewInit() {\n    this._initialized.next();\n    this._initialized.complete();\n    this._cleanupWindowBlur = this._renderer.listen('window', 'blur', this._windowBlurHandler);\n  }\n  ngOnChanges(changes) {\n    if (changes['position'] && this._positionStrategy) {\n      this._setStrategyPositions(this._positionStrategy);\n      if (this.panelOpen) {\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._cleanupWindowBlur?.();\n    this._handsetLandscapeSubscription.unsubscribe();\n    this._viewportSubscription.unsubscribe();\n    this._componentDestroyed = true;\n    this._destroyPanel();\n    this._closeKeyEventStream.complete();\n    this._clearFromModal();\n  }\n  /** Whether or not the autocomplete panel is open. */\n  get panelOpen() {\n    return this._overlayAttached && this.autocomplete.showPanel;\n  }\n  _overlayAttached = false;\n  /** Opens the autocomplete suggestion panel. */\n  openPanel() {\n    this._openPanelInternal();\n  }\n  /** Closes the autocomplete suggestion panel. */\n  closePanel() {\n    this._resetLabel();\n    if (!this._overlayAttached) {\n      return;\n    }\n    if (this.panelOpen) {\n      // Only emit if the panel was visible.\n      // `afterNextRender` always runs outside of the Angular zone, so all the subscriptions from\n      // `_subscribeToClosingActions()` are also outside of the Angular zone.\n      // We should manually run in Angular zone to update UI after panel closing.\n      this._zone.run(() => {\n        this.autocomplete.closed.emit();\n      });\n    }\n    // Only reset if this trigger is the latest one that opened the\n    // autocomplete since another may have taken it over.\n    if (this.autocomplete._latestOpeningTrigger === this) {\n      this.autocomplete._isOpen = false;\n      this.autocomplete._latestOpeningTrigger = null;\n    }\n    this._overlayAttached = false;\n    this._pendingAutoselectedOption = null;\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n    this._updatePanelState();\n    // Note that in some cases this can end up being called after the component is destroyed.\n    // Add a check to ensure that we don't try to run change detection on a destroyed view.\n    if (!this._componentDestroyed) {\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the label is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n    // Remove aria-owns attribute when the autocomplete is no longer visible.\n    if (this._trackedModal) {\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', this.autocomplete.id);\n    }\n  }\n  /**\n   * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n   * within the viewport.\n   */\n  updatePosition() {\n    if (this._overlayAttached) {\n      this._overlayRef.updatePosition();\n    }\n  }\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  get panelClosingActions() {\n    return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ? this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) : of()).pipe(\n    // Normalize the output so we return a consistent type.\n    map(event => event instanceof MatOptionSelectionChange ? event : null));\n  }\n  /** Stream of changes to the selection state of the autocomplete options. */\n  optionSelections = defer(() => {\n    const options = this.autocomplete ? this.autocomplete.options : null;\n    if (options) {\n      return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n    }\n    // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n    // Return a stream that we'll replace with the real one once everything is in place.\n    return this._initialized.pipe(switchMap(() => this.optionSelections));\n  });\n  /** The currently active option, coerced to MatOption type. */\n  get activeOption() {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n    return null;\n  }\n  /** Stream of clicks outside of the autocomplete panel. */\n  _getOutsideClickStream() {\n    return new Observable(observer => {\n      const listener = event => {\n        // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n        // fall back to check the first element in the path of the click event.\n        const clickTarget = _getEventTarget(event);\n        const formField = this._formField ? this._formField.getConnectedOverlayOrigin().nativeElement : null;\n        const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n        if (this._overlayAttached && clickTarget !== this._element.nativeElement &&\n        // Normally focus moves inside `mousedown` so this condition will almost always be\n        // true. Its main purpose is to handle the case where the input is focused from an\n        // outside click which propagates up to the `body` listener within the same sequence\n        // and causes the panel to close immediately (see #3106).\n        !this._hasFocus() && (!formField || !formField.contains(clickTarget)) && (!customOrigin || !customOrigin.contains(clickTarget)) && !!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget)) {\n          observer.next(event);\n        }\n      };\n      const cleanups = [this._renderer.listen('document', 'click', listener), this._renderer.listen('document', 'auxclick', listener), this._renderer.listen('document', 'touchend', listener)];\n      return () => {\n        cleanups.forEach(current => current());\n      };\n    });\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    Promise.resolve(null).then(() => this._assignOptionValue(value));\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this._element.nativeElement.disabled = isDisabled;\n  }\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const hasModifier = hasModifierKey(event);\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\n    // the input value to the one that it had on focus, however it won't dispatch any events\n    // which means that the model value will be out of sync with the view.\n    if (keyCode === ESCAPE && !hasModifier) {\n      event.preventDefault();\n    }\n    this._valueOnLastKeydown = this._element.nativeElement.value;\n    if (this.activeOption && keyCode === ENTER && this.panelOpen && !hasModifier) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else if (this.autocomplete) {\n      const prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n      if (keyCode === TAB || isArrowKey && !hasModifier && this.panelOpen) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey && this._canOpen()) {\n        this._openPanelInternal(this._valueOnLastKeydown);\n      }\n      if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n        this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n        if (this.autocomplete.autoSelectActiveOption && this.activeOption) {\n          if (!this._pendingAutoselectedOption) {\n            this._valueBeforeAutoSelection = this._valueOnLastKeydown;\n          }\n          this._pendingAutoselectedOption = this.activeOption;\n          this._assignOptionValue(this.activeOption.value);\n        }\n      }\n    }\n  }\n  _handleInput(event) {\n    let target = event.target;\n    let value = target.value;\n    // Based on `NumberValueAccessor` from forms.\n    if (target.type === 'number') {\n      value = value == '' ? null : parseFloat(value);\n    }\n    // If the input has a placeholder, IE will fire the `input` event on page load,\n    // focus and blur, in addition to when the user actually changed the value. To\n    // filter out all of the extra events, we save the value on focus and between\n    // `input` events, and we check whether it changed.\n    // See: https://connect.microsoft.com/IE/feedback/details/885747/\n    if (this._previousValue !== value) {\n      this._previousValue = value;\n      this._pendingAutoselectedOption = null;\n      // If selection is required we don't write to the CVA while the user is typing.\n      // At the end of the selection either the user will have picked something\n      // or we'll reset the value back to null.\n      if (!this.autocomplete || !this.autocomplete.requireSelection) {\n        this._onChange(value);\n      }\n      if (!value) {\n        this._clearPreviousSelectedOption(null, false);\n      } else if (this.panelOpen && !this.autocomplete.requireSelection) {\n        // Note that we don't reset this when `requireSelection` is enabled,\n        // because the option will be reset when the panel is closed.\n        const selectedOption = this.autocomplete.options?.find(option => option.selected);\n        if (selectedOption) {\n          const display = this._getDisplayValue(selectedOption.value);\n          if (value !== display) {\n            selectedOption.deselect(false);\n          }\n        }\n      }\n      if (this._canOpen() && this._hasFocus()) {\n        // When the `input` event fires, the input's value will have already changed. This means\n        // that if we take the `this._element.nativeElement.value` directly, it'll be one keystroke\n        // behind. This can be a problem when the user selects a value, changes a character while\n        // the input still has focus and then clicks away (see #28432). To work around it, we\n        // capture the value in `keydown` so we can use it here.\n        const valueOnAttach = this._valueOnLastKeydown ?? this._element.nativeElement.value;\n        this._valueOnLastKeydown = null;\n        this._openPanelInternal(valueOnAttach);\n      }\n    }\n  }\n  _handleFocus() {\n    if (!this._canOpenOnNextFocus) {\n      this._canOpenOnNextFocus = true;\n    } else if (this._canOpen()) {\n      this._previousValue = this._element.nativeElement.value;\n      this._attachOverlay(this._previousValue);\n      this._floatLabel(true);\n    }\n  }\n  _handleClick() {\n    if (this._canOpen() && !this.panelOpen) {\n      this._openPanelInternal();\n    }\n  }\n  /** Whether the input currently has focus. */\n  _hasFocus() {\n    return _getFocusedElementPierceShadowDom() === this._element.nativeElement;\n  }\n  /**\n   * In \"auto\" mode, the label will animate down as soon as focus is lost.\n   * This causes the value to jump when selecting an option with the mouse.\n   * This method manually floats the label until the panel can be closed.\n   * @param shouldAnimate Whether the label should be animated when it is floated.\n   */\n  _floatLabel(shouldAnimate = false) {\n    if (this._formField && this._formField.floatLabel === 'auto') {\n      if (shouldAnimate) {\n        this._formField._animateAndLockLabel();\n      } else {\n        this._formField.floatLabel = 'always';\n      }\n      this._manuallyFloatingLabel = true;\n    }\n  }\n  /** If the label has been manually elevated, return it to its normal state. */\n  _resetLabel() {\n    if (this._manuallyFloatingLabel) {\n      if (this._formField) {\n        this._formField.floatLabel = 'auto';\n      }\n      this._manuallyFloatingLabel = false;\n    }\n  }\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  _subscribeToClosingActions() {\n    const initialRender = new Observable(subscriber => {\n      afterNextRender(() => {\n        subscriber.next();\n      }, {\n        injector: this._environmentInjector\n      });\n    });\n    const optionChanges = this.autocomplete.options?.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()),\n    // Defer emitting to the stream until the next tick, because changing\n    // bindings in here will cause \"changed after checked\" errors.\n    delay(0)) ?? of();\n    // When the options are initially rendered, and when the option list changes...\n    return merge(initialRender, optionChanges).pipe(\n    // create a new stream of panelClosingActions, replacing any previous streams\n    // that were created, and flatten it so our stream only emits closing events...\n    switchMap(() => this._zone.run(() => {\n      // `afterNextRender` always runs outside of the Angular zone, thus we have to re-enter\n      // the Angular zone. This will lead to change detection being called outside of the Angular\n      // zone and the `autocomplete.opened` will also emit outside of the Angular.\n      const wasOpen = this.panelOpen;\n      this._resetActiveItem();\n      this._updatePanelState();\n      this._changeDetectorRef.detectChanges();\n      if (this.panelOpen) {\n        this._overlayRef.updatePosition();\n      }\n      if (wasOpen !== this.panelOpen) {\n        // If the `panelOpen` state changed, we need to make sure to emit the `opened` or\n        // `closed` event, because we may not have emitted it. This can happen\n        // - if the users opens the panel and there are no options, but the\n        //   options come in slightly later or as a result of the value changing,\n        // - if the panel is closed after the user entered a string that did not match any\n        //   of the available options,\n        // - if a valid string is entered after an invalid one.\n        if (this.panelOpen) {\n          this._emitOpened();\n        } else {\n          this.autocomplete.closed.emit();\n        }\n      }\n      return this.panelClosingActions;\n    })),\n    // when the first closing event occurs...\n    take(1))\n    // set the value, close the panel, and complete.\n    .subscribe(event => this._setValueAndClose(event));\n  }\n  /**\n   * Emits the opened event once it's known that the panel will be shown and stores\n   * the state of the trigger right before the opening sequence was finished.\n   */\n  _emitOpened() {\n    this.autocomplete.opened.emit();\n  }\n  /** Destroys the autocomplete suggestion panel. */\n  _destroyPanel() {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n  /** Given a value, returns the string that should be shown within the input. */\n  _getDisplayValue(value) {\n    const autocomplete = this.autocomplete;\n    return autocomplete && autocomplete.displayWith ? autocomplete.displayWith(value) : value;\n  }\n  _assignOptionValue(value) {\n    const toDisplay = this._getDisplayValue(value);\n    if (value == null) {\n      this._clearPreviousSelectedOption(null, false);\n    }\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    this._updateNativeInputValue(toDisplay != null ? toDisplay : '');\n  }\n  _updateNativeInputValue(value) {\n    // If it's used within a `MatFormField`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = value;\n    } else {\n      this._element.nativeElement.value = value;\n    }\n    this._previousValue = value;\n  }\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  _setValueAndClose(event) {\n    const panel = this.autocomplete;\n    const toSelect = event ? event.source : this._pendingAutoselectedOption;\n    if (toSelect) {\n      this._clearPreviousSelectedOption(toSelect);\n      this._assignOptionValue(toSelect.value);\n      // TODO(crisbeto): this should wait until the animation is done, otherwise the value\n      // gets reset while the panel is still animating which looks glitchy. It'll likely break\n      // some tests to change it at this point.\n      this._onChange(toSelect.value);\n      panel._emitSelectEvent(toSelect);\n      this._element.nativeElement.focus();\n    } else if (panel.requireSelection && this._element.nativeElement.value !== this._valueOnAttach) {\n      this._clearPreviousSelectedOption(null);\n      this._assignOptionValue(null);\n      this._onChange(null);\n    }\n    this.closePanel();\n  }\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  _clearPreviousSelectedOption(skip, emitEvent) {\n    // Null checks are necessary here, because the autocomplete\n    // or its options may not have been assigned yet.\n    this.autocomplete?.options?.forEach(option => {\n      if (option !== skip && option.selected) {\n        option.deselect(emitEvent);\n      }\n    });\n  }\n  _openPanelInternal(valueOnAttach = this._element.nativeElement.value) {\n    this._attachOverlay(valueOnAttach);\n    this._floatLabel();\n    // Add aria-owns attribute when the autocomplete becomes visible.\n    if (this._trackedModal) {\n      const panelId = this.autocomplete.id;\n      addAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    }\n  }\n  _attachOverlay(valueOnAttach) {\n    if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatAutocompleteMissingPanelError();\n    }\n    let overlayRef = this._overlayRef;\n    if (!overlayRef) {\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, {\n        id: this._formField?.getLabelId()\n      });\n      overlayRef = this._overlay.create(this._getOverlayConfig());\n      this._overlayRef = overlayRef;\n      this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n        if (this.panelOpen && overlayRef) {\n          overlayRef.updateSize({\n            width: this._getPanelWidth()\n          });\n        }\n      });\n      // Subscribe to the breakpoint events stream to detect when screen is in\n      // handsetLandscape.\n      this._handsetLandscapeSubscription = this._breakpointObserver.observe(Breakpoints.HandsetLandscape).subscribe(result => {\n        const isHandsetLandscape = result.matches;\n        // Check if result.matches Breakpoints.HandsetLandscape. Apply HandsetLandscape\n        // settings to prevent overlay cutoff in that breakpoint. Fixes b/284148377\n        if (isHandsetLandscape) {\n          this._positionStrategy.withFlexibleDimensions(true).withGrowAfterOpen(true).withViewportMargin(8);\n        } else {\n          this._positionStrategy.withFlexibleDimensions(false).withGrowAfterOpen(false).withViewportMargin(0);\n        }\n      });\n    } else {\n      // Update the trigger, panel width and direction, in case anything has changed.\n      this._positionStrategy.setOrigin(this._getConnectedElement());\n      overlayRef.updateSize({\n        width: this._getPanelWidth()\n      });\n    }\n    if (overlayRef && !overlayRef.hasAttached()) {\n      overlayRef.attach(this._portal);\n      this._valueOnAttach = valueOnAttach;\n      this._valueOnLastKeydown = null;\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n    const wasOpen = this.panelOpen;\n    this.autocomplete._isOpen = this._overlayAttached = true;\n    this.autocomplete._latestOpeningTrigger = this;\n    this.autocomplete._setColor(this._formField?.color);\n    this._updatePanelState();\n    this._applyModalPanelOwnership();\n    // We need to do an extra `panelOpen` check in here, because the\n    // autocomplete won't be shown if there are no options.\n    if (this.panelOpen && wasOpen !== this.panelOpen) {\n      this._emitOpened();\n    }\n  }\n  /** Handles keyboard events coming from the overlay panel. */\n  _handlePanelKeydown = event => {\n    // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n    // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n    if (event.keyCode === ESCAPE && !hasModifierKey(event) || event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey')) {\n      // If the user had typed something in before we autoselected an option, and they decided\n      // to cancel the selection, restore the input value to the one they had typed in.\n      if (this._pendingAutoselectedOption) {\n        this._updateNativeInputValue(this._valueBeforeAutoSelection ?? '');\n        this._pendingAutoselectedOption = null;\n      }\n      this._closeKeyEventStream.next();\n      this._resetActiveItem();\n      // We need to stop propagation, otherwise the event will eventually\n      // reach the input itself and cause the overlay to be reopened.\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  };\n  /** Updates the panel's visibility state and any trigger state tied to id. */\n  _updatePanelState() {\n    this.autocomplete._setVisibility();\n    // Note that here we subscribe and unsubscribe based on the panel's visiblity state,\n    // because the act of subscribing will prevent events from reaching other overlays and\n    // we don't want to block the events if there are no options.\n    if (this.panelOpen) {\n      const overlayRef = this._overlayRef;\n      if (!this._keydownSubscription) {\n        // Use the `keydownEvents` in order to take advantage of\n        // the overlay event targeting provided by the CDK overlay.\n        this._keydownSubscription = overlayRef.keydownEvents().subscribe(this._handlePanelKeydown);\n      }\n      if (!this._outsideClickSubscription) {\n        // Subscribe to the pointer events stream so that it doesn't get picked up by other overlays.\n        // TODO(crisbeto): we should switch `_getOutsideClickStream` eventually to use this stream,\n        // but the behvior isn't exactly the same and it ends up breaking some internal tests.\n        this._outsideClickSubscription = overlayRef.outsidePointerEvents().subscribe();\n      }\n    } else {\n      this._keydownSubscription?.unsubscribe();\n      this._outsideClickSubscription?.unsubscribe();\n      this._keydownSubscription = this._outsideClickSubscription = null;\n    }\n  }\n  _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPosition(),\n      scrollStrategy: this._scrollStrategy(),\n      width: this._getPanelWidth(),\n      direction: this._dir ?? undefined,\n      hasBackdrop: this._defaults?.hasBackdrop,\n      backdropClass: this._defaults?.backdropClass,\n      panelClass: this._defaults?.overlayPanelClass\n    });\n  }\n  _getOverlayPosition() {\n    // Set default Overlay Position\n    const strategy = this._overlay.position().flexibleConnectedTo(this._getConnectedElement()).withFlexibleDimensions(false).withPush(false);\n    this._setStrategyPositions(strategy);\n    this._positionStrategy = strategy;\n    return strategy;\n  }\n  /** Sets the positions on a position strategy based on the directive's input state. */\n  _setStrategyPositions(positionStrategy) {\n    // Note that we provide horizontal fallback positions, even though by default the dropdown\n    // width matches the input, because consumers can override the width. See #18854.\n    const belowPositions = [{\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    }, {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top'\n    }];\n    // The overlay edge connected to the trigger should have squared corners, while\n    // the opposite end has rounded corners. We apply a CSS class to swap the\n    // border-radius based on the overlay position.\n    const panelClass = this._aboveClass;\n    const abovePositions = [{\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n      panelClass\n    }, {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom',\n      panelClass\n    }];\n    let positions;\n    if (this.position === 'above') {\n      positions = abovePositions;\n    } else if (this.position === 'below') {\n      positions = belowPositions;\n    } else {\n      positions = [...belowPositions, ...abovePositions];\n    }\n    positionStrategy.withPositions(positions);\n  }\n  _getConnectedElement() {\n    if (this.connectedTo) {\n      return this.connectedTo.elementRef;\n    }\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n  }\n  _getPanelWidth() {\n    return this.autocomplete.panelWidth || this._getHostWidth();\n  }\n  /** Returns the width of the input element, so the panel width can match it. */\n  _getHostWidth() {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n  /**\n   * Reset the active item to -1. This is so that pressing arrow keys will activate the correct\n   * option.\n   *\n   * If the consumer opted-in to automatically activatating the first option, activate the first\n   * *enabled* option.\n   */\n  _resetActiveItem() {\n    const autocomplete = this.autocomplete;\n    if (autocomplete.autoActiveFirstOption) {\n      // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n      // because it activates the first option that passes the skip predicate, rather than the\n      // first *enabled* option.\n      let firstEnabledOptionIndex = -1;\n      for (let index = 0; index < autocomplete.options.length; index++) {\n        const option = autocomplete.options.get(index);\n        if (!option.disabled) {\n          firstEnabledOptionIndex = index;\n          break;\n        }\n      }\n      autocomplete._keyManager.setActiveItem(firstEnabledOptionIndex);\n    } else {\n      autocomplete._keyManager.setActiveItem(-1);\n    }\n  }\n  /** Determines whether the panel can be opened. */\n  _canOpen() {\n    const element = this._element.nativeElement;\n    return !element.readOnly && !element.disabled && !this.autocompleteDisabled;\n  }\n  /** Scrolls to a particular option in the list. */\n  _scrollToOption(index) {\n    // Given that we are not actually focusing active options, we must manually adjust scroll\n    // to reveal options below the fold. First, we find the offset of the option from the top\n    // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n    // the panel height + the option height, so the active option will be just visible at the\n    // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n    // will become the offset. If that offset is visible within the panel already, the scrollTop is\n    // not adjusted.\n    const autocomplete = this.autocomplete;\n    const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n    if (index === 0 && labelCount === 1) {\n      // If we've got one group label before the option and we're at the top option,\n      // scroll the list to the top. This is better UX than scrolling the list to the\n      // top of the option, because it allows the user to read the top group's label.\n      autocomplete._setScrollTop(0);\n    } else if (autocomplete.panel) {\n      const option = autocomplete.options.toArray()[index];\n      if (option) {\n        const element = option._getHostElement();\n        const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n        autocomplete._setScrollTop(newScrollPosition);\n      }\n    }\n  }\n  /**\n   * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n   * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n   * panel. Track the modal we have changed so we can undo the changes on destroy.\n   */\n  _trackedModal = null;\n  /**\n   * If the autocomplete trigger is inside of an `aria-modal` element, connect\n   * that modal to the options panel with `aria-owns`.\n   *\n   * For some browser + screen reader combinations, when navigation is inside\n   * of an `aria-modal` element, the screen reader treats everything outside\n   * of that modal as hidden or invisible.\n   *\n   * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n   * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n   * from reaching the panel.\n   *\n   * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n   * the options panel. This effectively communicates to assistive technology that the\n   * options panel is part of the same interaction as the modal.\n   *\n   * At time of this writing, this issue is present in VoiceOver.\n   * See https://github.com/angular/components/issues/20694\n   */\n  _applyModalPanelOwnership() {\n    // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n    // the `LiveAnnouncer` and any other usages.\n    //\n    // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n    // section of the DOM we need to look through. This should cover all the cases we support, but\n    // the selector can be expanded if it turns out to be too narrow.\n    const modal = this._element.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n    if (!modal) {\n      // Most commonly, the autocomplete trigger is not inside a modal.\n      return;\n    }\n    const panelId = this.autocomplete.id;\n    if (this._trackedModal) {\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    }\n    addAriaReferencedId(modal, 'aria-owns', panelId);\n    this._trackedModal = modal;\n  }\n  /** Clears the references to the listbox overlay element from the modal it was added to. */\n  _clearFromModal() {\n    if (this._trackedModal) {\n      const panelId = this.autocomplete.id;\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      this._trackedModal = null;\n    }\n  }\n  static ɵfac = function MatAutocompleteTrigger_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatAutocompleteTrigger)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatAutocompleteTrigger,\n    selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-autocomplete-trigger\"],\n    hostVars: 7,\n    hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() {\n          return ctx._handleFocus();\n        })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() {\n          return ctx._onTouched();\n        })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) {\n          return ctx._handleInput($event);\n        })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        })(\"click\", function MatAutocompleteTrigger_click_HostBindingHandler() {\n          return ctx._handleClick();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-controls\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", ctx.autocompleteDisabled ? null : \"listbox\");\n      }\n    },\n    inputs: {\n      autocomplete: [0, \"matAutocomplete\", \"autocomplete\"],\n      position: [0, \"matAutocompletePosition\", \"position\"],\n      connectedTo: [0, \"matAutocompleteConnectedTo\", \"connectedTo\"],\n      autocompleteAttribute: [0, \"autocomplete\", \"autocompleteAttribute\"],\n      autocompleteDisabled: [2, \"matAutocompleteDisabled\", \"autocompleteDisabled\", booleanAttribute]\n    },\n    exportAs: [\"matAutocompleteTrigger\"],\n    features: [i0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n      host: {\n        'class': 'mat-mdc-autocomplete-trigger',\n        '[attr.autocomplete]': 'autocompleteAttribute',\n        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n        '[attr.aria-controls]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n        // a little earlier. This avoids issues where IE delays the focusing of the input.\n        '(focusin)': '_handleFocus()',\n        '(blur)': '_onTouched()',\n        '(input)': '_handleInput($event)',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick()'\n      },\n      exportAs: 'matAutocompleteTrigger',\n      providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n    }]\n  }], () => [], {\n    autocomplete: [{\n      type: Input,\n      args: ['matAutocomplete']\n    }],\n    position: [{\n      type: Input,\n      args: ['matAutocompletePosition']\n    }],\n    connectedTo: [{\n      type: Input,\n      args: ['matAutocompleteConnectedTo']\n    }],\n    autocompleteAttribute: [{\n      type: Input,\n      args: ['autocomplete']\n    }],\n    autocompleteDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'matAutocompleteDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatAutocompleteModule {\n  static ɵfac = function MatAutocompleteModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatAutocompleteModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatAutocompleteModule,\n    imports: [OverlayModule, MatOptionModule, MatCommonModule, MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n    exports: [CdkScrollableModule, MatAutocomplete, MatOptionModule, MatCommonModule, MatAutocompleteTrigger, MatAutocompleteOrigin]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    imports: [OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule, MatOptionModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocompleteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, MatOptionModule, MatCommonModule, MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n      exports: [CdkScrollableModule, MatAutocomplete, MatOptionModule, MatCommonModule, MatAutocompleteTrigger, MatAutocompleteOrigin],\n      providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, MatOption, getMatAutocompleteMissingPanelError };\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy,\n  input,\n  effect,\n  booleanAttribute,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormControl, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatError, MatInputModule } from \"@angular/material/input\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { Subscription, Subject, Observable, of } from \"rxjs\";\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  switchMap,\n  tap,\n} from \"rxjs/operators\";\nimport { MatButtonModule } from \"@angular/material/button\";\n\n/**\n * AutocompleteSelectComponent\n * Reusable autocomplete for selecting one option.\n * No internal loading indicator (as solicitado).\n */\n@Component({\n  selector: \"app-autocomplete-select\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatIconModule,\n    MatError,\n  ],\n  templateUrl: \"./autocomplete-select.component.html\",\n  styleUrls: [\"./autocomplete-select.component.scss\"],\n})\nexport class AutocompleteSelectComponent implements OnInit, OnDestroy {\n  // Control externo que recibirá valor (string | object según valueMode)\n  @Input() control!: FormControl;\n\n  @Input() textCtrl = new FormControl(\"\");\n\n  // Lista de opciones (modo controlado externamente)\n  @Input() options: any[] = [];\n\n  // Función fetch remota opcional; si se pasa se maneja internamente y options input se ignora\n  @Input() fetchFn?: (text: string) => Observable<any[]>;\n\n  @Input() fieldValue: string = \"id\";\n  @Input() fieldText: string = \"nombre\";\n  label = input<string>(\"\");\n  @Input() placeholder: string = \"\";\n  @Input() delay: number = 300;\n  @Input() minLength: number = 1;\n  @Input() autoSelectExact: boolean = true;\n  @Input() clearOnBlurNoMatch: boolean = true;\n  @Input() valueMode: \"object\" | \"value\" = \"value\";\n  @Input() compareWith: (a: any, b: any) => boolean = (a, b) => a === b;\n  @Input() noResultsText: string = \"Sin resultados\";\n  @Input() ariaLabel: string = \"\";\n  @Input() panelWidth?: string;\n  disabled = input(false, { transform: booleanAttribute });\n  required = input(false, { transform: booleanAttribute });\n\n  @Input()\n  set textValue(value) {\n    this.textCtrl.setValue(value);\n  }\n\n  // Outputs\n  @Output() search = new EventEmitter<string>();\n  @Output() optionSelected = new EventEmitter<any>();\n  @Output() cleared = new EventEmitter<void>();\n  @Output() opened = new EventEmitter<void>();\n  @Output() closed = new EventEmitter<void>();\n\n  private input$ = new Subject<string>();\n  filtered: any[] = [];\n  private subs: Subscription[] = [];\n  private updatingText = false;\n\n  constructor() {\n    effect(() => {\n      if (this.disabled() === null || this.disabled() === undefined) return;\n      console.log(\"Disabled cambiado a:\", this.disabled());\n      if (this.disabled()) {\n        this.textCtrl.disable({ emitEvent: false });\n      } else {\n        this.textCtrl.enable({ emitEvent: false });\n      }\n    });\n\n    effect(() => {\n      if (this.required() === null || this.required() === undefined) return;\n      if (this.required()) {\n        this.textCtrl.addValidators(Validators.required);\n      } else {\n        this.textCtrl.removeValidators(Validators.required);\n      }\n      this.textCtrl.updateValueAndValidity({ emitEvent: false });\n    });\n  }\n\n  ngOnInit(): void {\n    if (!this.control) {\n      this.control = new FormControl();\n    }\n\n    // Pipeline de entrada de texto\n    this.subs.push(\n      this.input$\n        .pipe(\n          debounceTime(this.delay),\n          distinctUntilChanged(),\n          filter((txt) => txt.length >= this.minLength || txt.length === 0),\n          switchMap((txt) => this.resolveOptions(txt))\n        )\n        .subscribe((opts) => {\n          this.filtered = opts;\n          // si hay valor inicial y no se ha seteado texto\n          if (this.control.value && !this.textCtrl.value) {\n            this.syncTextFromValue();\n          }\n          this.search.emit(this.textCtrl.value || \"\");\n        })\n    );\n\n    // value inicial -> setear label\n    // this.syncTextFromValue();\n\n    if (this.textCtrl.value || this.textCtrl != null) {\n      this.triggerSearch(this.textCtrl.value || \"\");\n    }\n\n    // React a cambios externos del control (solo en modo object para mantener label)\n    if (this.valueMode === \"object\") {\n      this.subs.push(\n        this.control.valueChanges.subscribe(() => this.syncTextFromValue())\n      );\n    }\n\n    // Escucha cambios de texto directos\n    this.subs.push(\n      this.textCtrl.valueChanges.subscribe((val) => {\n        if (this.updatingText) return;\n        this.triggerSearch(val || \"\");\n      })\n    );\n  }\n\n  private resolveOptions(text: string): Observable<any[]> {\n    if (this.fetchFn) {\n      return this.fetchFn(text).pipe(\n        tap((list) => (this.filtered = list || []))\n      );\n    }\n    // modo controlado: filtramos local\n    if (!text) {\n      return of(this.options);\n    }\n    const lower = text.toLowerCase();\n    return of(\n      (this.options || []).filter((o) =>\n        (this.readText(o) || \"\").toLowerCase().includes(lower)\n      )\n    );\n  }\n\n  private readValue(option: any) {\n    return option?.[this.fieldValue];\n  }\n  readText(option: any) {\n    return option?.[this.fieldText];\n  }\n\n  displayWith = (option: any) => {\n    if (typeof option === \"string\") {\n      return option;\n    }\n    return this.readText(option) || \"\";\n  };\n\n  onOptionSelected(option: any) {\n    const value = this.valueMode === \"value\" ? this.readValue(option) : option;\n    this.control.setValue(value);\n    this.optionSelected.emit(option);\n  }\n\n  onBlur() {\n    const typed = (this.textCtrl.value || \"\").trim();\n    if (!typed) {\n      if (this.control.value) {\n        this.control.reset();\n        this.cleared.emit();\n      }\n      return;\n    }\n\n    const match = this.filtered.find(\n      (o) => this.readText(o)?.toLowerCase() === typed.toLowerCase()\n    );\n    if (match) {\n      if (this.autoSelectExact) {\n        this.onOptionSelected(match);\n      }\n      return;\n    }\n    if (this.clearOnBlurNoMatch) {\n      this.textCtrl.setValue(\"\", { emitEvent: false });\n      this.control.reset();\n      this.cleared.emit();\n    }\n  }\n\n  clear(event?: MouseEvent) {\n    if (event) {\n      event.stopPropagation();\n    }\n    this.textCtrl.setValue(\"\", { emitEvent: false });\n    this.control.reset();\n    this.filtered = [];\n    this.cleared.emit();\n  }\n\n  openedPanel() {\n    this.opened.emit();\n  }\n  closedPanel() {\n    this.closed.emit();\n  }\n\n  private triggerSearch(text: string) {\n    this.input$.next(text);\n  }\n\n  private syncTextFromValue() {\n    if (!this.control.value) {\n      this.updatingText = true;\n      this.textCtrl.setValue(\"\", { emitEvent: false });\n      this.updatingText = false;\n      return;\n    }\n    let option: any;\n    if (this.valueMode === \"value\") {\n      option = (this.filtered.length ? this.filtered : this.options).find((o) =>\n        this.compareWith(this.readValue(o), this.control.value)\n      );\n    } else {\n      option = this.control.value;\n    }\n    if (option) {\n      this.updatingText = true;\n      this.textCtrl.setValue(this.readText(option) || \"\", { emitEvent: false });\n      this.updatingText = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach((s) => s.unsubscribe());\n  }\n}\n","<mat-form-field\n  appearance=\"fill\"\n  class=\"autocomplete-select-field\"\n  [style.--panel-width]=\"panelWidth || null\"\n>\n  <mat-label>{{ label() }}</mat-label>\n  <input\n    type=\"text\"\n    matInput\n    [formControl]=\"textCtrl\"\n    [attr.aria-label]=\"ariaLabel || placeholder\"\n    [placeholder]=\"placeholder\"\n    [matAutocomplete]=\"auto\"\n    (blur)=\"onBlur()\"\n  />\n  @if (textCtrl.value) {\n  <button\n    mat-icon-button\n    matSuffix\n    type=\"button\"\n    (click)=\"clear($event)\"\n    aria-label=\"Limpiar\"\n  >\n    <mat-icon>close</mat-icon>\n  </button>\n  }\n  <mat-autocomplete\n    #auto=\"matAutocomplete\"\n    (opened)=\"openedPanel()\"\n    (closed)=\"closedPanel()\"\n    (optionSelected)=\"onOptionSelected($event.option?.value)\"\n    [displayWith]=\"displayWith\"\n  >\n    @for (opt of filtered; track opt) {\n    <mat-option [value]=\"opt\">{{ readText(opt) }}</mat-option>\n    } @if (filtered.length === 0 && (textCtrl.value || '').length >= minLength)\n    {\n    <mat-option>{{ noResultsText }}</mat-option>\n    }\n  </mat-autocomplete>\n  @if (textCtrl?.touched && (textCtrl?.invalid || control?.invalid)) {\n  <mat-error>\n    @if (control?.errors?.['required'] || textCtrl?.errors?.['required']) { Este\n    campo es requerido. } @else { Valor inválido. }\n  </mat-error>\n  }\n</mat-form-field>","import { Component, LOCALE_ID, OnInit, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  ReactiveFormsModule,\n  FormControl,\n} from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MAT_DATE_LOCALE,\n  MatNativeDateModule,\n} from \"@angular/material/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { Observable } from \"rxjs\";\nimport { AutocompleteSelectComponent } from \"../../../../shared/components/autocomplete-select\";\nimport {\n  PersonaDto,\n  PersonaCreateDto,\n  PersonaUpdateDto,\n  TipoDocumentoDto,\n  GeneroDto,\n  EnfoqueDiferencialDto,\n} from \"../../models\";\nimport { InformacionPersonalService } from \"../../services\";\nimport { NotificationService } from \"../../../../core/services\";\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { Store } from \"@ngrx/store\";\nimport { HojavidaActions, selectPersona } from \"../../store\";\nimport moment from \"moment\";\nimport { EsCoDateAdapter } from \"../../../../core/date/custom-date-adapter\";\nimport { ES_CO_DATE_FORMATS } from \"../../../../core/date/date-formats\";\n\n@Component({\n  selector: \"app-info-personal\",\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    AutocompleteSelectComponent,\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: \"es-CO\" },\n    {\n      provide: DateAdapter,\n      useClass: EsCoDateAdapter,\n      deps: [MAT_DATE_LOCALE],\n    },\n    { provide: MAT_DATE_FORMATS, useValue: ES_CO_DATE_FORMATS },\n  ],\n  templateUrl: \"./info-personal.component.html\",\n  styleUrl: \"./info-personal.component.scss\",\n})\nexport class InfoPersonalComponent implements OnInit {\n  personaForm!: FormGroup;\n  isLoading = false;\n  get isEditMode() {\n    return this.personaId !== undefined;\n  }\n  personaId?: number;\n\n  private readonly fb = inject(FormBuilder);\n  private readonly informacionPersonalService = inject(\n    InformacionPersonalService\n  );\n  private readonly notificationService = inject(NotificationService);\n  private readonly auth = inject(AuthService);\n  private readonly store = inject(Store);\n\n  now = moment().toDate();\n\n  busquedaTextDepartamento = \"\";\n  textLugarNacimiento = \"\";\n\n  tiposDocumento: TipoDocumentoDto[] = [];\n  generos: GeneroDto[] = [];\n  enfoques: EnfoqueDiferencialDto[] = [];\n\n  ngOnInit(): void {\n    // Primero construimos el formulario para garantizar que exista antes de patchValue\n    this.buildForm();\n    this.cargarCatalogos();\n    this.personaId = this.auth.session?.user.user_metadata.idPersona;\n\n    // Revalidar fecha de expedición cuando cambia la fecha de nacimiento (para el atributo [min])\n    this.control(\"fechaNacimiento\")?.valueChanges.subscribe(() => {\n      const ctrlExp = this.control(\"fechaExpedicionDoc\");\n      // Si la expedición quedó por debajo del nuevo mínimo, la limpiamos para forzar selección válida\n      const nacimientoVal = this.control(\"fechaNacimiento\")?.value;\n      if (\n        nacimientoVal &&\n        ctrlExp?.value &&\n        new Date(ctrlExp.value) < new Date(nacimientoVal)\n      ) {\n        ctrlExp.markAsTouched();\n      }\n    });\n    if (this.personaId) {\n      // Intentar obtener desde store primero\n      this.store.select(selectPersona).subscribe((p) => {\n        this.personaForm.patchValue(p);\n        //se debe llenar el campo autocompletado con la informacion que llega separada del backend\n        if (p?.departamentoResidencia && p?.ciudadResidencia) {\n          const nombreCompleto = `${p.departamentoResidencia}, ${p.ciudadResidencia}`;\n          this.personaForm.patchValue({ lugarResidencia: nombreCompleto });\n          this.busquedaTextDepartamento = nombreCompleto;\n        }\n        //se asigna el valor del campo ya llenado de lugar naciomiento, buscando entre todos los de la\n        // DB por el municipio\n        if (p?.lugarNacimiento) {\n          this.fetchCiudadDepartamento(p.lugarNacimiento).subscribe((data) => {\n            this.personaForm.controls.textLugarNacimiento.setValue(data[0]?.nombreCompleto || \"\");\n          });\n        }\n      });\n    }\n  }\n\n  private cargarCatalogos(): void {\n    this.informacionPersonalService\n      .obtenerTiposDocumento()\n      .subscribe((list) => (this.tiposDocumento = list || []));\n    this.informacionPersonalService\n      .obtenerGeneros()\n      .subscribe((list) => (this.generos = list || []));\n    this.informacionPersonalService\n      .obtenerEnfoquesDiferenciales()\n      .subscribe((list) => (this.enfoques = list || []));\n  }\n\n  private buildForm(): void {\n    const namePattern = /^[A-Za-zÁÉÍÓÚÜÑáéíóúüñ\\s'-]+$/u; // solo letras, espacios, apóstrofe y guion\n\n    this.personaForm = this.fb.group({\n      // Información personal básica\n      primerNombre: [\n        \"\",\n        [\n          Validators.required,\n          Validators.maxLength(255),\n          Validators.pattern(namePattern),\n        ],\n      ],\n      segundoNombre: [\n        \"\",\n        [Validators.maxLength(255), Validators.pattern(namePattern)],\n      ],\n      primerApellido: [\n        \"\",\n        [\n          Validators.required,\n          Validators.maxLength(255),\n          Validators.pattern(namePattern),\n        ],\n      ],\n      segundoApellido: [\n        \"\",\n        [Validators.maxLength(255), Validators.pattern(namePattern)],\n      ],\n\n      // Documento\n      idTipoDocumento: [null, [Validators.required]],\n      numeroDocumento: [\n        {\n          value: this.auth.session?.user.user_metadata.numeroDocumento,\n          disabled: true,\n        },\n        [Validators.required, Validators.maxLength(128)],\n      ],\n      fechaExpedicionDoc: [\"\", [Validators.required]],\n\n      // Información personal\n      fechaNacimiento: [\"\", [Validators.required]],\n      lugarNacimiento: [\"\", [Validators.required, Validators.maxLength(255)]],\n      textLugarNacimiento: [\"\"],\n      departamentoResidencia: [\n        \"\",\n        [Validators.required, Validators.maxLength(255)],\n      ],\n      ciudadResidencia: [\"\", [Validators.required, Validators.maxLength(255)]],\n      lugarResidencia: [\"\", [Validators.required, Validators.maxLength(512)]], //para completar los campos de departamento y ciudad\n      direccionResidencia: [\n        \"\",\n        [Validators.required, Validators.maxLength(255)],\n      ],\n\n      // Contacto\n      telefono: [\n        \"\",\n        [\n          Validators.required,\n          Validators.maxLength(63),\n          Validators.pattern(/^\\d{10}$/),\n        ],\n      ],\n      correo: [\n        { value: this.auth.session?.user.email, disabled: true },\n        [Validators.required, Validators.email, Validators.maxLength(127)],\n      ],\n\n      // Información adicional\n      idGenero: [null, [Validators.required]],\n      idEnfoqueDiferencial: [null, [Validators.required]],\n\n      // informacion de Contacto adicional\n      nombreContacto: [\n        \"\",\n        [\n          Validators.required,\n          Validators.maxLength(255),\n          Validators.pattern(namePattern),\n        ],\n      ],\n      telefonoContacto: [\n        \"\",\n        [\n          Validators.required,\n          Validators.maxLength(63),\n          Validators.pattern(/^\\d{10}$/),\n        ],\n      ],\n      correoContacto: [\n        \"\",\n        [Validators.required, Validators.email, Validators.maxLength(127)],\n      ],\n    });\n  }\n\n  fetchCiudadDepartamento = (text: string): Observable<any[]> => {\n    return this.informacionPersonalService.buscarDepartamentosMunicipios(text);\n  };\n\n  onLugarResidenciaSelected(opt: any) {\n    if (!opt) return;\n    this.personaForm.patchValue({\n      departamentoResidencia: opt.departamento || \"\",\n      ciudadResidencia: opt.municipio || \"\",\n    });\n  }\n\n  onLugarNacimientoSelected(opt: any) {\n    if (!opt) return;\n    this.control(\"lugarNacimiento\").setValue(opt.municipio);\n  }\n\n  onSubmit(): void {\n    this.personaForm.markAllAsTouched();\n    if (this.personaForm.valid) {\n      if (this.isEditMode) {\n        this.actualizarPersona();\n      } else {\n        this.crearPersona();\n      }\n    } else {\n      this.notificationService.showError(\n        \"Por favor, complete todos los campos requeridos correctamente.\"\n      );\n    }\n  }\n\n  /**\n   * Crea una nueva persona\n   */\n  private crearPersona(): void {\n    const formData: PersonaCreateDto = this.personaForm.getRawValue();\n\n    this.informacionPersonalService\n      .crearInformacionPersonal(formData)\n      .subscribe({\n        next: (persona: PersonaDto) => {\n          this.personaId = persona.id;\n          this.isLoading = false;\n          this.notificationService.showSuccess(\n            \"Información personal guardada exitosamente.\"\n          );\n        },\n        error: (error) => {\n          console.error(\"Error al crear persona:\", error);\n          this.isLoading = false;\n          this.notificationService.showError(\n            error.message || \"Error al guardar la información personal.\"\n          );\n        },\n      });\n  }\n\n  /**\n   * Actualiza una persona existente\n   */\n  private actualizarPersona(): void {\n    if (this.personaId == null) {\n      return;\n    }\n    const formData: PersonaUpdateDto = {\n      id: this.personaId,\n      ...this.personaForm.getRawValue(),\n    };\n\n    this.informacionPersonalService\n      .actualizarInformacionPersonal(formData)\n      .subscribe({\n        next: (persona: PersonaDto) => {\n          this.isLoading = false;\n          this.notificationService.showSuccess(\n            \"Información personal actualizada exitosamente.\"\n          );\n          this.store.dispatch(\n            HojavidaActions.updatePersonaInState({ persona })\n          );\n        },\n        error: (error) => {\n          console.error(\"Error al actualizar persona:\", error);\n          this.isLoading = false;\n          this.notificationService.showError(\n            error.message || \"Error al actualizar la información personal.\"\n          );\n        },\n      });\n  }\n\n  /**\n   * Valida si un correo ya existe (para nuevo registro)\n   */\n  onCorreoChange(): void {\n    const correoElectronico = this.control(\"correo\")?.value;\n\n    if (correoElectronico && !this.isEditMode) {\n      this.informacionPersonalService\n        .validarCorreoExistente(correoElectronico)\n        .subscribe({\n          next: (existe: boolean) => {\n            if (existe) {\n              this.control(\"correo\")?.setErrors({ correoExistente: true });\n              this.notificationService.showWarning(\n                \"Este correo electrónico ya está registrado.\"\n              );\n            }\n          },\n          error: (error) => {\n            console.error(\"Error al validar correo:\", error);\n          },\n        });\n    }\n  }\n\n  // Getters para facilitar el acceso a los controles en el template\n  control(name: string) {\n    return this.personaForm.get(name) as FormControl;\n  }\n\n  onDigitInput(controlName: string, event: Event) {\n    const input = event.target as HTMLInputElement;\n    const soloDigitos = input.value.replace(/\\D+/g, \"\");\n    if (input.value !== soloDigitos) {\n      input.value = soloDigitos;\n    }\n    this.control(controlName).setValue(soloDigitos);\n  }\n\n  onNameInput(controlName: string, event: Event) {\n    const input = event.target as HTMLInputElement;\n    // Eliminamos dígitos inmediatamente para mejor UX\n    const limpio = input.value.replace(/\\d+/g, \"\");\n    if (limpio !== input.value) {\n      input.value = limpio;\n      this.control(controlName).setValue(limpio);\n    }\n  }\n}\n","<div class=\"info-personal-container\">\n  <!-- Form Content -->\n  <form [formGroup]=\"personaForm\" class=\"personal-info-form\">\n    \n    <!-- Nombres Row --------------------------------------------------------------------------------------->\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label> Primer Nombre </mat-label>\n        <input matInput formControlName=\"primerNombre\" placeholder=\"Primer Nombre\" (input)=\"onNameInput('primerNombre', $event)\">\n        <mat-icon matPrefix> person </mat-icon>\n        @if (control('primerNombre')?.invalid && control('primerNombre')?.touched) {\n          <mat-error>\n            @if (control('primerNombre')?.errors?.['required']) { <span>El primer nombre es requerido</span> }\n            @if (control('primerNombre')?.errors?.['maxlength']) { <span>Máximo 255 caracteres</span> }\n            @if (control('primerNombre')?.errors?.['pattern']) { <span>No se permiten números</span> }\n          </mat-error>\n        }\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Segundo Nombre</mat-label>\n        <input matInput formControlName=\"segundoNombre\" placeholder=\"Segundo Nombre\" (input)=\"onNameInput('segundoNombre', $event)\">\n        <mat-icon matPrefix>person</mat-icon>\n        @if (control('segundoNombre')?.invalid && control('segundoNombre')?.touched) {\n          <mat-error>\n            @if (control('segundoNombre')?.errors?.['maxlength']) { <span>Máximo 255 caracteres</span> }\n            @if (control('segundoNombre')?.errors?.['pattern']) { <span>No se permiten números</span> }\n          </mat-error>\n        }\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Primer Apellido</mat-label>\n        <input matInput formControlName=\"primerApellido\" placeholder=\"Primer Apellido\" (input)=\"onNameInput('primerApellido', $event)\">\n        <mat-icon matPrefix>person</mat-icon>\n        @if (control('primerApellido')?.invalid && control('primerApellido')?.touched) {\n          <mat-error>\n            @if (control('primerApellido')?.errors?.['required']) { <span>El primer apellido es requerido</span> }\n            @if (control('primerApellido')?.errors?.['maxlength']) { <span>Máximo 255 caracteres</span> }\n            @if (control('primerApellido')?.errors?.['pattern']) { <span>No se permiten números</span> }\n          </mat-error>\n        }\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Segundo Apellido</mat-label>\n        <input matInput formControlName=\"segundoApellido\" placeholder=\"Segundo Apellido\" (input)=\"onNameInput('segundoApellido', $event)\">\n        <mat-icon matPrefix>person</mat-icon>\n        @if (control('segundoApellido')?.invalid && control('segundoApellido')?.touched) {\n          <mat-error>\n            @if (control('segundoApellido')?.errors?.['maxlength']) { <span>Máximo 255 caracteres</span> }\n            @if (control('segundoApellido')?.errors?.['pattern']) { <span>No se permiten números</span> }\n          </mat-error>\n        }\n      </mat-form-field>\n    </div>\n\n    <!-- Documento Row ----------------------------------------------------------------------------------->\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Fecha de Nacimiento</mat-label>\n        <input matInput [matDatepicker]=\"nacimientoPicker\" formControlName=\"fechaNacimiento\" [max]=\"now\" placeholder=\"DD/MM/YYYY\">\n        <mat-datepicker-toggle matSuffix [for]=\"nacimientoPicker\"></mat-datepicker-toggle>\n        <mat-datepicker #nacimientoPicker></mat-datepicker>\n        <mat-icon matPrefix>cake</mat-icon>\n        @if (control('fechaNacimiento')?.invalid && control('fechaNacimiento')?.touched) {\n          <mat-error>\n            @if (control('fechaNacimiento')?.errors?.['required']) { <span>La fecha de nacimiento es requerida</span> }\n          </mat-error>\n        }\n      </mat-form-field>\n      \n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Tipo de Documento</mat-label>\n        <mat-select formControlName=\"idTipoDocumento\">\n          @for (td of tiposDocumento; track td.id) {\n            <mat-option [value]=\"td.id\">{{ td.nombre }}</mat-option>\n          }\n        </mat-select>\n        <mat-icon matPrefix>credit_card</mat-icon>\n        <mat-error *ngIf=\"control('idTipoDocumento')?.invalid && control('idTipoDocumento')?.touched\">\n          <span *ngIf=\"control('idTipoDocumento')?.errors?.['required']\">Seleccione el tipo de documento</span>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Número de Documento</mat-label>\n        <input matInput formControlName=\"numeroDocumento\" placeholder=\"Ejm: 1234567890\">\n        <mat-icon matPrefix>numbers</mat-icon>\n        <mat-error *ngIf=\"control('numeroDocumento')?.invalid && control('numeroDocumento')?.touched\">\n          <span *ngIf=\"control('numeroDocumento')?.errors?.['required']\">El número de documento es requerido</span>\n          <span *ngIf=\"control('numeroDocumento')?.errors?.['maxlength']\">Máximo 128 caracteres</span>\n          <span *ngIf=\"control('numeroDocumento')?.errors?.['documentoExistente']\">Este documento ya está registrado</span>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Fecha de Expedición</mat-label>\n        <input matInput [matDatepicker]=\"expedicionPicker\" formControlName=\"fechaExpedicionDoc\" [max]=\"now\" [min]=\"control('fechaNacimiento')?.value || null\" placeholder=\"DD/MM/YYYY\">\n        <mat-datepicker-toggle matSuffix [for]=\"expedicionPicker\"></mat-datepicker-toggle>\n        <mat-datepicker #expedicionPicker></mat-datepicker>\n        @if (control('fechaExpedicionDoc')?.invalid && control('fechaExpedicionDoc')?.touched) {\n          <mat-error>\n            @if (control('fechaExpedicionDoc')?.errors?.['required']) { <span>La fecha de expedición del documento es requerida</span> }\n            @if (control('fechaExpedicionDoc')?.errors?.['matDatepickerMin']) { <span>No puede ser anterior a la fecha de nacimiento</span> }\n          </mat-error>\n        }\n      </mat-form-field>\n    </div>\n\n    <!-- Nacimiento y Lugar Row -->\n    <div class=\"form-row\">\n\n      <!--lugar de nacimiento-->\n      <app-autocomplete-select\n        class=\"form-field\"\n        [textCtrl]=\"control('textLugarNacimiento')\"\n        [control]=\"control('lugarNacimiento')\"\n        required\n        [fetchFn]=\"fetchCiudadDepartamento\"\n        fieldText=\"nombreCompleto\"\n        fieldValue=\"municipio\"\n        label=\"Lugar de Nacimiento\"\n        placeholder=\"Ingrese y seleccione el lugar de nacimiento\"\n        (optionSelected)=\"onLugarNacimientoSelected($event)\">\n      </app-autocomplete-select>\n\n      <!--lugar de residencia-->\n      <app-autocomplete-select\n        class=\"form-field\"\n        [textCtrl]=\"control('lugarResidencia')\"\n        required\n        [fetchFn]=\"fetchCiudadDepartamento\"\n        fieldText=\"nombreCompleto\"\n        fieldValue=\"nombreCompleto\"\n        label=\"Lugar de Residencia\"\n        placeholder=\"Ingrese y seleccione el lugar de residencia\"\n        (optionSelected)=\"onLugarResidenciaSelected($event)\">\n      </app-autocomplete-select>\n    </div>\n\n    <!-- Dirección Row (más ancho) -->\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field address-field\">\n        <mat-label>Dirección de Residencia</mat-label>\n        <input matInput formControlName=\"direccionResidencia\" placeholder=\"Dirección completa\">\n        <mat-icon matPrefix>location_on</mat-icon>\n        <mat-error *ngIf=\"control('direccionResidencia')?.invalid && control('direccionResidencia')?.touched\">\n          <span *ngIf=\"control('direccionResidencia')?.errors?.['required']\">La dirección es requerida</span>\n          <span *ngIf=\"control('direccionResidencia')?.errors?.['maxlength']\">Máximo 255 caracteres</span>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <!-- Contacto Row -->\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Número de Teléfono Celular (10 dígitos)</mat-label>\n        <input matInput formControlName=\"telefono\" placeholder=\"Ej: 300********\" type=\"tel\" (input)=\"onDigitInput('telefono', $event)\">\n        <mat-icon matPrefix>phone</mat-icon>\n        @if (control('telefono')?.invalid && control('telefono')?.touched) {\n          <mat-error>\n            @if (control('telefono')?.errors?.['required']) { <span>El número de teléfono es requerido</span> }\n            @if (control('telefono')?.errors?.['pattern']) { <span>Debe tener exactamente 10 dígitos</span> }\n            @if (control('telefono')?.errors?.['maxlength']) { <span>Máximo 63 caracteres</span> }\n          </mat-error>\n        }\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Correo Electrónico</mat-label>\n  <input matInput formControlName=\"correo\" placeholder=\"ejemplo@correo.com\" type=\"email\" (blur)=\"onCorreoChange()\">\n        <mat-icon matPrefix>email</mat-icon>\n        <mat-error *ngIf=\"control('correo')?.invalid && control('correo')?.touched\">\n          <span *ngIf=\"control('correo')?.errors?.['required']\">El correo electrónico es requerido</span>\n          <span *ngIf=\"control('correo')?.errors?.['email']\">Ingrese un correo válido</span>\n          <span *ngIf=\"control('correo')?.errors?.['maxlength']\">Máximo 127 caracteres</span>\n          <span *ngIf=\"control('correo')?.errors?.['correoExistente']\">Este correo ya está registrado</span>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <!-- Información Adicional Row -->\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Sexo</mat-label>\n        <mat-select formControlName=\"idGenero\">\n          @for (g of generos; track g.id) {\n            <mat-option [value]=\"g.id\">{{ g.nombre }}</mat-option>\n          }\n        </mat-select>\n        <mat-icon matPrefix>wc</mat-icon>\n        <mat-error *ngIf=\"control('idGenero')?.invalid && control('idGenero')?.touched\">\n          <span *ngIf=\"control('idGenero')?.errors?.['required']\">Seleccione el género</span>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Enfoque Diferencial</mat-label>\n        <mat-select formControlName=\"idEnfoqueDiferencial\">\n          @for (e of enfoques; track e.id) {\n            <mat-option [value]=\"e.id\">{{ e.nombre }}</mat-option>\n          }\n        </mat-select>\n        <mat-icon matPrefix>diversity_3</mat-icon>\n        <mat-error *ngIf=\"control('idEnfoqueDiferencial')?.invalid && control('idEnfoqueDiferencial')?.touched\">\n          <span *ngIf=\"control('idEnfoqueDiferencial')?.errors?.['required']\">Seleccione el enfoque diferencial</span>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <!-- Contacto de Emergencia Section -->\n    <div class=\"header-section\">\n      <h3>\n        <mat-icon>contact_emergency</mat-icon>\n        Información de Contacto\n      </h3>\n    </div>\n\n    <!-- Contacto de Emergencia Row -->\n    <div class=\"form-row\">\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Nombre de Contacto</mat-label>\n        <input matInput formControlName=\"nombreContacto\" placeholder=\"Nombre completo del contacto\" (input)=\"onNameInput('nombreContacto', $event)\">\n        <mat-icon matPrefix>person</mat-icon>\n        @if (control('nombreContacto')?.invalid && control('nombreContacto')?.touched) {\n          <mat-error>\n            @if (control('nombreContacto')?.errors?.['required']) { <span>El nombre del contacto es requerido</span> }\n            @if (control('nombreContacto')?.errors?.['maxlength']) { <span>Máximo 255 caracteres</span> }\n            @if (control('nombreContacto')?.errors?.['pattern']) { <span>No se permiten números</span> }\n          </mat-error>\n        }\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Celular de Contacto</mat-label>\n        <input matInput formControlName=\"telefonoContacto\" placeholder=\"Ej: 607******* / 300********\" type=\"tel\" (input)=\"onDigitInput('telefonoContacto', $event)\">\n        <mat-icon matPrefix>phone</mat-icon>\n        @if (control('telefonoContacto')?.invalid && control('telefonoContacto')?.touched) {\n          <mat-error>\n            @if (control('telefonoContacto')?.errors?.['required']) { <span>El teléfono del contacto es requerido</span> }\n            @if (control('telefonoContacto')?.errors?.['pattern']) { <span>Debe tener exactamente 10 dígitos</span> }\n            @if (control('telefonoContacto')?.errors?.['maxlength']) { <span>Máximo 63 caracteres</span> }\n          </mat-error>\n        }\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" class=\"form-field\">\n        <mat-label>Correo de Contacto</mat-label>\n  <input matInput formControlName=\"correoContacto\" placeholder=\"contacto@correo.com\" type=\"email\">\n        <mat-icon matPrefix>email</mat-icon>\n        <mat-error *ngIf=\"control('correoContacto')?.invalid && control('correoContacto')?.touched\">\n          <span *ngIf=\"control('correoContacto')?.errors?.['required']\">El correo del contacto es requerido</span>\n          <span *ngIf=\"control('correoContacto')?.errors?.['email']\">Ingrese un correo válido</span>\n          <span *ngIf=\"control('correoContacto')?.errors?.['maxlength']\">Máximo 127 caracteres</span>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <!-- Action Buttons -->\n    <div class=\"form-actions\">\n      <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"onSubmit()\">\n        <mat-icon>save</mat-icon>\n        {{ isEditMode ? 'Actualizar' : 'Guardar' }}\n      </button>\n    </div>\n\n  </form>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { NativeDateAdapter } from '@angular/material/core';\nimport moment from 'moment';\n\n@Injectable()\nexport class EsCoDateAdapter extends NativeDateAdapter {\n  override parse(value: any): Date | null {\n    console.log('🔍 EsCoDateAdapter.parse called with:', value, typeof value);\n    \n    if (value == null || value === '') return null;\n    \n    if (value instanceof Date && !isNaN(value.getTime())) {\n      console.log('✅ Already a valid Date:', value);\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      const trimmed = value.trim();\n      \n      // DD/MM/YYYY (entrada manual del usuario)\n      const ddmmyyyy = /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/;\n      let match = ddmmyyyy.exec(trimmed);\n      if (match) {\n        const day = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        const year = parseInt(match[3], 10);\n        const date = new Date(year, month, day);\n        if (date.getFullYear() === year && date.getMonth() === month && date.getDate() === day) {\n          console.log('✅ Parsed DD/MM/YYYY:', trimmed, '→', date);\n          return date;\n        }\n      }\n      \n      // YYYY-MM-DD (backend)\n      const yyyymmdd = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\n      match = yyyymmdd.exec(trimmed);\n      if (match) {\n        const year = parseInt(match[1], 10);\n        const month = parseInt(match[2], 10) - 1;\n        const day = parseInt(match[3], 10);\n        const date = new Date(year, month, day);\n        if (date.getFullYear() === year && date.getMonth() === month && date.getDate() === day) {\n          console.log('✅ Parsed YYYY-MM-DD:', trimmed, '→', date);\n          return date;\n        }\n      }\n      \n      console.log('❌ Could not parse string:', trimmed);\n    }\n    \n    console.log('❌ Invalid value type or value:', value);\n    return null;\n  }\n\n  override format(date: Date, displayFormat: Object): string {\n    if (!date) return '';\n    const day = this._to2digit(date.getDate());\n    const month = this._to2digit(date.getMonth() + 1);\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n","import { MatDateFormats } from '@angular/material/core';\n\nexport const ES_CO_DATE_FORMATS: MatDateFormats = {\n  parse: { dateInput: 'DD/MM/YYYY' },\n  display: {\n    dateInput: 'DD/MM/YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'DD/MM/YYYY',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\n","import { Directionality } from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, NgZone, Renderer2, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, signal, Directive, Output, NgModule } from '@angular/core';\nimport { b as RippleState, M as MatRipple, a as MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-BT3tzh6F.mjs';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-BQUT6wsL.mjs';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport { M as MatRippleModule } from './index-SYVYjXwK.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/coercion';\n\n/**\n * Thumb types: range slider has two thumbs (START, END) whereas single point\n * slider only has one thumb (END).\n */\nconst _c0 = [\"knob\"];\nconst _c1 = [\"valueIndicatorContainer\"];\nfunction MatSliderVisualThumb_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2, 1)(2, \"div\", 5)(3, \"span\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.valueIndicatorText);\n  }\n}\nconst _c2 = [\"trackActive\"];\nconst _c3 = [\"*\"];\nfunction MatSlider_Conditional_6_Conditional_2_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const tickMark_r1 = ctx.$implicit;\n    const ɵ$index_14_r2 = ctx.$index;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(tickMark_r1 === 0 ? \"mdc-slider__tick-mark--active\" : \"mdc-slider__tick-mark--inactive\");\n    i0.ɵɵstyleProp(\"transform\", ctx_r2._calcTickMarkTransform(ɵ$index_14_r2));\n  }\n}\nfunction MatSlider_Conditional_6_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, MatSlider_Conditional_6_Conditional_2_For_1_Template, 1, 4, \"div\", 8, i0.ɵɵrepeaterTrackByIndex);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵrepeater(ctx_r2._tickMarks);\n  }\n}\nfunction MatSlider_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6, 1);\n    i0.ɵɵtemplate(2, MatSlider_Conditional_6_Conditional_2_Template, 2, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r2._cachedWidth ? 2 : -1);\n  }\n}\nfunction MatSlider_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-slider-visual-thumb\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"discrete\", ctx_r2.discrete)(\"thumbPosition\", 1)(\"valueIndicatorText\", ctx_r2.startValueIndicatorText);\n  }\n}\nvar _MatThumb;\n(function (_MatThumb) {\n  _MatThumb[_MatThumb[\"START\"] = 1] = \"START\";\n  _MatThumb[_MatThumb[\"END\"] = 2] = \"END\";\n})(_MatThumb || (_MatThumb = {}));\n/** Tick mark enum, for discrete sliders. */\nvar _MatTickMark;\n(function (_MatTickMark) {\n  _MatTickMark[_MatTickMark[\"ACTIVE\"] = 0] = \"ACTIVE\";\n  _MatTickMark[_MatTickMark[\"INACTIVE\"] = 1] = \"INACTIVE\";\n})(_MatTickMark || (_MatTickMark = {}));\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://v17.material.angular.dev/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {\n  /** The MatSliderThumb that was interacted with. */\n  source;\n  /** The MatSlider that was interacted with. */\n  parent;\n  /** The new value of the source slider. */\n  value;\n}\n\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nclass MatSliderVisualThumb {\n  _cdr = inject(ChangeDetectorRef);\n  _ngZone = inject(NgZone);\n  _slider = inject(MAT_SLIDER);\n  _renderer = inject(Renderer2);\n  _listenerCleanups;\n  /** Whether the slider displays a numeric value label upon pressing the thumb. */\n  discrete;\n  /** Indicates which slider thumb this input corresponds to. */\n  thumbPosition;\n  /** The display value of the slider thumb. */\n  valueIndicatorText;\n  /** The MatRipple for this slider thumb. */\n  _ripple;\n  /** The slider thumb knob. */\n  _knob;\n  /** The slider thumb value indicator container. */\n  _valueIndicatorContainer;\n  /** The slider input corresponding to this slider thumb. */\n  _sliderInput;\n  /** The native html element of the slider input corresponding to this thumb. */\n  _sliderInputEl;\n  /** The RippleRef for the slider thumbs hover state. */\n  _hoverRippleRef;\n  /** The RippleRef for the slider thumbs focus state. */\n  _focusRippleRef;\n  /** The RippleRef for the slider thumbs active state. */\n  _activeRippleRef;\n  /** Whether the slider thumb is currently being hovered. */\n  _isHovered = false;\n  /** Whether the slider thumb is currently being pressed. */\n  _isActive = false;\n  /** Whether the value indicator tooltip is visible. */\n  _isValueIndicatorVisible = false;\n  /** The host native HTML input element. */\n  _hostElement = inject(ElementRef).nativeElement;\n  _platform = inject(Platform);\n  constructor() {}\n  ngAfterViewInit() {\n    const sliderInput = this._slider._getInput(this.thumbPosition);\n    // No-op if the slider isn't configured properly. `MatSlider` will\n    // throw an error instructing the user how to set up the slider.\n    if (!sliderInput) {\n      return;\n    }\n    this._ripple.radius = 24;\n    this._sliderInput = sliderInput;\n    this._sliderInputEl = this._sliderInput._hostElement;\n    // These listeners don't update any data bindings so we bind them outside\n    // of the NgZone to prevent Angular from needlessly running change detection.\n    this._ngZone.runOutsideAngular(() => {\n      const input = this._sliderInputEl;\n      const renderer = this._renderer;\n      this._listenerCleanups = [renderer.listen(input, 'pointermove', this._onPointerMove), renderer.listen(input, 'pointerdown', this._onDragStart), renderer.listen(input, 'pointerup', this._onDragEnd), renderer.listen(input, 'pointerleave', this._onMouseLeave), renderer.listen(input, 'focus', this._onFocus), renderer.listen(input, 'blur', this._onBlur)];\n    });\n  }\n  ngOnDestroy() {\n    this._listenerCleanups?.forEach(cleanup => cleanup());\n  }\n  _onPointerMove = event => {\n    if (this._sliderInput._isFocused) {\n      return;\n    }\n    const rect = this._hostElement.getBoundingClientRect();\n    const isHovered = this._slider._isCursorOnSliderThumb(event, rect);\n    this._isHovered = isHovered;\n    if (isHovered) {\n      this._showHoverRipple();\n    } else {\n      this._hideRipple(this._hoverRippleRef);\n    }\n  };\n  _onMouseLeave = () => {\n    this._isHovered = false;\n    this._hideRipple(this._hoverRippleRef);\n  };\n  _onFocus = () => {\n    // We don't want to show the hover ripple on top of the focus ripple.\n    // Happen when the users cursor is over a thumb and then the user tabs to it.\n    this._hideRipple(this._hoverRippleRef);\n    this._showFocusRipple();\n    this._hostElement.classList.add('mdc-slider__thumb--focused');\n  };\n  _onBlur = () => {\n    // Happens when the user tabs away while still dragging a thumb.\n    if (!this._isActive) {\n      this._hideRipple(this._focusRippleRef);\n    }\n    // Happens when the user tabs away from a thumb but their cursor is still over it.\n    if (this._isHovered) {\n      this._showHoverRipple();\n    }\n    this._hostElement.classList.remove('mdc-slider__thumb--focused');\n  };\n  _onDragStart = event => {\n    if (event.button !== 0) {\n      return;\n    }\n    this._isActive = true;\n    this._showActiveRipple();\n  };\n  _onDragEnd = () => {\n    this._isActive = false;\n    this._hideRipple(this._activeRippleRef);\n    // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n    if (!this._sliderInput._isFocused) {\n      this._hideRipple(this._focusRippleRef);\n    }\n    // On Safari we need to immediately re-show the hover ripple because\n    // sliders do not retain focus from pointer events on that platform.\n    if (this._platform.SAFARI) {\n      this._showHoverRipple();\n    }\n  };\n  /** Handles displaying the hover ripple. */\n  _showHoverRipple() {\n    if (!this._isShowingRipple(this._hoverRippleRef)) {\n      this._hoverRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      });\n      this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n    }\n  }\n  /** Handles displaying the focus ripple. */\n  _showFocusRipple() {\n    // Show the focus ripple event if noop animations are enabled.\n    if (!this._isShowingRipple(this._focusRippleRef)) {\n      this._focusRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      }, true);\n      this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n    }\n  }\n  /** Handles displaying the active ripple. */\n  _showActiveRipple() {\n    if (!this._isShowingRipple(this._activeRippleRef)) {\n      this._activeRippleRef = this._showRipple({\n        enterDuration: 225,\n        exitDuration: 400\n      });\n      this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n    }\n  }\n  /** Whether the given rippleRef is currently fading in or visible. */\n  _isShowingRipple(rippleRef) {\n    return rippleRef?.state === RippleState.FADING_IN || rippleRef?.state === RippleState.VISIBLE;\n  }\n  /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n  _showRipple(animation, ignoreGlobalRippleConfig) {\n    if (this._slider.disabled) {\n      return;\n    }\n    this._showValueIndicator();\n    if (this._slider._isRange) {\n      const sibling = this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n      sibling._showValueIndicator();\n    }\n    if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n      return;\n    }\n    return this._ripple.launch({\n      animation: this._slider._noopAnimations ? {\n        enterDuration: 0,\n        exitDuration: 0\n      } : animation,\n      centered: true,\n      persistent: true\n    });\n  }\n  /**\n   * Fades out the given ripple.\n   * Also hides the value indicator if no ripple is showing.\n   */\n  _hideRipple(rippleRef) {\n    rippleRef?.fadeOut();\n    if (this._isShowingAnyRipple()) {\n      return;\n    }\n    if (!this._slider._isRange) {\n      this._hideValueIndicator();\n    }\n    const sibling = this._getSibling();\n    if (!sibling._isShowingAnyRipple()) {\n      this._hideValueIndicator();\n      sibling._hideValueIndicator();\n    }\n  }\n  /** Shows the value indicator ui. */\n  _showValueIndicator() {\n    this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n  }\n  /** Hides the value indicator ui. */\n  _hideValueIndicator() {\n    this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n  }\n  _getSibling() {\n    return this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n  }\n  /** Gets the value indicator container's native HTML element. */\n  _getValueIndicatorContainer() {\n    return this._valueIndicatorContainer?.nativeElement;\n  }\n  /** Gets the native HTML element of the slider thumb knob. */\n  _getKnob() {\n    return this._knob.nativeElement;\n  }\n  _isShowingAnyRipple() {\n    return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);\n  }\n  static ɵfac = function MatSliderVisualThumb_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSliderVisualThumb)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSliderVisualThumb,\n    selectors: [[\"mat-slider-visual-thumb\"]],\n    viewQuery: function MatSliderVisualThumb_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatRipple, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._ripple = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._knob = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueIndicatorContainer = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mdc-slider__thumb\", \"mat-mdc-slider-visual-thumb\"],\n    inputs: {\n      discrete: \"discrete\",\n      thumbPosition: \"thumbPosition\",\n      valueIndicatorText: \"valueIndicatorText\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_SLIDER_VISUAL_THUMB,\n      useExisting: MatSliderVisualThumb\n    }])],\n    decls: 4,\n    vars: 2,\n    consts: [[\"knob\", \"\"], [\"valueIndicatorContainer\", \"\"], [1, \"mdc-slider__value-indicator-container\"], [1, \"mdc-slider__thumb-knob\"], [\"matRipple\", \"\", 1, \"mat-focus-indicator\", 3, \"matRippleDisabled\"], [1, \"mdc-slider__value-indicator\"], [1, \"mdc-slider__value-indicator-text\"]],\n    template: function MatSliderVisualThumb_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MatSliderVisualThumb_Conditional_0_Template, 5, 1, \"div\", 2);\n        i0.ɵɵelement(1, \"div\", 3, 0)(3, \"div\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.discrete ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matRippleDisabled\", true);\n      }\n    },\n    dependencies: [MatRipple],\n    styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderVisualThumb, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider-visual-thumb',\n      host: {\n        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_SLIDER_VISUAL_THUMB,\n        useExisting: MatSliderVisualThumb\n      }],\n      imports: [MatRipple],\n      template: \"@if (discrete) {\\n  <div class=\\\"mdc-slider__value-indicator-container\\\" #valueIndicatorContainer>\\n    <div class=\\\"mdc-slider__value-indicator\\\">\\n      <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n    </div>\\n  </div>\\n}\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\",\n      styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\\n\"]\n    }]\n  }], () => [], {\n    discrete: [{\n      type: Input\n    }],\n    thumbPosition: [{\n      type: Input\n    }],\n    valueIndicatorText: [{\n      type: Input\n    }],\n    _ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    _knob: [{\n      type: ViewChild,\n      args: ['knob']\n    }],\n    _valueIndicatorContainer: [{\n      type: ViewChild,\n      args: ['valueIndicatorContainer']\n    }]\n  });\n})();\n\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider {\n  _ngZone = inject(NgZone);\n  _cdr = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n    optional: true\n  });\n  /** The active portion of the slider track. */\n  _trackActive;\n  /** The slider thumb(s). */\n  _thumbs;\n  /** The sliders hidden range input(s). */\n  _input;\n  /** The sliders hidden range input(s). */\n  _inputs;\n  /** Whether the slider is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(v) {\n    this._disabled = v;\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    if (endInput) {\n      endInput.disabled = this._disabled;\n    }\n    if (startInput) {\n      startInput.disabled = this._disabled;\n    }\n  }\n  _disabled = false;\n  /** Whether the slider displays a numeric value label upon pressing the thumb. */\n  get discrete() {\n    return this._discrete;\n  }\n  set discrete(v) {\n    this._discrete = v;\n    this._updateValueIndicatorUIs();\n  }\n  _discrete = false;\n  /** Whether the slider displays tick marks along the slider track. */\n  showTickMarks = false;\n  /** The minimum value that the slider can have. */\n  get min() {\n    return this._min;\n  }\n  set min(v) {\n    const min = isNaN(v) ? this._min : v;\n    if (this._min !== min) {\n      this._updateMin(min);\n    }\n  }\n  _min = 0;\n  /**\n   * Theme color of the slider. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/slider/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Whether ripples are disabled in the slider. */\n  disableRipple = false;\n  _updateMin(min) {\n    const prevMin = this._min;\n    this._min = min;\n    this._isRange ? this._updateMinRange({\n      old: prevMin,\n      new: min\n    }) : this._updateMinNonRange(min);\n    this._onMinMaxOrStepChange();\n  }\n  _updateMinRange(min) {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    startInput.min = min.new;\n    endInput.min = Math.max(min.new, startInput.value);\n    startInput.max = Math.min(endInput.max, endInput.value);\n    startInput._updateWidthInactive();\n    endInput._updateWidthInactive();\n    min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateMinNonRange(min) {\n    const input = this._getInput(_MatThumb.END);\n    if (input) {\n      const oldValue = input.value;\n      input.min = min;\n      input._updateThumbUIByValue();\n      this._updateTrackUI(input);\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The maximum value that the slider can have. */\n  get max() {\n    return this._max;\n  }\n  set max(v) {\n    const max = isNaN(v) ? this._max : v;\n    if (this._max !== max) {\n      this._updateMax(max);\n    }\n  }\n  _max = 100;\n  _updateMax(max) {\n    const prevMax = this._max;\n    this._max = max;\n    this._isRange ? this._updateMaxRange({\n      old: prevMax,\n      new: max\n    }) : this._updateMaxNonRange(max);\n    this._onMinMaxOrStepChange();\n  }\n  _updateMaxRange(max) {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    endInput.max = max.new;\n    startInput.max = Math.min(max.new, endInput.value);\n    endInput.min = startInput.value;\n    endInput._updateWidthInactive();\n    startInput._updateWidthInactive();\n    max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateMaxNonRange(max) {\n    const input = this._getInput(_MatThumb.END);\n    if (input) {\n      const oldValue = input.value;\n      input.max = max;\n      input._updateThumbUIByValue();\n      this._updateTrackUI(input);\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The values at which the thumb will snap. */\n  get step() {\n    return this._step;\n  }\n  set step(v) {\n    const step = isNaN(v) ? this._step : v;\n    if (this._step !== step) {\n      this._updateStep(step);\n    }\n  }\n  _step = 1;\n  _updateStep(step) {\n    this._step = step;\n    this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n    this._onMinMaxOrStepChange();\n  }\n  _updateStepRange() {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    const prevStartValue = startInput.value;\n    endInput.min = this._min;\n    startInput.max = this._max;\n    endInput.step = this._step;\n    startInput.step = this._step;\n    if (this._platform.SAFARI) {\n      endInput.value = endInput.value;\n      startInput.value = startInput.value;\n    }\n    endInput.min = Math.max(this._min, startInput.value);\n    startInput.max = Math.min(this._max, endInput.value);\n    startInput._updateWidthInactive();\n    endInput._updateWidthInactive();\n    endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateStepNonRange() {\n    const input = this._getInput(_MatThumb.END);\n    if (input) {\n      const oldValue = input.value;\n      input.step = this._step;\n      if (this._platform.SAFARI) {\n        input.value = input.value;\n      }\n      input._updateThumbUIByValue();\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /**\n   * Function that will be used to format the value before it is displayed\n   * in the thumb label. Can be used to format very large number in order\n   * for them to fit into the slider thumb.\n   */\n  displayWith = value => `${value}`;\n  /** Used to keep track of & render the active & inactive tick marks on the slider track. */\n  _tickMarks;\n  /** Whether animations have been disabled. */\n  _noopAnimations;\n  /** Subscription to changes to the directionality (LTR / RTL) context for the application. */\n  _dirChangeSubscription;\n  /** Observer used to monitor size changes in the slider. */\n  _resizeObserver;\n  // Stored dimensions to avoid calling getBoundingClientRect redundantly.\n  _cachedWidth;\n  _cachedLeft;\n  _rippleRadius = 24;\n  // The value indicator tooltip text for the visual slider thumb(s).\n  /** @docs-private */\n  startValueIndicatorText = '';\n  /** @docs-private */\n  endValueIndicatorText = '';\n  // Used to control the translateX of the visual slider thumb(s).\n  _endThumbTransform;\n  _startThumbTransform;\n  _isRange = false;\n  /** Whether the slider is rtl. */\n  _isRtl = false;\n  _hasViewInitialized = false;\n  /**\n   * The width of the tick mark track.\n   * The tick mark track width is different from full track width\n   */\n  _tickMarkTrackWidth = 0;\n  _hasAnimation = false;\n  _resizeTimer = null;\n  _platform = inject(Platform);\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    this._noopAnimations = animationMode === 'NoopAnimations';\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n      this._isRtl = this._dir.value === 'rtl';\n    }\n  }\n  /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n  _knobRadius = 8;\n  _inputPadding;\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._updateDimensions();\n    }\n    const eInput = this._getInput(_MatThumb.END);\n    const sInput = this._getInput(_MatThumb.START);\n    this._isRange = !!eInput && !!sInput;\n    this._cdr.detectChanges();\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      _validateInputs(this._isRange, this._getInput(_MatThumb.END), this._getInput(_MatThumb.START));\n    }\n    const thumb = this._getThumb(_MatThumb.END);\n    this._rippleRadius = thumb._ripple.radius;\n    this._inputPadding = this._rippleRadius - this._knobRadius;\n    this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput);\n    this._updateTrackUI(eInput);\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._observeHostResize();\n    this._cdr.detectChanges();\n  }\n  _initUINonRange(eInput) {\n    eInput.initProps();\n    eInput.initUI();\n    this._updateValueIndicatorUI(eInput);\n    this._hasViewInitialized = true;\n    eInput._updateThumbUIByValue();\n  }\n  _initUIRange(eInput, sInput) {\n    eInput.initProps();\n    eInput.initUI();\n    sInput.initProps();\n    sInput.initUI();\n    eInput._updateMinMax();\n    sInput._updateMinMax();\n    eInput._updateStaticStyles();\n    sInput._updateStaticStyles();\n    this._updateValueIndicatorUIs();\n    this._hasViewInitialized = true;\n    eInput._updateThumbUIByValue();\n    sInput._updateThumbUIByValue();\n  }\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._resizeObserver?.disconnect();\n    this._resizeObserver = null;\n  }\n  /** Handles updating the slider ui after a dir change. */\n  _onDirChange() {\n    this._isRtl = this._dir?.value === 'rtl';\n    this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n    this._updateTickMarkUI();\n  }\n  _onDirChangeRange() {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    endInput._setIsLeftThumb();\n    startInput._setIsLeftThumb();\n    endInput.translateX = endInput._calcTranslateXByValue();\n    startInput.translateX = startInput._calcTranslateXByValue();\n    endInput._updateStaticStyles();\n    startInput._updateStaticStyles();\n    endInput._updateWidthInactive();\n    startInput._updateWidthInactive();\n    endInput._updateThumbUIByValue();\n    startInput._updateThumbUIByValue();\n  }\n  _onDirChangeNonRange() {\n    const input = this._getInput(_MatThumb.END);\n    input._updateThumbUIByValue();\n  }\n  /** Starts observing and updating the slider if the host changes its size. */\n  _observeHostResize() {\n    if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n      return;\n    }\n    this._ngZone.runOutsideAngular(() => {\n      this._resizeObserver = new ResizeObserver(() => {\n        if (this._isActive()) {\n          return;\n        }\n        if (this._resizeTimer) {\n          clearTimeout(this._resizeTimer);\n        }\n        this._onResize();\n      });\n      this._resizeObserver.observe(this._elementRef.nativeElement);\n    });\n  }\n  /** Whether any of the thumbs are currently active. */\n  _isActive() {\n    return this._getThumb(_MatThumb.START)._isActive || this._getThumb(_MatThumb.END)._isActive;\n  }\n  _getValue(thumbPosition = _MatThumb.END) {\n    const input = this._getInput(thumbPosition);\n    if (!input) {\n      return this.min;\n    }\n    return input.value;\n  }\n  _skipUpdate() {\n    return !!(this._getInput(_MatThumb.START)?._skipUIUpdate || this._getInput(_MatThumb.END)?._skipUIUpdate);\n  }\n  /** Stores the slider dimensions. */\n  _updateDimensions() {\n    this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n    this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n  }\n  /** Sets the styles for the active portion of the track. */\n  _setTrackActiveStyles(styles) {\n    const trackStyle = this._trackActive.nativeElement.style;\n    trackStyle.left = styles.left;\n    trackStyle.right = styles.right;\n    trackStyle.transformOrigin = styles.transformOrigin;\n    trackStyle.transform = styles.transform;\n  }\n  /** Returns the translateX positioning for a tick mark based on it's index. */\n  _calcTickMarkTransform(index) {\n    // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n    const offset = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n    const translateX = this._isRtl ? this._cachedWidth - 6 - offset : offset;\n    return `translateX(${translateX}px`;\n  }\n  // Handlers for updating the slider ui.\n  _onTranslateXChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateThumbUI(source);\n    this._updateTrackUI(source);\n    this._updateOverlappingThumbUI(source);\n  }\n  _onTranslateXChangeBySideEffect(input1, input2) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    input1._updateThumbUIByValue();\n    input2._updateThumbUIByValue();\n  }\n  _onValueChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateValueIndicatorUI(source);\n    this._updateTickMarkUI();\n    this._cdr.detectChanges();\n  }\n  _onMinMaxOrStepChange() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._cdr.markForCheck();\n  }\n  _onResize() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateDimensions();\n    if (this._isRange) {\n      const eInput = this._getInput(_MatThumb.END);\n      const sInput = this._getInput(_MatThumb.START);\n      eInput._updateThumbUIByValue();\n      sInput._updateThumbUIByValue();\n      eInput._updateStaticStyles();\n      sInput._updateStaticStyles();\n      eInput._updateMinMax();\n      sInput._updateMinMax();\n      eInput._updateWidthInactive();\n      sInput._updateWidthInactive();\n    } else {\n      const eInput = this._getInput(_MatThumb.END);\n      if (eInput) {\n        eInput._updateThumbUIByValue();\n      }\n    }\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._cdr.detectChanges();\n  }\n  /** Whether or not the slider thumbs overlap. */\n  _thumbsOverlap = false;\n  /** Returns true if the slider knobs are overlapping one another. */\n  _areThumbsOverlapping() {\n    const startInput = this._getInput(_MatThumb.START);\n    const endInput = this._getInput(_MatThumb.END);\n    if (!startInput || !endInput) {\n      return false;\n    }\n    return endInput.translateX - startInput.translateX < 20;\n  }\n  /**\n   * Updates the class names of overlapping slider thumbs so\n   * that the current active thumb is styled to be on \"top\".\n   */\n  _updateOverlappingThumbClassNames(source) {\n    const sibling = source.getSibling();\n    const sourceThumb = this._getThumb(source.thumbPosition);\n    const siblingThumb = this._getThumb(sibling.thumbPosition);\n    siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n    sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n  }\n  /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n  _updateOverlappingThumbUI(source) {\n    if (!this._isRange || this._skipUpdate()) {\n      return;\n    }\n    if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n      this._thumbsOverlap = !this._thumbsOverlap;\n      this._updateOverlappingThumbClassNames(source);\n    }\n  }\n  // _MatThumb styles update conditions\n  //\n  // 1. TranslateX, resize, or dir change\n  //    - Reason: The thumb styles need to be updated according to the new translateX.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n  /** Updates the translateX of the given thumb. */\n  _updateThumbUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    const thumb = this._getThumb(source.thumbPosition === _MatThumb.END ? _MatThumb.END : _MatThumb.START);\n    thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n  }\n  // Value indicator text update conditions\n  //\n  // 1. Value\n  //    - Reason: The value displayed needs to be updated.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n  /** Updates the value indicator tooltip ui for the given thumb. */\n  _updateValueIndicatorUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    const valuetext = this.displayWith(source.value);\n    this._hasViewInitialized ? source._valuetext.set(valuetext) : source._hostElement.setAttribute('aria-valuetext', valuetext);\n    if (this.discrete) {\n      source.thumbPosition === _MatThumb.START ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;\n      const visualThumb = this._getThumb(source.thumbPosition);\n      valuetext.length < 3 ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value') : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n    }\n  }\n  /** Updates all value indicator UIs in the slider. */\n  _updateValueIndicatorUIs() {\n    const eInput = this._getInput(_MatThumb.END);\n    const sInput = this._getInput(_MatThumb.START);\n    if (eInput) {\n      this._updateValueIndicatorUI(eInput);\n    }\n    if (sInput) {\n      this._updateValueIndicatorUI(sInput);\n    }\n  }\n  // Update Tick Mark Track Width\n  //\n  // 1. Min, max, or step\n  //    - Reason: The maximum reachable value may have changed.\n  //    - Side note: The maximum reachable value is different from the maximum value set by the\n  //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n  //      reachable value of 95.\n  // 2. Resize\n  //    - Reason: The position for the maximum reachable value needs to be recalculated.\n  /** Updates the width of the tick mark track. */\n  _updateTickMarkTrackUI() {\n    if (!this.showTickMarks || this._skipUpdate()) {\n      return;\n    }\n    const step = this._step && this._step > 0 ? this._step : 1;\n    const maxValue = Math.floor(this.max / step) * step;\n    const percentage = (maxValue - this.min) / (this.max - this.min);\n    this._tickMarkTrackWidth = (this._cachedWidth - 6) * percentage;\n  }\n  // Track active update conditions\n  //\n  // 1. TranslateX\n  //    - Reason: The track active should line up with the new thumb position.\n  // 2. Min or max\n  //    - Reason #1: The 'active' percentage needs to be recalculated.\n  //    - Reason #2: The value may have silently changed.\n  // 3. Step\n  //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n  // 4. Dir change\n  //    - Reason: The track active will need to be updated according to the new thumb position(s).\n  // 5. Resize\n  //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n  /** Updates the scale on the active portion of the track. */\n  _updateTrackUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source);\n  }\n  _updateTrackUIRange(source) {\n    const sibling = source.getSibling();\n    if (!sibling || !this._cachedWidth) {\n      return;\n    }\n    const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n    if (source._isLeftThumb && this._cachedWidth) {\n      this._setTrackActiveStyles({\n        left: 'auto',\n        right: `${this._cachedWidth - sibling.translateX}px`,\n        transformOrigin: 'right',\n        transform: `scaleX(${activePercentage})`\n      });\n    } else {\n      this._setTrackActiveStyles({\n        left: `${sibling.translateX}px`,\n        right: 'auto',\n        transformOrigin: 'left',\n        transform: `scaleX(${activePercentage})`\n      });\n    }\n  }\n  _updateTrackUINonRange(source) {\n    this._isRtl ? this._setTrackActiveStyles({\n      left: 'auto',\n      right: '0px',\n      transformOrigin: 'right',\n      transform: `scaleX(${1 - source.fillPercentage})`\n    }) : this._setTrackActiveStyles({\n      left: '0px',\n      right: 'auto',\n      transformOrigin: 'left',\n      transform: `scaleX(${source.fillPercentage})`\n    });\n  }\n  // Tick mark update conditions\n  //\n  // 1. Value\n  //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n  // 2. Min, max, or step\n  //    - Reason #1: the number of tick marks may have changed.\n  //    - Reason #2: The value may have silently changed.\n  /** Updates the dots along the slider track. */\n  _updateTickMarkUI() {\n    if (!this.showTickMarks || this.step === undefined || this.min === undefined || this.max === undefined) {\n      return;\n    }\n    const step = this.step > 0 ? this.step : 1;\n    this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n  }\n  _updateTickMarkUINonRange(step) {\n    const value = this._getValue();\n    let numActive = Math.max(Math.round((value - this.min) / step), 0) + 1;\n    let numInactive = Math.max(Math.round((this.max - value) / step), 0) - 1;\n    this._isRtl ? numActive++ : numInactive++;\n    this._tickMarks = Array(numActive).fill(_MatTickMark.ACTIVE).concat(Array(numInactive).fill(_MatTickMark.INACTIVE));\n  }\n  _updateTickMarkUIRange(step) {\n    const endValue = this._getValue();\n    const startValue = this._getValue(_MatThumb.START);\n    const numInactiveBeforeStartThumb = Math.max(Math.round((startValue - this.min) / step), 0);\n    const numActive = Math.max(Math.round((endValue - startValue) / step) + 1, 0);\n    const numInactiveAfterEndThumb = Math.max(Math.round((this.max - endValue) / step), 0);\n    this._tickMarks = Array(numInactiveBeforeStartThumb).fill(_MatTickMark.INACTIVE).concat(Array(numActive).fill(_MatTickMark.ACTIVE), Array(numInactiveAfterEndThumb).fill(_MatTickMark.INACTIVE));\n  }\n  /** Gets the slider thumb input of the given thumb position. */\n  _getInput(thumbPosition) {\n    if (thumbPosition === _MatThumb.END && this._input) {\n      return this._input;\n    }\n    if (this._inputs?.length) {\n      return thumbPosition === _MatThumb.START ? this._inputs.first : this._inputs.last;\n    }\n    return;\n  }\n  /** Gets the slider thumb HTML input element of the given thumb position. */\n  _getThumb(thumbPosition) {\n    return thumbPosition === _MatThumb.END ? this._thumbs?.last : this._thumbs?.first;\n  }\n  _setTransition(withAnimation) {\n    this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations;\n    this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n  }\n  /** Whether the given pointer event occurred within the bounds of the slider pointer's DOM Rect. */\n  _isCursorOnSliderThumb(event, rect) {\n    const radius = rect.width / 2;\n    const centerX = rect.x + radius;\n    const centerY = rect.y + radius;\n    const dx = event.clientX - centerX;\n    const dy = event.clientY - centerY;\n    return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n  }\n  static ɵfac = function MatSlider_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSlider)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSlider,\n    selectors: [[\"mat-slider\"]],\n    contentQueries: function MatSlider_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_THUMB, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_RANGE_THUMB, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._input = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputs = _t);\n      }\n    },\n    viewQuery: function MatSlider_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(MAT_SLIDER_VISUAL_THUMB, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._trackActive = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._thumbs = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-slider\", \"mdc-slider\"],\n    hostVars: 12,\n    hostBindings: function MatSlider_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n        i0.ɵɵclassProp(\"mdc-slider--range\", ctx._isRange)(\"mdc-slider--disabled\", ctx.disabled)(\"mdc-slider--discrete\", ctx.discrete)(\"mdc-slider--tick-marks\", ctx.showTickMarks)(\"_mat-animation-noopable\", ctx._noopAnimations);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      discrete: [2, \"discrete\", \"discrete\", booleanAttribute],\n      showTickMarks: [2, \"showTickMarks\", \"showTickMarks\", booleanAttribute],\n      min: [2, \"min\", \"min\", numberAttribute],\n      color: \"color\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      max: [2, \"max\", \"max\", numberAttribute],\n      step: [2, \"step\", \"step\", numberAttribute],\n      displayWith: \"displayWith\"\n    },\n    exportAs: [\"matSlider\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_SLIDER,\n      useExisting: MatSlider\n    }])],\n    ngContentSelectors: _c3,\n    decls: 9,\n    vars: 5,\n    consts: [[\"trackActive\", \"\"], [\"tickMarkContainer\", \"\"], [1, \"mdc-slider__track\"], [1, \"mdc-slider__track--inactive\"], [1, \"mdc-slider__track--active\"], [1, \"mdc-slider__track--active_fill\"], [1, \"mdc-slider__tick-marks\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\"], [3, \"class\", \"transform\"]],\n    template: function MatSlider_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵelementStart(1, \"div\", 2);\n        i0.ɵɵelement(2, \"div\", 3);\n        i0.ɵɵelementStart(3, \"div\", 4);\n        i0.ɵɵelement(4, \"div\", 5, 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, MatSlider_Conditional_6_Template, 3, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, MatSlider_Conditional_7_Template, 1, 3, \"mat-slider-visual-thumb\", 7);\n        i0.ɵɵelement(8, \"mat-slider-visual-thumb\", 7);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵconditional(ctx.showTickMarks ? 6 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._isRange ? 7 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"discrete\", ctx.discrete)(\"thumbPosition\", 2)(\"valueIndicatorText\", ctx.endValueIndicatorText);\n      }\n    },\n    dependencies: [MatSliderVisualThumb],\n    styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mdc-slider-inactive-track-height, 4px)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mdc-slider-active-track-shape, var(--mat-sys-corner-full));height:var(--mdc-slider-active-track-height, 4px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 4px))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mdc-slider-active-track-color, var(--mat-sys-primary));border-top-width:var(--mdc-slider-active-track-height, 4px)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mat-sys-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mdc-slider-inactive-track-color, var(--mat-sys-surface-variant));height:var(--mdc-slider-inactive-track-height, 4px);border-radius:var(--mdc-slider-inactive-track-shape, var(--mat-sys-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mat-sys-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:translateX(-50%);transform:var(--mat-slider-value-indicator-container-transform, translateX(-50%) rotate(-45deg))}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;border-radius:4px;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom;opacity:1;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary));color:var(--mdc-slider-label-label-text-color, var(--mat-sys-on-primary));width:var(--mat-slider-value-indicator-width, 28px);height:var(--mat-slider-value-indicator-height, 28px);padding:var(--mat-slider-value-indicator-padding, 0);opacity:var(--mat-slider-value-indicator-opacity, 1);border-radius:var(--mat-slider-value-indicator-border-radius, 50% 50% 50% 0)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display, none);border-top-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width, 28px);transform:var(--mat-slider-value-indicator-text-transform, rotate(45deg));font-family:var(--mdc-slider-label-label-text-font, var(--mat-sys-label-medium-font));font-size:var(--mdc-slider-label-label-text-size, var(--mat-sys-label-medium-size));font-weight:var(--mdc-slider-label-label-text-weight, var(--mat-sys-label-medium-weight));line-height:var(--mdc-slider-label-label-text-line-height, var(--mat-sys-label-medium-line-height));letter-spacing:var(--mdc-slider-label-label-text-tracking, var(--mat-sys-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-width:calc(var(--mdc-slider-handle-height, 20px)/2) calc(var(--mdc-slider-handle-width, 20px)/2);box-shadow:var(--mdc-slider-handle-elevation, var(--mat-sys-level1));background-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-radius:var(--mdc-slider-handle-shape, var(--mat-sys-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface));border-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mdc-slider-with-overlap-handle-outline-color, var(--mat-sys-on-primary));border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mdc-slider-with-tick-marks-container-size, 2px);height:var(--mdc-slider-with-tick-marks-container-size, 2px);border-radius:var(--mdc-slider-with-tick-marks-container-shape, var(--mat-sys-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mat-sys-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mat-sys-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mat-sys-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-sys-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 5%, transparent))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 20%, transparent))}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-focus-indicator::before{content:\\\"\\\"}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      host: {\n        'class': 'mat-mdc-slider mdc-slider',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mdc-slider--range]': '_isRange',\n        '[class.mdc-slider--disabled]': 'disabled',\n        '[class.mdc-slider--discrete]': 'discrete',\n        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n        '[class._mat-animation-noopable]': '_noopAnimations'\n      },\n      exportAs: 'matSlider',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_SLIDER,\n        useExisting: MatSlider\n      }],\n      imports: [MatSliderVisualThumb],\n      template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  @if (showTickMarks) {\\n    <div class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n      @if (_cachedWidth) {\\n        @for (tickMark of _tickMarks; track i; let i = $index) {\\n          <div\\n            [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n            [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n        }\\n      }\\n    </div>\\n  }\\n</div>\\n\\n<!-- Thumbs -->\\n@if (_isRange) {\\n  <mat-slider-visual-thumb\\n    [discrete]=\\\"discrete\\\"\\n    [thumbPosition]=\\\"1\\\"\\n    [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n  </mat-slider-visual-thumb>\\n}\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\",\n      styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mdc-slider-inactive-track-height, 4px)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mdc-slider-active-track-shape, var(--mat-sys-corner-full));height:var(--mdc-slider-active-track-height, 4px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 4px))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mdc-slider-active-track-color, var(--mat-sys-primary));border-top-width:var(--mdc-slider-active-track-height, 4px)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mat-sys-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mdc-slider-inactive-track-color, var(--mat-sys-surface-variant));height:var(--mdc-slider-inactive-track-height, 4px);border-radius:var(--mdc-slider-inactive-track-shape, var(--mat-sys-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mat-sys-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:translateX(-50%);transform:var(--mat-slider-value-indicator-container-transform, translateX(-50%) rotate(-45deg))}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;border-radius:4px;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom;opacity:1;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary));color:var(--mdc-slider-label-label-text-color, var(--mat-sys-on-primary));width:var(--mat-slider-value-indicator-width, 28px);height:var(--mat-slider-value-indicator-height, 28px);padding:var(--mat-slider-value-indicator-padding, 0);opacity:var(--mat-slider-value-indicator-opacity, 1);border-radius:var(--mat-slider-value-indicator-border-radius, 50% 50% 50% 0)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display, none);border-top-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width, 28px);transform:var(--mat-slider-value-indicator-text-transform, rotate(45deg));font-family:var(--mdc-slider-label-label-text-font, var(--mat-sys-label-medium-font));font-size:var(--mdc-slider-label-label-text-size, var(--mat-sys-label-medium-size));font-weight:var(--mdc-slider-label-label-text-weight, var(--mat-sys-label-medium-weight));line-height:var(--mdc-slider-label-label-text-line-height, var(--mat-sys-label-medium-line-height));letter-spacing:var(--mdc-slider-label-label-text-tracking, var(--mat-sys-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-width:calc(var(--mdc-slider-handle-height, 20px)/2) calc(var(--mdc-slider-handle-width, 20px)/2);box-shadow:var(--mdc-slider-handle-elevation, var(--mat-sys-level1));background-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-radius:var(--mdc-slider-handle-shape, var(--mat-sys-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface));border-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mdc-slider-with-overlap-handle-outline-color, var(--mat-sys-on-primary));border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mdc-slider-with-tick-marks-container-size, 2px);height:var(--mdc-slider-with-tick-marks-container-size, 2px);border-radius:var(--mdc-slider-with-tick-marks-container-shape, var(--mat-sys-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mat-sys-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mat-sys-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mat-sys-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-sys-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 5%, transparent))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 20%, transparent))}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-focus-indicator::before{content:\\\"\\\"}\\n\"]\n    }]\n  }], () => [], {\n    _trackActive: [{\n      type: ViewChild,\n      args: ['trackActive']\n    }],\n    _thumbs: [{\n      type: ViewChildren,\n      args: [MAT_SLIDER_VISUAL_THUMB]\n    }],\n    _input: [{\n      type: ContentChild,\n      args: [MAT_SLIDER_THUMB]\n    }],\n    _inputs: [{\n      type: ContentChildren,\n      args: [MAT_SLIDER_RANGE_THUMB, {\n        descendants: false\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    discrete: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showTickMarks: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    min: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    max: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    step: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    displayWith: [{\n      type: Input\n    }]\n  });\n})();\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n  const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n  const endValid = endInputElement?._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n  if (!startValid || !endValid) {\n    _throwInvalidInputConfigurationError();\n  }\n}\nfunction _throwInvalidInputConfigurationError() {\n  throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderThumb),\n  multi: true\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderRangeThumb),\n  multi: true\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nclass MatSliderThumb {\n  _ngZone = inject(NgZone);\n  _elementRef = inject(ElementRef);\n  _cdr = inject(ChangeDetectorRef);\n  _slider = inject(MAT_SLIDER);\n  _platform = inject(Platform);\n  _listenerCleanups;\n  get value() {\n    return numberAttribute(this._hostElement.value, 0);\n  }\n  set value(value) {\n    value = isNaN(value) ? 0 : value;\n    const stringValue = value + '';\n    if (!this._hasSetInitialValue) {\n      this._initialValue = stringValue;\n      return;\n    }\n    if (this._isActive) {\n      return;\n    }\n    this._setValue(stringValue);\n  }\n  /**\n   * Handles programmatic value setting. This has been split out to\n   * allow the range thumb to override it and add additional necessary logic.\n   */\n  _setValue(value) {\n    this._hostElement.value = value;\n    this._updateThumbUIByValue();\n    this._slider._onValueChange(this);\n    this._cdr.detectChanges();\n    this._slider._cdr.markForCheck();\n  }\n  /** Event emitted when the `value` is changed. */\n  valueChange = new EventEmitter();\n  /** Event emitted when the slider thumb starts being dragged. */\n  dragStart = new EventEmitter();\n  /** Event emitted when the slider thumb stops being dragged. */\n  dragEnd = new EventEmitter();\n  /**\n   * The current translateX in px of the slider visual thumb.\n   * @docs-private\n   */\n  get translateX() {\n    if (this._slider.min >= this._slider.max) {\n      this._translateX = this._tickMarkOffset;\n      return this._translateX;\n    }\n    if (this._translateX === undefined) {\n      this._translateX = this._calcTranslateXByValue();\n    }\n    return this._translateX;\n  }\n  set translateX(v) {\n    this._translateX = v;\n  }\n  _translateX;\n  /**\n   * Indicates whether this thumb is the start or end thumb.\n   * @docs-private\n   */\n  thumbPosition = _MatThumb.END;\n  /** @docs-private */\n  get min() {\n    return numberAttribute(this._hostElement.min, 0);\n  }\n  set min(v) {\n    this._hostElement.min = v + '';\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n  get max() {\n    return numberAttribute(this._hostElement.max, 0);\n  }\n  set max(v) {\n    this._hostElement.max = v + '';\n    this._cdr.detectChanges();\n  }\n  get step() {\n    return numberAttribute(this._hostElement.step, 0);\n  }\n  set step(v) {\n    this._hostElement.step = v + '';\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n  get disabled() {\n    return booleanAttribute(this._hostElement.disabled);\n  }\n  set disabled(v) {\n    this._hostElement.disabled = v;\n    this._cdr.detectChanges();\n    if (this._slider.disabled !== this.disabled) {\n      this._slider.disabled = this.disabled;\n    }\n  }\n  /** The percentage of the slider that coincides with the value. */\n  get percentage() {\n    if (this._slider.min >= this._slider.max) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n    return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n  }\n  /** @docs-private */\n  get fillPercentage() {\n    if (!this._slider._cachedWidth) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n    if (this._translateX === 0) {\n      return 0;\n    }\n    return this.translateX / this._slider._cachedWidth;\n  }\n  /** The host native HTML input element. */\n  _hostElement = this._elementRef.nativeElement;\n  /** The aria-valuetext string representation of the input's value. */\n  _valuetext = signal('');\n  /** The radius of a native html slider's knob. */\n  _knobRadius = 8;\n  /** The distance in px from the start of the slider track to the first tick mark. */\n  _tickMarkOffset = 3;\n  /** Whether user's cursor is currently in a mouse down state on the input. */\n  _isActive = false;\n  /** Whether the input is currently focused (either by tab or after clicking). */\n  _isFocused = false;\n  /** Used to relay updates to _isFocused to the slider visual thumbs. */\n  _setIsFocused(v) {\n    this._isFocused = v;\n  }\n  /**\n   * Whether the initial value has been set.\n   * This exists because the initial value cannot be immediately set because the min and max\n   * must first be relayed from the parent MatSlider component, which can only happen later\n   * in the component lifecycle.\n   */\n  _hasSetInitialValue = false;\n  /** The stored initial value. */\n  _initialValue;\n  /** Defined when a user is using a form control to manage slider value & validation. */\n  _formControl;\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /**\n   * Indicates whether UI updates should be skipped.\n   *\n   * This flag is used to avoid flickering\n   * when correcting values on pointer up/down.\n   */\n  _skipUIUpdate = false;\n  /** Callback called when the slider input value changes. */\n  _onChangeFn;\n  /** Callback called when the slider input has been touched. */\n  _onTouchedFn = () => {};\n  /**\n   * Whether the NgModel has been initialized.\n   *\n   * This flag is used to ignore ghost null calls to\n   * writeValue which can break slider initialization.\n   *\n   * See https://github.com/angular/angular/issues/14988.\n   */\n  _isControlInitialized = false;\n  constructor() {\n    const renderer = inject(Renderer2);\n    this._ngZone.runOutsideAngular(() => {\n      this._listenerCleanups = [renderer.listen(this._hostElement, 'pointerdown', this._onPointerDown.bind(this)), renderer.listen(this._hostElement, 'pointermove', this._onPointerMove.bind(this)), renderer.listen(this._hostElement, 'pointerup', this._onPointerUp.bind(this))];\n    });\n  }\n  ngOnDestroy() {\n    this._listenerCleanups.forEach(cleanup => cleanup());\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.dragStart.complete();\n    this.dragEnd.complete();\n  }\n  /** @docs-private */\n  initProps() {\n    this._updateWidthInactive();\n    // If this or the parent slider is disabled, just make everything disabled.\n    if (this.disabled !== this._slider.disabled) {\n      // The MatSlider setter for disabled will relay this and disable both inputs.\n      this._slider.disabled = true;\n    }\n    this.step = this._slider.step;\n    this.min = this._slider.min;\n    this.max = this._slider.max;\n    this._initValue();\n  }\n  /** @docs-private */\n  initUI() {\n    this._updateThumbUIByValue();\n  }\n  _initValue() {\n    this._hasSetInitialValue = true;\n    if (this._initialValue === undefined) {\n      this.value = this._getDefaultValue();\n    } else {\n      this._hostElement.value = this._initialValue;\n      this._updateThumbUIByValue();\n      this._slider._onValueChange(this);\n      this._cdr.detectChanges();\n    }\n  }\n  _getDefaultValue() {\n    return this.min;\n  }\n  _onBlur() {\n    this._setIsFocused(false);\n    this._onTouchedFn();\n  }\n  _onFocus() {\n    this._slider._setTransition(false);\n    this._slider._updateTrackUI(this);\n    this._setIsFocused(true);\n  }\n  _onChange() {\n    this.valueChange.emit(this.value);\n    // only used to handle the edge case where user\n    // mousedown on the slider then uses arrow keys.\n    if (this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n  }\n  _onInput() {\n    this._onChangeFn?.(this.value);\n    // handles arrowing and updating the value when\n    // a step is defined.\n    if (this._slider.step || !this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n    this._slider._onValueChange(this);\n  }\n  _onNgControlValueChange() {\n    // only used to handle when the value change\n    // originates outside of the slider.\n    if (!this._isActive || !this._isFocused) {\n      this._slider._onValueChange(this);\n      this._updateThumbUIByValue();\n    }\n    this._slider.disabled = this._formControl.disabled;\n  }\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n    // On IOS, dragging only works if the pointer down happens on the\n    // slider thumb and the slider does not receive focus from pointer events.\n    if (this._platform.IOS) {\n      const isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());\n      this._isActive = isCursorOnSliderThumb;\n      this._updateWidthActive();\n      this._slider._updateDimensions();\n      return;\n    }\n    this._isActive = true;\n    this._setIsFocused(true);\n    this._updateWidthActive();\n    this._slider._updateDimensions();\n    // Does nothing if a step is defined because we\n    // want the value to snap to the values on input.\n    if (!this._slider.step) {\n      this._updateThumbUIByPointerEvent(event, {\n        withAnimation: true\n      });\n    }\n    if (!this.disabled) {\n      this._handleValueCorrection(event);\n      this.dragStart.emit({\n        source: this,\n        parent: this._slider,\n        value: this.value\n      });\n    }\n  }\n  /**\n   * Corrects the value of the slider on pointer up/down.\n   *\n   * Called on pointer down and up because the value is set based\n   * on the inactive width instead of the active width.\n   */\n  _handleValueCorrection(event) {\n    // Don't update the UI with the current value! The value on pointerdown\n    // and pointerup is calculated in the split second before the input(s)\n    // resize. See _updateWidthInactive() and _updateWidthActive() for more\n    // details.\n    this._skipUIUpdate = true;\n    // Note that this function gets triggered before the actual value of the\n    // slider is updated. This means if we were to set the value here, it\n    // would immediately be overwritten. Using setTimeout ensures the setting\n    // of the value happens after the value has been updated by the\n    // pointerdown event.\n    setTimeout(() => {\n      this._skipUIUpdate = false;\n      this._fixValue(event);\n    }, 0);\n  }\n  /** Corrects the value of the slider based on the pointer event's position. */\n  _fixValue(event) {\n    const xPos = event.clientX - this._slider._cachedLeft;\n    const width = this._slider._cachedWidth;\n    const step = this._slider.step === 0 ? 1 : this._slider.step;\n    const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n    const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n    // To ensure the percentage is rounded to the necessary number of decimals.\n    const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n    const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n    const value = Math.round(impreciseValue / step) * step;\n    const prevValue = this.value;\n    if (value === prevValue) {\n      // Because we prevented UI updates, if it turns out that the race\n      // condition didn't happen and the value is already correct, we\n      // have to apply the ui updates now.\n      this._slider._onValueChange(this);\n      this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n        withAnimation: this._slider._hasAnimation\n      });\n      return;\n    }\n    this.value = value;\n    this.valueChange.emit(this.value);\n    this._onChangeFn?.(this.value);\n    this._slider._onValueChange(this);\n    this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n      withAnimation: this._slider._hasAnimation\n    });\n  }\n  _onPointerMove(event) {\n    // Again, does nothing if a step is defined because\n    // we want the value to snap to the values on input.\n    if (!this._slider.step && this._isActive) {\n      this._updateThumbUIByPointerEvent(event);\n    }\n  }\n  _onPointerUp() {\n    if (this._isActive) {\n      this._isActive = false;\n      if (this._platform.SAFARI) {\n        this._setIsFocused(false);\n      }\n      this.dragEnd.emit({\n        source: this,\n        parent: this._slider,\n        value: this.value\n      });\n      // This setTimeout is to prevent the pointerup from triggering a value\n      // change on the input based on the inactive width. It's not clear why\n      // but for some reason on IOS this race condition is even more common so\n      // the timeout needs to be increased.\n      setTimeout(() => this._updateWidthInactive(), this._platform.IOS ? 10 : 0);\n    }\n  }\n  _clamp(v) {\n    const min = this._tickMarkOffset;\n    const max = this._slider._cachedWidth - this._tickMarkOffset;\n    return Math.max(Math.min(v, max), min);\n  }\n  _calcTranslateXByValue() {\n    if (this._slider._isRtl) {\n      return (1 - this.percentage) * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n    }\n    return this.percentage * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n  }\n  _calcTranslateXByPointerEvent(event) {\n    return event.clientX - this._slider._cachedLeft;\n  }\n  /**\n   * Used to set the slider width to the correct\n   * dimensions while the user is dragging.\n   */\n  _updateWidthActive() {}\n  /**\n   * Sets the slider input to disproportionate dimensions to allow for touch\n   * events to be captured on touch devices.\n   */\n  _updateWidthInactive() {\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding - this._tickMarkOffset * 2}px)`;\n    this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n  }\n  _updateThumbUIByValue(options) {\n    this.translateX = this._clamp(this._calcTranslateXByValue());\n    this._updateThumbUI(options);\n  }\n  _updateThumbUIByPointerEvent(event, options) {\n    this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n    this._updateThumbUI(options);\n  }\n  _updateThumbUI(options) {\n    this._slider._setTransition(!!options?.withAnimation);\n    this._slider._onTranslateXChange(this);\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n  writeValue(value) {\n    if (this._isControlInitialized || value !== null) {\n      this.value = value;\n    }\n  }\n  /**\n   * Registers a callback to be invoked when the input's value changes from user input.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChangeFn = fn;\n    this._isControlInitialized = true;\n  }\n  /**\n   * Registers a callback to be invoked when the input is blurred by the user.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouchedFn = fn;\n  }\n  /**\n   * Sets the disabled state of the slider.\n   * @param isDisabled The new disabled state\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  focus() {\n    this._hostElement.focus();\n  }\n  blur() {\n    this._hostElement.blur();\n  }\n  static ɵfac = function MatSliderThumb_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSliderThumb)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSliderThumb,\n    selectors: [[\"input\", \"matSliderThumb\", \"\"]],\n    hostAttrs: [\"type\", \"range\", 1, \"mdc-slider__input\"],\n    hostVars: 1,\n    hostBindings: function MatSliderThumb_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function MatSliderThumb_change_HostBindingHandler() {\n          return ctx._onChange();\n        })(\"input\", function MatSliderThumb_input_HostBindingHandler() {\n          return ctx._onInput();\n        })(\"blur\", function MatSliderThumb_blur_HostBindingHandler() {\n          return ctx._onBlur();\n        })(\"focus\", function MatSliderThumb_focus_HostBindingHandler() {\n          return ctx._onFocus();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-valuetext\", ctx._valuetext());\n      }\n    },\n    inputs: {\n      value: [2, \"value\", \"value\", numberAttribute]\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      dragStart: \"dragStart\",\n      dragEnd: \"dragEnd\"\n    },\n    exportAs: [\"matSliderThumb\"],\n    features: [i0.ɵɵProvidersFeature([MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n      provide: MAT_SLIDER_THUMB,\n      useExisting: MatSliderThumb\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderThumb]',\n      exportAs: 'matSliderThumb',\n      host: {\n        'class': 'mdc-slider__input',\n        'type': 'range',\n        '[attr.aria-valuetext]': '_valuetext()',\n        '(change)': '_onChange()',\n        '(input)': '_onInput()',\n        // TODO(wagnermaciel): Consider using a global event listener instead.\n        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n        '(blur)': '_onBlur()',\n        '(focus)': '_onFocus()'\n      },\n      providers: [MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_THUMB,\n        useExisting: MatSliderThumb\n      }]\n    }]\n  }], () => [], {\n    value: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }]\n  });\n})();\nclass MatSliderRangeThumb extends MatSliderThumb {\n  _cdr = inject(ChangeDetectorRef);\n  /** @docs-private */\n  getSibling() {\n    if (!this._sibling) {\n      this._sibling = this._slider._getInput(this._isEndThumb ? _MatThumb.START : _MatThumb.END);\n    }\n    return this._sibling;\n  }\n  _sibling;\n  /**\n   * Returns the minimum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n  getMinPos() {\n    const sibling = this.getSibling();\n    if (!this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n    return this._tickMarkOffset;\n  }\n  /**\n   * Returns the maximum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n  getMaxPos() {\n    const sibling = this.getSibling();\n    if (this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n    return this._slider._cachedWidth - this._tickMarkOffset;\n  }\n  _setIsLeftThumb() {\n    this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;\n  }\n  /** Whether this slider corresponds to the input on the left hand side. */\n  _isLeftThumb;\n  /** Whether this slider corresponds to the input with greater value. */\n  _isEndThumb;\n  constructor() {\n    super();\n    this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n    this._setIsLeftThumb();\n    this.thumbPosition = this._isEndThumb ? _MatThumb.END : _MatThumb.START;\n  }\n  _getDefaultValue() {\n    return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n  }\n  _onInput() {\n    super._onInput();\n    this._updateSibling();\n    if (!this._isActive) {\n      this._updateWidthInactive();\n    }\n  }\n  _onNgControlValueChange() {\n    super._onNgControlValueChange();\n    this.getSibling()?._updateMinMax();\n  }\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n    if (this._sibling) {\n      this._sibling._updateWidthActive();\n      this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n    }\n    super._onPointerDown(event);\n  }\n  _onPointerUp() {\n    super._onPointerUp();\n    if (this._sibling) {\n      setTimeout(() => {\n        this._sibling._updateWidthInactive();\n        this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n      });\n    }\n  }\n  _onPointerMove(event) {\n    super._onPointerMove(event);\n    if (!this._slider.step && this._isActive) {\n      this._updateSibling();\n    }\n  }\n  _fixValue(event) {\n    super._fixValue(event);\n    this._sibling?._updateMinMax();\n  }\n  _clamp(v) {\n    return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n  }\n  _updateMinMax() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    if (this._isEndThumb) {\n      this.min = Math.max(this._slider.min, sibling.value);\n      this.max = this._slider.max;\n    } else {\n      this.min = this._slider.min;\n      this.max = Math.min(this._slider.max, sibling.value);\n    }\n  }\n  _updateWidthActive() {\n    const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n    const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth - this._tickMarkOffset * 2;\n    const percentage = this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1;\n    const width = maxWidth * percentage + minWidth;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n  }\n  _updateWidthInactive() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    const maxWidth = this._slider._cachedWidth - this._tickMarkOffset * 2;\n    const midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2;\n    const _percentage = this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min);\n    const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n    // Extend the native input width by the radius of the ripple\n    let ripplePadding = this._slider._rippleRadius;\n    // If one of the inputs is maximally sized (the value of both thumbs is\n    // equal to the min or max), make that input take up all of the width and\n    // make the other unselectable.\n    if (percentage === 1) {\n      ripplePadding = 48;\n    } else if (percentage === 0) {\n      ripplePadding = 0;\n    }\n    const width = maxWidth * percentage + ripplePadding;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = '0px';\n    if (this._isLeftThumb) {\n      this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n      this._hostElement.style.right = 'auto';\n    } else {\n      this._hostElement.style.left = 'auto';\n      this._hostElement.style.right = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n    }\n  }\n  _updateStaticStyles() {\n    this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n  }\n  _updateSibling() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    sibling._updateMinMax();\n    if (this._isActive) {\n      sibling._updateWidthActive();\n    } else {\n      sibling._updateWidthInactive();\n    }\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n  writeValue(value) {\n    if (this._isControlInitialized || value !== null) {\n      this.value = value;\n      this._updateWidthInactive();\n      this._updateSibling();\n    }\n  }\n  _setValue(value) {\n    super._setValue(value);\n    this._updateWidthInactive();\n    this._updateSibling();\n  }\n  static ɵfac = function MatSliderRangeThumb_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSliderRangeThumb)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSliderRangeThumb,\n    selectors: [[\"input\", \"matSliderStartThumb\", \"\"], [\"input\", \"matSliderEndThumb\", \"\"]],\n    exportAs: [\"matSliderRangeThumb\"],\n    features: [i0.ɵɵProvidersFeature([MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n      provide: MAT_SLIDER_RANGE_THUMB,\n      useExisting: MatSliderRangeThumb\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderRangeThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n      exportAs: 'matSliderRangeThumb',\n      providers: [MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_RANGE_THUMB,\n        useExisting: MatSliderRangeThumb\n      }]\n    }]\n  }], () => [], null);\n})();\nclass MatSliderModule {\n  static ɵfac = function MatSliderModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSliderModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatSliderModule,\n    imports: [MatCommonModule, MatRippleModule, MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb],\n    exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatRippleModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb],\n      exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb]\n    }]\n  }], null, null);\n})();\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from '../../../../../../environments/environment';\nimport { EstudioHvDto, EstudioHvCreateDto, EstudioHvUpdateDto, NivelEducativoDto } from '../interfaces/perfil-academico.interface';\nimport { NotificationService } from '../../../../../core/services/notification.service';\n\n/**\n * Servicio para gestionar los estudios (EstudioHV) asociados a la hoja de vida de una persona.\n * Endpoints basados en EstudioHVController (backend):\n *  - POST   /api/estudio-hv/create-estudios\n *  - PUT    /api/estudio-hv/actualizar-estudio\n *  - GET    /api/estudio-hv/find-by-id-estudio/{id}\n *  - GET    /api/estudio-hv/search-all-nivel-educativo\n *  - DELETE /api/estudio-hv/eliminar-estudio-hv/{id}\n *  - GET    /api/estudio-hv/search-estudios-by-id-persona/{idPersona}\n */\n@Injectable({ providedIn: 'root' })\nexport class EstudiosHvService {\n  private readonly apiUrl = `${environment.hojaDeVidaApiUrl}/estudio-hv`;\n  private readonly http = inject(HttpClient);\n  private readonly notification = inject(NotificationService);\n\n  private readonly httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  /**\n   * Crea una lista de estudios (bulk create)\n   */\n  crearEstudios(estudios: EstudioHvCreateDto[]): Observable<EstudioHvDto[]> {\n    return this.http\n      .post<EstudioHvDto[]>(`${this.apiUrl}/create-estudios`, estudios, this.httpOptions)\n      .pipe(\n        tap(() => this.notification.showSuccess('Se ha guardado los estudios exitosamente.')),\n        catchError(this.handleError.bind(this))\n      );\n  }\n\n  /**\n   * Actualiza una lista de estudios (según backend reutiliza create)\n   */\n  actualizarEstudios(estudios: EstudioHvUpdateDto[]): Observable<EstudioHvDto[]> {\n    return this.http\n      .put<EstudioHvDto[]>(`${this.apiUrl}/actualizar-estudio`, estudios, this.httpOptions)\n      .pipe(\n        tap(() => this.notification.showSuccess('Se ha actualizado los estudios con éxito.')),\n        catchError(this.handleError.bind(this))\n      );\n  }\n\n  /**\n   * Obtiene un estudio por su id\n   */\n  obtenerEstudioPorId(id: number): Observable<EstudioHvDto> {\n    return this.http\n      .get<EstudioHvDto>(`${this.apiUrl}/find-by-id-estudio/${id}`)\n      .pipe(catchError(this.handleError.bind(this)));\n  }\n\n  /**\n   * Elimina un estudio por id (retorna boolean en backend, lo mapeamos a boolean)\n   */\n  eliminarEstudio(id: number): Observable<boolean> {\n    return this.http\n      .delete<boolean>(`${this.apiUrl}/eliminar-estudio-hv/${id}`)\n      .pipe(\n        tap((ok) => { if (ok) this.notification.showSuccess('Se ha borrado satisfactoriamente el estudio.'); }),\n        catchError(this.handleError.bind(this))\n      );\n  }\n\n  /**\n   * Lista todos los niveles educativos (catálogo)\n   */\n  obtenerNivelesEducativos(): Observable<NivelEducativoDto[]> {\n    return this.http\n      .get<NivelEducativoDto[]>(`${this.apiUrl}/search-all-nivel-educativo`)\n      .pipe(catchError(this.handleError.bind(this)));\n  }\n\n  /**\n   * Obtiene todos los estudios de una persona por su idPersona\n   */\n  obtenerEstudiosPorPersona(idPersona: number): Observable<EstudioHvDto[]> {\n    return this.http\n      .get<EstudioHvDto[]>(`${this.apiUrl}/search-estudios-by-id-persona/${idPersona}`)\n      .pipe(catchError(this.handleError.bind(this)));\n  }\n\n  private handleError(error: any) {\n    let errorMessage = 'Ha ocurrido un error inesperado';\n    if (error?.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else if (error) {\n      switch (error.status) {\n        case 400:\n          errorMessage = 'Solicitud inválida.';\n          break;\n        case 401:\n          errorMessage = 'No autorizado.';\n          break;\n        case 404:\n          errorMessage = 'Recurso no encontrado.';\n          break;\n        case 409:\n          errorMessage = 'Conflicto de datos (duplicado).';\n          break;\n        case 500:\n          errorMessage = 'Error interno del servidor.';\n          break;\n        default:\n          errorMessage = `Error ${error.status}: ${error.message}`;\n      }\n    }\n    this.notification.showError(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n","import { Directive, ElementRef, Input, HostListener, inject } from '@angular/core';\nimport { FormGroupDirective } from '@angular/forms';\n\n@Directive({\n  selector: '[scrollFirstInvalid]',\n  standalone: true\n})\nexport class ScrollFirstInvalidDirective {\n  private readonly formGroupDir = inject(FormGroupDirective, { optional: true });\n  private readonly hostEl = inject(ElementRef<HTMLElement>);\n\n  /** Distancia en px para dejar margen superior tras el scroll */\n  @Input() sfiOffset = 0;\n  /** Contenedor scroll custom: puede ser selector string o elemento */\n  @Input() sfiContainer?: string | HTMLElement;\n  /** Si enfocar automáticamente */\n  @Input() sfiFocus = true;\n\n  @HostListener('submit', ['$event'])\n  onHostSubmit(event: Event) {\n    const form = this.formGroupDir?.control;\n    if (!form) return; // No reactive form context\n    if (form.valid) return; // Nada que hacer si es válido\n    // NO marcamos touched (requisito usuario) — el componente decide.\n    this.scrollToFirstInvalid();\n  }\n\n  private resolveContainer(): HTMLElement | Window {\n    if (!this.sfiContainer) return window;\n    if (typeof this.sfiContainer === 'string') {\n      return (document.querySelector(this.sfiContainer) as HTMLElement) || window;\n    }\n    return this.sfiContainer;\n  }\n\n  private scrollToFirstInvalid(): void {\n    const root = this.hostEl.nativeElement;\n    const selector = [\n      'mat-form-field.ng-invalid',\n      '[formcontrolname].ng-invalid',\n      'input.ng-invalid',\n      'textarea.ng-invalid',\n      'select.ng-invalid'\n    ].join(',');\n  const first = root.querySelector(selector) as HTMLElement | null;\n    if (!first) return;\n\n    const field = (first.closest('mat-form-field') as HTMLElement) || first;\n    const container = this.resolveContainer();\n    const rect = field.getBoundingClientRect();\n\n    if (container === window) {\n      const top = window.scrollY + rect.top - this.sfiOffset;\n      window.scrollTo({ top, behavior: 'smooth' });\n    } else {\n      const cRect = (container as HTMLElement).getBoundingClientRect();\n      const currentScroll = (container as HTMLElement).scrollTop;\n      const top = currentScroll + (rect.top - cRect.top) - this.sfiOffset;\n      (container as HTMLElement).scrollTo({ top, behavior: 'smooth' });\n    }\n\n    if (this.sfiFocus) {\n  const focusable = field.querySelector('input, textarea, select, [tabindex], mat-select') as HTMLElement | null;\n      if (focusable) setTimeout(() => focusable.focus(), 150);\n    }\n  }\n}\n","import { FormControl, FormGroupDirective, NgForm } from \"@angular/forms\";\nimport { ErrorStateMatcher } from \"@angular/material/core\";\n\nexport class ControlTouchedErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, _form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || control.dirty));\n  }\n}","import { Provider } from '@angular/core';\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS, ErrorStateMatcher } from '@angular/material/core';\nimport { EsCoDateAdapter } from '../../core/date/custom-date-adapter';\nimport { ES_CO_DATE_FORMATS } from '../../core/date/date-formats';\nimport { ControlTouchedErrorStateMatcher } from '../utils/CustomControlStateMatcher';\n\n/**\n * Proveedores reutilizables para módulos/ componentes de Hoja de Vida\n * Centraliza locales y adaptadores de fecha y el ErrorStateMatcher custom.\n */\nexport const HOJA_DE_VIDA_PROVIDERS: Provider[] = [\n  { provide: MAT_DATE_LOCALE, useValue: 'es-CO' },\n  { provide: DateAdapter, useClass: EsCoDateAdapter, deps: [MAT_DATE_LOCALE] },\n  { provide: MAT_DATE_FORMATS, useValue: ES_CO_DATE_FORMATS },\n  { provide: ErrorStateMatcher, useClass: ControlTouchedErrorStateMatcher }\n];\n","import {\n  Component,\n  OnInit,\n  Signal,\n  inject,\n  ChangeDetectorRef,\n  signal,\n} from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  ReactiveFormsModule,\n  FormBuilder,\n  FormGroup,\n  FormArray,\n  Validators,\n} from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport {\n  EstudioHvCreateDto,\n  NivelEducativoDto,\n} from \"./interfaces/perfil-academico.interface\";\nimport { EstudiosHvService } from \"./services\";\nimport { AuthService } from \"../../../../core/auth/auth.service\";\nimport { Store } from \"@ngrx/store\";\nimport { selectIdHojaVida, selectIdPersona } from \"../../store\";\nimport { forkJoin, tap } from \"rxjs\";\nimport { ConfirmDialogService } from \"../../../../core/services\";\nimport { SkeletonBannerComponent } from \"../../../../core/components\";\nimport { ScrollFirstInvalidDirective } from \"../../../../core/directives\";\nimport { HOJA_DE_VIDA_PROVIDERS } from '../../../../shared/providers/custom.provider';\n\n\n@Component({\n  selector: \"app-perfil-academico\",\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatCardModule,\n    MatDividerModule,\n    ScrollFirstInvalidDirective,\n    SkeletonBannerComponent,\n  ],\n  providers: [...HOJA_DE_VIDA_PROVIDERS],\n  templateUrl: \"./perfil-academico.component.html\",\n  styleUrls: [\"./perfil-academico.component.scss\"],\n})\nexport class PerfilAcademicoComponent implements OnInit {\n  perfilForm: FormGroup;\n  nivelesEducativos: NivelEducativoDto[] = [];\n\n  idHojaVida: Signal<number>;\n  idPersona: Signal<number>;\n\n  // Opciones de graduado boolean -> UI\n  graduadoOptions = [\n    { value: true, label: \"Sí\" },\n    { value: false, label: \"No\" },\n  ];\n\n  //inject dependencies\n  private readonly estudiosService = inject(EstudiosHvService);\n  private readonly auth = inject(AuthService);\n  private readonly store = inject(Store);\n  private readonly confirm = inject(ConfirmDialogService);\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  constructor(private readonly fb: FormBuilder) {\n    this.idPersona = this.store.selectSignal(selectIdPersona);\n    this.idHojaVida = this.store.selectSignal(selectIdHojaVida);\n    this.perfilForm = this.fb.group({\n      estudios: this.fb.array([this.createEstudioFormGroup()]),\n    });\n  }\n\n  loading = signal(true);\n\n  ngOnInit(): void {\n    // Indicamos cargando mientras se obtienen niveles y estudios\n    forkJoin({\n      niveles: this.cargarNivelesEducativos(),\n      estudios: this.estudiosService.obtenerEstudiosPorPersona(\n        this.idPersona()\n      ),\n    }).subscribe(({ estudios }) => {\n      if (estudios) this.patchFormEstudios(estudios);\n      this.loading.set(false);\n    });\n  }\n\n  get estudiosArray() {\n    return this.perfilForm.get(\"estudios\") as FormArray<FormGroup>;\n  }\n\n  createEstudioFormGroup(): FormGroup {\n    return this.fb.group({\n      id: [null],\n      idHojaVida: [this.idHojaVida()],\n      nombreTitulo: [\"\", [Validators.required, Validators.maxLength(255)]],\n      graduado: [false, Validators.required],\n      idNivelEducativo: [null, Validators.required],\n      nombreInstitucion: [\"\", [Validators.required, Validators.maxLength(255)]],\n      semestresAprobados: [\n        0,\n        [Validators.required, Validators.min(0), Validators.max(16)],\n      ],\n    });\n  }\n\n  patchFormEstudios(estudios: any[]) {\n    this.estudiosArray.clear(); // Limpiar el array antes de cargar nuevos estudios\n    estudios.forEach((estudio) => {\n      this.estudiosArray.push(\n        this.fb.group({\n          id: [estudio.id],\n          idHojaVida: [this.idHojaVida()],\n          nombreTitulo: [\n            estudio.nombreTitulo,\n            [Validators.required, Validators.maxLength(255)],\n          ],\n          graduado: [estudio.graduado, Validators.required],\n          idNivelEducativo: [estudio.idNivelEducativo, Validators.required],\n          nombreInstitucion: [\n            estudio.nombreInstitucion,\n            [Validators.required, Validators.maxLength(255)],\n          ],\n          semestresAprobados: [\n            estudio.semestresAprobados,\n            [Validators.required, Validators.min(0), Validators.max(16)],\n          ],\n        })\n      );\n    });\n  }\n\n  agregarEstudio(): void {\n    this.estudiosArray.push(this.createEstudioFormGroup());\n  }\n\n  eliminarEstudio(index: number): void {\n    // Si la UI evita eliminar el único registro, hacemos early return defensivo\n    if (this.estudiosArray.length <= 1) return;\n\n    const grupo = this.estudiosArray.at(index) as FormGroup;\n    const id = grupo?.get(\"id\")?.value;\n\n    this.confirm\n      .open({\n        title: \"Confirmar eliminación\",\n        message: `¿Estás seguro de que deseas eliminar el estudio <strong>${\n          grupo?.get(\"nombreTitulo\")?.value\n        }</strong>?`,\n        type: \"delete\",\n      })\n      .subscribe((action) => {\n        //si se cancelo la accion de eliminar\n        if (!action) return;\n        const removeLocal = () => {\n          this.estudiosArray.removeAt(index);\n          // Forzar CD si algún control queda con estado sucio que no dispara automáticamente\n          this.cdr.markForCheck();\n        };\n        if (id) {\n          this.estudiosService\n            .eliminarEstudio(id)\n            .subscribe(() => removeLocal());\n        } else {\n          removeLocal();\n        }\n      });\n  }\n\n  private cargarNivelesEducativos() {\n    return this.estudiosService\n      .obtenerNivelesEducativos()\n      .pipe(tap((niveles) => (this.nivelesEducativos = niveles || [])));\n  }\n\n  onSubmit(): void {\n    if (!this.perfilForm.valid) {\n      this.perfilForm.markAllAsTouched();\n      return;\n    }\n    const payload: EstudioHvCreateDto[] = this.estudiosArray.controls.map(\n      (ctrl) => ctrl.value\n    );\n    // pendiente: cuando backend exponga actualización por lote, aquí decidir create vs update\n    this.estudiosService.crearEstudios(payload).subscribe((resp) => {\n      if (resp) this.patchFormEstudios(resp);\n      // Forzar CD si algún control queda con estado sucio que no dispara automáticamente\n      this.cdr.markForCheck();\n    });\n  }\n\n  // Métodos auxiliares para obtener controles específicos\n  getEstudioControl(index: number, field: string) {\n    return this.estudiosArray.at(index).get(field);\n  }\n}\n","<div class=\"perfil-academico-container\">\n  @if (loading()) {\n    <app-skeleton-banner></app-skeleton-banner>\n  } @else {\n  <form\n    [formGroup]=\"perfilForm\"\n    (ngSubmit)=\"onSubmit()\"\n    class=\"perfil-academico-form\"\n    scrollFirstInvalid\n  >\n  <div formArrayName=\"estudios\">\n      @for (estudio of estudiosArray.controls; track estudio; let i = $index) {\n      <mat-card class=\"titulo-section\">\n        <mat-card-header class=\"titulo-header\">\n          <mat-card-title>\n            <h3 class=\"titulo-label\">Título {{ i + 1 }}</h3>\n          </mat-card-title>\n          <div class=\"titulo-header-actions\">\n            <button\n              type=\"button\"\n              mat-stroked-button\n              color=\"error\"\n              class=\"eliminar-btn\"\n              (click)=\"eliminarEstudio(i)\"\n              [disabled]=\"estudiosArray.length === 1\"\n            >\n              <mat-icon>delete</mat-icon>\n              Eliminar Título {{ i + 1 }}\n            </button>\n          </div>\n        </mat-card-header>\n\n        <mat-card-content>\n          <div [formGroupName]=\"i\" class=\"titulo-form-group\">\n          <!-- Primera Fila: Nombre del Título -->\n          <div class=\"form-row\">\n            <mat-form-field appearance=\"fill\" class=\"form-field full-width\">\n              <mat-label>Título Académico</mat-label>\n              <input\n                matInput\n                formControlName=\"nombreTitulo\"\n                placeholder=\"Ingrese el título académico\"\n              />\n              <mat-icon matPrefix>school</mat-icon>\n              <mat-error\n                *ngIf=\"\n                  getEstudioControl(i, 'nombreTitulo')?.invalid &&\n                  getEstudioControl(i, 'nombreTitulo')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"getEstudioControl(i, 'nombreTitulo')?.errors?.['required']\"\n                  >El título académico es requerido</span\n                >\n                <span\n                  *ngIf=\"getEstudioControl(i, 'nombreTitulo')?.errors?.['maxlength']\"\n                  >Máximo 255 caracteres</span\n                >\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n          <!-- Segunda Fila: Graduado, Nivel Educativo, Institución -->\n          <div class=\"form-row\">\n            <mat-form-field appearance=\"fill\" class=\"form-field\">\n              <mat-label>Graduado</mat-label>\n              <mat-select formControlName=\"graduado\">\n                <mat-option *ngFor=\"let opcion of graduadoOptions\" [value]=\"opcion.value\">{{ opcion.label }}</mat-option>\n              </mat-select>\n              <mat-icon matPrefix>assignment_turned_in</mat-icon>\n              <mat-error\n                *ngIf=\"\n                  getEstudioControl(i, 'graduado')?.invalid &&\n                  getEstudioControl(i, 'graduado')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"getEstudioControl(i, 'graduado')?.errors?.['required']\"\n                  >Seleccione si está graduado</span\n                >\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\" class=\"form-field\">\n              <mat-label>Nivel Educativo</mat-label>\n              <mat-select formControlName=\"idNivelEducativo\">\n                <mat-option *ngFor=\"let nivel of nivelesEducativos\" [value]=\"nivel.id\">{{ nivel.nombre }}</mat-option>\n              </mat-select>\n              <mat-icon matPrefix>grade</mat-icon>\n              <mat-error\n                *ngIf=\"\n                  getEstudioControl(i, 'idNivelEducativo')?.invalid &&\n                  getEstudioControl(i, 'idNivelEducativo')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"getEstudioControl(i, 'idNivelEducativo')?.errors?.['required']\"\n                  >Seleccione el nivel educativo</span\n                >\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\" class=\"form-field\" [style.flex]=\"3\">\n              <mat-label\n                >Institución Educativa donde Cursó sus estudios</mat-label\n              >\n              <input\n                matInput\n                formControlName=\"nombreInstitucion\"\n                placeholder=\"Nombre de la institución\"\n              />\n              <mat-icon matPrefix>location_city</mat-icon>\n              <mat-error\n                *ngIf=\"\n                  getEstudioControl(i, 'nombreInstitucion')?.invalid &&\n                  getEstudioControl(i, 'nombreInstitucion')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"getEstudioControl(i, 'nombreInstitucion')?.errors?.['required']\"\n                  >La institución educativa es requerida</span\n                >\n                <span\n                  *ngIf=\"getEstudioControl(i, 'nombreInstitucion')?.errors?.['maxlength']\"\n                  >Máximo 255 caracteres</span\n                >\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n          <!-- Tercera Fila: Número de Semestres Aprobados -->\n          <div class=\"form-row\">\n            <div class=\"slider-container\">\n              <mat-label class=\"slider-label\"\n                >Número de Semestres Aprobados</mat-label\n              >\n              <div class=\"slider-field\">\n                <span class=\"slider-value\">{{\n                  getEstudioControl(i, \"semestresAprobados\")?.value || 0\n                }}</span>\n                <mat-slider\n                  class=\"semester-slider\"\n                  [min]=\"0\"\n                  [max]=\"16\"\n                  [step]=\"1\"\n                >\n                  <input matSliderThumb formControlName=\"semestresAprobados\" />\n                </mat-slider>\n                <span class=\"slider-max\">16</span>\n              </div>\n              <mat-error\n                *ngIf=\"\n                  getEstudioControl(i, 'semestresAprobados')?.invalid &&\n                  getEstudioControl(i, 'semestresAprobados')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"getEstudioControl(i, 'semestresAprobados')?.errors?.['required']\"\n                  >El número de semestres es requerido</span\n                >\n                <span\n                  *ngIf=\"getEstudioControl(i, 'semestresAprobados')?.errors?.['min']\"\n                  >Mínimo 0 semestres</span\n                >\n                <span\n                  *ngIf=\"getEstudioControl(i, 'semestresAprobados')?.errors?.['max']\"\n                  >Máximo 16 semestres</span\n                >\n              </mat-error>\n            </div>\n          </div>\n\n          <!-- Separador entre títulos - no necesario con mat-card -->\n        </div>\n        </mat-card-content>\n      </mat-card>\n      }\n    </div>\n\n    <!-- Botón Agregar Estudios -->\n    <div class=\"agregar-estudios-container\">\n      <button\n        type=\"button\"\n        mat-raised-button\n        color=\"primary\"\n        class=\"agregar-estudios-btn\"\n  (click)=\"agregarEstudio()\"\n      >\n        <mat-icon>add</mat-icon>\n  Agregar estudio\n      </button>\n    </div>\n\n    <!-- Botones de Acción -->\n    <div class=\"form-actions\">\n      <button\n        type=\"submit\"\n        mat-flat-button\n        color=\"primary\"\n      >\n        <mat-icon>save</mat-icon>\n        Guardar\n      </button>\n    </div>\n  </form>\n  }\n</div>\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from '../../../../../../environments/environment';\nimport { NotificationService } from '../../../../../core/services/notification.service';\nimport { OtroEstudioHvDto, OtroEstudioHvCreateDto, OtroEstudioHvUpdateDto } from '../interfaces/otros-estudios.interface';\n// Upsert admite id opcional (cuando viene id se actualiza en backend)\nexport type OtroEstudioHvUpsertDto = Partial<OtroEstudioHvDto> & { idHojaVida: number };\n\n@Injectable({ providedIn: 'root' })\nexport class OtrosEstudiosService {\n  private readonly apiUrl = `${environment.hojaDeVidaApiUrl}/otro-estudio-hv`;\n  private readonly http = inject(HttpClient);\n  private readonly notification = inject(NotificationService);\n\n\n  crearOtrosEstudios(estudios: (OtroEstudioHvCreateDto | OtroEstudioHvUpsertDto | OtroEstudioHvDto)[]): Observable<OtroEstudioHvDto[]> {\n    return this.http\n      .post<OtroEstudioHvDto[]>(`${this.apiUrl}/create-otro-estudio`, estudios)\n      .pipe(\n        tap(() => this.notification.showSuccess('Se han guardado los otros estudios satisfactoriamente.')),\n        catchError(this.handleError)\n      );\n  }\n\n  actualizarOtroEstudio(estudio: OtroEstudioHvUpdateDto): Observable<OtroEstudioHvDto> {\n    return this.http\n      .put<OtroEstudioHvDto>(`${this.apiUrl}/actualizar-otro-estudio`, estudio)\n      .pipe(\n        tap(() => this.notification.showSuccess('Se ha actualizado el estudio.')),\n        catchError(this.handleError)\n      );\n  }\n\n  obtenerOtroEstudioPorId(id: number): Observable<OtroEstudioHvDto> {\n    return this.http\n      .get<OtroEstudioHvDto>(`${this.apiUrl}/find-by-id-otro-estudio/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  eliminarOtroEstudio(id: number): Observable<boolean> {\n    return this.http\n      .delete<boolean>(`${this.apiUrl}/eliminar-otro-estudio-hv/${id}`)\n      .pipe(\n        tap(ok => { if (ok) this.notification.showSuccess('Estudio eliminado.'); }),\n        catchError(this.handleError)\n      );\n  }\n\n  obtenerOtrosEstudiosPorPersona(idPersona: number): Observable<OtroEstudioHvDto[]> {\n    return this.http\n      .get<OtroEstudioHvDto[]>(`${this.apiUrl}/search-otros-estudios-by-id-persona/${idPersona}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError = (error: any) => {\n    let errorMessage = 'Ha ocurrido un error inesperado';\n    if (error?.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else if (error) {\n      switch (error.status) {\n        case 400: errorMessage = 'Solicitud inválida.'; break;\n        case 401: errorMessage = 'No autorizado.'; break;\n        case 404: errorMessage = 'Recurso no encontrado.'; break;\n        case 409: errorMessage = 'Conflicto de datos.'; break;\n        case 500: errorMessage = 'Error interno del servidor.'; break;\n        default: errorMessage = `Error ${error.status}: ${error.message}`;\n      }\n    }\n    this.notification.showError(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  };\n}\n","import { Component, OnInit, Signal, inject, signal, ChangeDetectorRef } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  ReactiveFormsModule,\n  FormBuilder,\n  FormGroup,\n  FormArray,\n  Validators,\n} from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport {\n  OtroEstudioHvDto,\n  GraduadoOption,\n} from \"./interfaces/otros-estudios.interface\";\nimport { OtrosEstudiosService } from \"./services/otros-estudios.service\";\nimport { Store } from \"@ngrx/store\";\nimport { selectIdHojaVida, selectIdPersona } from \"../../store\";\nimport { SkeletonBannerComponent } from \"../../../../core/components\";\nimport { ConfirmDialogService } from \"../../../../core/services\";\nimport { ScrollFirstInvalidDirective } from \"../../../../core/directives\";\nimport { HOJA_DE_VIDA_PROVIDERS } from '../../../../shared/providers/custom.provider';\n\n@Component({\n  selector: \"app-otros-estudios\",\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n    ScrollFirstInvalidDirective,\n    SkeletonBannerComponent,\n  ],\n  providers: [\n    ...HOJA_DE_VIDA_PROVIDERS\n  ],\n  templateUrl: \"./otros-estudios.component.html\",\n  styleUrls: [\"./otros-estudios.component.scss\"],\n})\nexport class OtrosEstudiosComponent implements OnInit {\n  estudiosForm: FormGroup;\n  loading = signal(true);\n  idHojaVida: Signal<number>;\n  idPersona: Signal<number>;\n\n  graduadoOptions: GraduadoOption[] = [\n    { value: true, label: \"Sí\" },\n    { value: false, label: \"No\" },\n  ];\n\n  private readonly otrosService = inject(OtrosEstudiosService);\n  private readonly store = inject(Store);\n  private readonly confirm = inject(ConfirmDialogService);\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  constructor(private readonly fb: FormBuilder) {\n    this.estudiosForm = this.fb.group({\n      estudios: this.fb.array([]),\n    });\n    this.idHojaVida = this.store.selectSignal(selectIdHojaVida);\n    this.idPersona = this.store.selectSignal(selectIdPersona);\n  }\n\n  ngOnInit(): void {\n    // Cargar existentes si los hay\n    const personaId = this.idPersona();\n    if (personaId) {\n      this.otrosService.obtenerOtrosEstudiosPorPersona(personaId).subscribe({\n        next: (lista) => {\n          if (lista?.length) {\n            this.patchForm(lista);\n          }\n          this.loading.set(false);\n        },\n        error: () => {\n          this.agregarEstudio();\n          this.loading.set(false);\n        },\n      });\n    } else {\n      this.agregarEstudio();\n      this.loading.set(false);\n    }\n  }\n\n  get estudiosArray(): FormArray {\n    return this.estudiosForm.get(\"estudios\") as FormArray;\n  }\n\n  createEstudioFormGroup(data?: Partial<OtroEstudioHvDto>): FormGroup {\n    return this.fb.group({\n      id: [data?.id ?? null],\n      idHojaVida: [data?.idHojaVida ?? this.idHojaVida()],\n      nombreCurso: [\n        data?.nombreCurso ?? \"\",\n        [Validators.required, Validators.maxLength(255)],\n      ],\n      graduado: [data?.graduado ?? false, Validators.required],\n      numeroHoras: [\n        data?.numeroHoras ?? 1,\n        [Validators.required, Validators.min(1), Validators.max(9999)],\n      ],\n      nombreInstitucion: [\n        data?.nombreInstitucion ?? \"\",\n        [Validators.required, Validators.maxLength(255)],\n      ],\n    });\n  }\n\n  private patchForm(lista: OtroEstudioHvDto[]) {\n    const arr = this.estudiosArray;\n    arr.clear();\n    lista.forEach((item) => arr.push(this.createEstudioFormGroup(item)));\n  }\n\n  agregarEstudio(): void {\n    this.estudiosArray.push(this.createEstudioFormGroup());\n  }\n\n  eliminarEstudio(index: number): void {\n    const group = this.estudiosArray.at(index) as FormGroup | null;\n    const nombre = (group?.get(\"nombreCurso\")?.value || \"\").trim();\n    const label = nombre ? `\"${nombre}\"` : \"seleccionado\";\n    this.confirm\n      .open({\n        title: \"Confirmar eliminación\",\n        message: `¿Deseas eliminar el estudio <strong>${label}</strong>?`,\n        type: \"delete\",\n      })\n      .subscribe((ok) => {\n        if (!ok) return;\n        const id = group?.get(\"id\")?.value;\n        if (id) {\n          this.otrosService.eliminarOtroEstudio(id).subscribe(() => {\n            this.estudiosArray.removeAt(index);\n            this.cdr.detectChanges();\n          });\n        } else {\n          this.estudiosArray.removeAt(index);\n          this.cdr.detectChanges();\n        }\n      });\n  }\n\n  trackEstudio = (control: any, index: number) => control?.value?.id ?? index;\n\n  onSubmit(): void {\n    if (!this.estudiosForm.valid) {\n      this.markFormGroupTouched(this.estudiosForm);\n      return;\n    }\n    const payload = this.estudiosForm.value.estudios as OtroEstudioHvDto[];\n    this.otrosService.crearOtrosEstudios(payload).subscribe((est) =>\n      this.estudiosArray.controls.forEach((control, index) => {\n        control.patchValue(est[index]);\n      })\n    );\n  }\n\n  private markFormGroupTouched(formGroup: FormGroup): void {\n    Object.keys(formGroup.controls).forEach((key) => {\n      const control = formGroup.get(key);\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      } else if (control instanceof FormArray) {\n        control.controls.forEach((arrayControl) => {\n          if (arrayControl instanceof FormGroup) {\n            this.markFormGroupTouched(arrayControl);\n          } else {\n            arrayControl.markAsTouched();\n          }\n        });\n      } else {\n        control?.markAsTouched();\n      }\n    });\n  }\n\n  // Métodos auxiliares para obtener controles específicos\n  getEstudioControl(index: number, field: string) {\n    return this.estudiosArray.at(index).get(field);\n  }\n}\n","<div class=\"otros-estudios-container\">\n  @if (loading()) {\n    <app-skeleton-banner></app-skeleton-banner>\n  } @else {\n  <form\n    [formGroup]=\"estudiosForm\"\n    (ngSubmit)=\"onSubmit()\"\n    class=\"otros-estudios-form\"\n    scrollFirstInvalid\n  >\n    <div formArrayName=\"estudios\">\n      @for (estudio of estudiosArray.controls; track estudio; let i = $index) {\n      <mat-card class=\"estudio-section\">\n        <mat-card-header class=\"estudio-header\">\n          <mat-card-title>\n            <h3 class=\"estudio-label\">Estudio {{ i + 1 }}</h3>\n          </mat-card-title>\n          <div class=\"estudio-header-actions\">\n            <button\n              type=\"button\"\n              mat-stroked-button\n              color=\"error\"\n              class=\"eliminar-btn\"\n              (click)=\"eliminarEstudio(i)\"\n            >\n              <mat-icon>delete</mat-icon>\n              Eliminar Estudio {{ i + 1 }}\n            </button>\n          </div>\n        </mat-card-header>\n\n        <mat-card-content>\n          <div [formGroupName]=\"i\" class=\"estudio-form-group\">\n            <!-- Primera Fila: Nombre del Curso -->\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"fill\" class=\"form-field full-width\">\n                <mat-label>Nombre del Curso</mat-label>\n                <input\n                  matInput\n                  formControlName=\"nombreCurso\"\n                  placeholder=\"Ingrese el nombre del curso\"\n                />\n                <mat-icon matPrefix>subject</mat-icon>\n                <mat-error\n                  *ngIf=\"\n                    getEstudioControl(i, 'nombreCurso')?.invalid &&\n                    getEstudioControl(i, 'nombreCurso')?.touched\n                  \"\n                >\n                  <span\n                    *ngIf=\"getEstudioControl(i, 'nombreCurso')?.errors?.['required']\"\n                    >El nombre del curso es requerido</span\n                  >\n                  <span\n                    *ngIf=\"getEstudioControl(i, 'nombreCurso')?.errors?.['maxlength']\"\n                    >Máximo 255 caracteres</span\n                  >\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <!-- Segunda Fila: Institución Educativa (full width) -->\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"fill\" class=\"form-field full-width\">\n                <mat-label>Institución Educativa donde cursó el estudio</mat-label>\n                <input\n                  matInput\n                  formControlName=\"nombreInstitucion\"\n                  placeholder=\"Nombre de la institución\"\n                />\n                <mat-icon matPrefix>location_city</mat-icon>\n                <mat-error *ngIf=\"getEstudioControl(i, 'nombreInstitucion')?.invalid && getEstudioControl(i, 'nombreInstitucion')?.touched\">\n                  <span *ngIf=\"getEstudioControl(i, 'nombreInstitucion')?.errors?.['required']\">La institución educativa es requerida</span>\n                  <span *ngIf=\"getEstudioControl(i, 'nombreInstitucion')?.errors?.['maxlength']\">Máximo 255 caracteres</span>\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <!-- Tercera Fila: Graduado, Número de Horas -->\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\n                <mat-label>Graduado</mat-label>\n                <mat-select formControlName=\"graduado\">\n                  <mat-option\n                    *ngFor=\"let opcion of graduadoOptions\"\n                    [value]=\"opcion.value\"\n                  >\n                    {{ opcion.label }}\n                  </mat-option>\n                </mat-select>\n                <mat-icon matPrefix>assignment_turned_in</mat-icon>\n                <mat-error\n                  *ngIf=\"\n                    getEstudioControl(i, 'graduado')?.invalid &&\n                    getEstudioControl(i, 'graduado')?.touched\n                  \"\n                >\n                  <span\n                    *ngIf=\"getEstudioControl(i, 'graduado')?.errors?.['required']\"\n                    >Seleccione si está graduado</span\n                  >\n                </mat-error>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\n                <mat-label>Número de Horas del Curso</mat-label>\n                <input\n                  matInput\n                  type=\"number\"\n                  formControlName=\"numeroHoras\"\n                  min=\"1\"\n                  max=\"9999\"\n                />\n                <mat-icon matPrefix>access_time</mat-icon>\n                <mat-error\n                  *ngIf=\"\n                    getEstudioControl(i, 'numeroHoras')?.invalid &&\n                    getEstudioControl(i, 'numeroHoras')?.touched\n                  \"\n                >\n                  <span\n                    *ngIf=\"getEstudioControl(i, 'numeroHoras')?.errors?.['required']\"\n                    >El número de horas es requerido</span\n                  >\n                  <span\n                    *ngIf=\"getEstudioControl(i, 'numeroHoras')?.errors?.['min']\"\n                    >Mínimo 1 hora</span\n                  >\n                  <span\n                    *ngIf=\"getEstudioControl(i, 'numeroHoras')?.errors?.['max']\"\n                    >Máximo 9999 horas</span\n                  >\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n      }\n    </div>\n\n    <!-- Botón Agregar Otros Estudios -->\n    <div class=\"agregar-estudios-container\">\n      <button\n        type=\"button\"\n        mat-raised-button\n        color=\"primary\"\n        class=\"agregar-estudios-btn\"\n        (click)=\"agregarEstudio()\"\n      >\n        <mat-icon>add</mat-icon>\n        Agregar otros estudios\n      </button>\n    </div>\n\n    <!-- Botones de Acción -->\n    <div class=\"form-actions\">\n      <button\n        type=\"submit\"\n        mat-flat-button\n        color=\"primary\"\n      >\n        <mat-icon>save</mat-icon>\n        Guardar\n      </button>\n    </div>\n  </form>\n  }\n</div>\n","import { Component, OnInit, Signal, inject, signal, ChangeDetectorRef } from '@angular/core';\nimport moment from 'moment';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule, DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, ErrorStateMatcher } from '@angular/material/core';\nimport { ExperienciaHvDto, TipoExperienciaOption } from './interfaces/experiencia.interface';\nimport { ExperienciaService } from './services/experiencia.service';\nimport { Store } from '@ngrx/store';\nimport { selectIdHojaVida, selectIdPersona } from '../../store';\nimport { SkeletonBannerComponent } from '../../../../core/components';\nimport { ScrollFirstInvalidDirective } from '../../../../core/directives';\nimport { ConfirmDialogService } from '../../../../core/services';\nimport { HOJA_DE_VIDA_PROVIDERS } from '../../../../shared/providers/custom.provider';\n\n@Component({\n  selector: 'app-experiencia',\n  // standalone implícito en Angular 19+\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    SkeletonBannerComponent,\n    ScrollFirstInvalidDirective\n  ],\n  templateUrl: './experiencia.component.html',\n  styleUrls: ['./experiencia.component.scss'],\n  providers: [\n    ...HOJA_DE_VIDA_PROVIDERS\n  ]\n})\nexport class ExperienciaComponent implements OnInit {\n  experienciaForm: FormGroup;\n  loading = signal(true);\n  tiposExperienciaSignal = signal<TipoExperienciaOption[]>([]);\n  idHojaVida: Signal<number>;\n  idPersona: Signal<number>;\n  trabajoActualOptions = [\n    { value: 'si', label: 'Sí' },\n    { value: 'no', label: 'No' }\n  ];\n\n  private readonly service = inject(ExperienciaService);\n  private readonly store = inject(Store);\n  private readonly confirm = inject(ConfirmDialogService);\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  constructor(private readonly fb: FormBuilder) {\n    this.experienciaForm = this.fb.group({\n      experiencias: this.fb.array([])\n    });\n    this.idHojaVida = this.store.selectSignal(selectIdHojaVida);\n    this.idPersona = this.store.selectSignal(selectIdPersona);\n  }\n\n  ngOnInit(): void {\n    const idPersona = this.idPersona();\n    // Cargar tipos y experiencias en paralelo\n    this.service.buscarTiposExperiencia().subscribe((tipos) => {\n      this.tiposExperienciaSignal.set(tipos.map(t => ({ value: t.id, label: t.nombre })));\n      if (idPersona) {\n        this.service.obtenerExperienciasPorPersona(idPersona).subscribe((lista) => {\n          if (lista?.length) {\n            this.patchForm(lista);\n          }\n          this.loading.set(false);\n        });\n      } else {\n        this.agregarExperiencia();\n        this.loading.set(false);\n      }\n    });\n  }\n\n  get experienciasArray(): FormArray { return this.experienciaForm.get('experiencias') as FormArray; }\n\n  createExperienciaFormGroup(data?: Partial<ExperienciaHvDto>): FormGroup {\n    const fechaDesdeParsed = data?.fechaDesde ? this.toDate(data.fechaDesde) : null;\n    const fechaHastaParsed = data?.fechaHasta ? this.toDate(data.fechaHasta) : null;\n    return this.fb.group({\n      id: [data?.id ?? null],\n      idHojaVida: [data?.idHojaVida ?? this.idHojaVida()],\n      idTipoExperiencia: [data?.idTipoExperiencia ?? null, Validators.required],\n      descripcionPerfil: [data?.descripcionPerfil ?? '', [Validators.required, Validators.maxLength(800)]],\n      nombreEmpresa: [data?.nombreEmpresa ?? '', [Validators.required, Validators.maxLength(255)]],\n      nombreCargo: [data?.nombreCargo ?? '', [Validators.required, Validators.maxLength(255)]],\n      dependenciaCargo: [data?.dependenciaCargo ?? '', [Validators.required, Validators.maxLength(255)]],\n      fechaDesde: [fechaDesdeParsed, Validators.required],\n      fechaHasta: [fechaHastaParsed],\n      esTrabajoActual: [data?.fechaHasta ? 'no' : 'si', Validators.required]\n    });\n  }\n\n  private patchForm(lista: ExperienciaHvDto[]) {\n    const arr = this.experienciasArray; arr.clear();\n    lista.forEach(item => arr.push(this.createExperienciaFormGroup(item)));\n  }\n\n  agregarExperiencia(): void { this.experienciasArray.push(this.createExperienciaFormGroup()); }\n\n  eliminarExperiencia(index: number): void {\n    const group = this.experienciasArray.at(index) as FormGroup | null;\n    const empresa = (group?.get('nombreEmpresa')?.value || '').trim();\n    const cargo = (group?.get('nombreCargo')?.value || '').trim();\n    const label = (cargo || empresa) ? `\"${cargo || empresa}\"` : 'seleccionado';\n    this.confirm.open({\n      title: 'Confirmar eliminación',\n      message: `¿Deseas eliminar el registro de experiencia <strong>${label}</strong>?`,\n      type: 'delete'\n    }).subscribe(ok => {\n      if (!ok) return;\n      const id = group?.get('id')?.value;\n      if (id) {\n        this.service.eliminarExperiencia(id).subscribe(() => {\n          this.experienciasArray.removeAt(index);\n          this.cdr.detectChanges();\n        });\n      } else {\n        this.experienciasArray.removeAt(index);\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (!this.experienciaForm.valid) {\n      this.markFormGroupTouched(this.experienciaForm);\n      return;\n    }\n    const raw = this.experienciaForm.value.experiencias as any[]; // incluye campo auxiliar esTrabajoActual\n    const idHv = this.idHojaVida();\n    const payload: ExperienciaHvDto[] = raw.map(e => {\n      const fechaDesde = e.fechaDesde ? this.toDate(e.fechaDesde) : null;\n      let fechaHasta = null;\n      if (e.esTrabajoActual !== 'si') {\n        fechaHasta = e.fechaHasta ? this.toDate(e.fechaHasta) : null;\n      }\n      return {\n        id: e.id ?? null,\n        idHojaVida: e.idHojaVida ?? idHv,\n        idTipoExperiencia: e.idTipoExperiencia,\n        descripcionPerfil: e.descripcionPerfil,\n        nombreEmpresa: e.nombreEmpresa,\n        nombreCargo: e.nombreCargo,\n        dependenciaCargo: e.dependenciaCargo,\n        fechaDesde,\n        fechaHasta\n      };\n    });\n    this.service.guardarExperiencias(payload).subscribe(listaActualizada => {\n      // Reemplazar ids devueltos\n      this.experienciasArray.controls.forEach((control, idx) => control.patchValue(listaActualizada[idx]));\n    });\n  }\n\n  private markFormGroupTouched(formGroup: FormGroup): void {\n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      } else if (control instanceof FormArray) {\n        control.controls.forEach(arrayControl => {\n          if (arrayControl instanceof FormGroup) {\n            this.markFormGroupTouched(arrayControl);\n          } else {\n            arrayControl.markAsTouched();\n          }\n        });\n      } else {\n        control?.markAsTouched();\n      }\n    });\n  }\n\n  // Métodos auxiliares para obtener controles específicos\n  getExperienciaControl(index: number, field: string) {\n    return this.experienciasArray.at(index).get(field);\n  }\n\n  // Verificar si debe deshabilitar la fecha de retiro\n  isRetiroDisabled(index: number): boolean { return this.getExperienciaControl(index, 'esTrabajoActual')?.value === 'si'; }\n\n  // Al cambiar trabajo actual, reiniciar fecha de retiro si es trabajo actual\n  onTrabajoActualChange(index: number): void {\n    if (this.isRetiroDisabled(index)) {\n      this.getExperienciaControl(index, 'fechaHasta')?.setValue(null);\n    }\n  }\n\n  private toDate(value: string | Date): Date | null {\n    if (!value) return null;\n    if (value instanceof Date) return value;\n    // Intentar formato backend 'YYYY-MM-DD'\n    const m = moment(value, ['YYYY-MM-DD', moment.ISO_8601], true);\n    return m.isValid() ? m.toDate() : null;\n  }\n\n  trackExperiencia = (control: any, index: number) => control?.value?.id ?? index;\n}\n","<div class=\"experiencia-container\">\n  @if (loading()) {\n    <app-skeleton-banner />\n  } @else {\n  <form [formGroup]=\"experienciaForm\" (ngSubmit)=\"onSubmit()\" class=\"experiencia-form\" scrollFirstInvalid>\n    <div formArrayName=\"experiencias\">\n  @for (experiencia of experienciasArray.controls; track experiencia; let i = $index) {\n      <mat-card class=\"experiencia-section\">\n        <mat-card-header class=\"experiencia-header\">\n          <mat-card-title>\n            <h3 class=\"experiencia-label\">Experiencia {{ i + 1 }}</h3>\n          </mat-card-title>\n          <div class=\"experiencia-header-actions\">\n            <button\n              type=\"button\"\n              mat-stroked-button\n              color=\"error\"\n              class=\"eliminar-btn\"\n              (click)=\"eliminarExperiencia(i)\"\n            >\n              <mat-icon>delete</mat-icon>\n              Eliminar Experiencia {{ i + 1 }}\n            </button>\n          </div>\n        </mat-card-header>\n\n        <mat-card-content>\n          <div [formGroupName]=\"i\" class=\"experiencia-form-group\">\n            <!-- Descripción Perfil -->\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"fill\" class=\"form-field full-width\">\n                <mat-label>Descripción Perfil</mat-label>\n                <textarea\n                  matInput\n                  formControlName=\"descripcionPerfil\"\n                  placeholder=\"Describe el perfil / funciones principales\"\n                  rows=\"4\"\n                  maxlength=\"800\"\n                ></textarea>\n                <mat-icon matPrefix>description</mat-icon>\n                <mat-hint align=\"end\">{{ getExperienciaControl(i, 'descripcionPerfil')?.value?.length || 0 }}/800</mat-hint>\n                @if (getExperienciaControl(i, 'descripcionPerfil')?.invalid && getExperienciaControl(i, 'descripcionPerfil')?.touched) {\n                  <mat-error>\n                    @if (getExperienciaControl(i, 'descripcionPerfil')?.errors?.['required']) {<span>La descripción es requerida</span>}\n                    @if (getExperienciaControl(i, 'descripcionPerfil')?.errors?.['maxlength']) {<span>Máximo 800 caracteres</span>}\n                  </mat-error>\n                }\n              </mat-form-field>\n            </div>\n\n            <!-- Tipo de Experiencia y Nombre de la Empresa -->\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\n                <mat-label>Tipo de Experiencia</mat-label>\n                <mat-select formControlName=\"idTipoExperiencia\">\n                  @for (tipo of tiposExperienciaSignal(); track tipo.value) {\n                    <mat-option [value]=\"tipo.value\">{{ tipo.label }}</mat-option>\n                  }\n                </mat-select>\n                <mat-icon matPrefix>work</mat-icon>\n                @if (getExperienciaControl(i, 'idTipoExperiencia')?.invalid && getExperienciaControl(i, 'idTipoExperiencia')?.touched) {\n                  <mat-error>\n                    @if (getExperienciaControl(i, 'idTipoExperiencia')?.errors?.['required']) {<span>Seleccione el tipo de experiencia</span>}\n                  </mat-error>\n                }\n              </mat-form-field>\n\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\n                <mat-label>Nombre de la Empresa</mat-label>\n                <input\n                  matInput\n                  formControlName=\"nombreEmpresa\"\n                  placeholder=\"Ingrese el nombre de la empresa\"\n                />\n                <mat-icon matPrefix>business</mat-icon>\n                @if (getExperienciaControl(i, 'nombreEmpresa')?.invalid && getExperienciaControl(i, 'nombreEmpresa')?.touched) {\n                  <mat-error>\n                    @if (getExperienciaControl(i, 'nombreEmpresa')?.errors?.['required']) {<span>El nombre de la empresa es requerido</span>}\n                    @if (getExperienciaControl(i, 'nombreEmpresa')?.errors?.['maxlength']) {<span>Máximo 255 caracteres</span>}\n                  </mat-error>\n                }\n              </mat-form-field>\n            </div>\n\n            <!-- Nombre del Cargo y Dependencia -->\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\n                <mat-label>Nombre del Cargo</mat-label>\n                <input\n                  matInput\n                  formControlName=\"nombreCargo\"\n                  placeholder=\"Ingrese el nombre del cargo\"\n                />\n                <mat-icon matPrefix>person_outline</mat-icon>\n                @if (getExperienciaControl(i, 'nombreCargo')?.invalid && getExperienciaControl(i, 'nombreCargo')?.touched) {\n                  <mat-error>\n                    @if (getExperienciaControl(i, 'nombreCargo')?.errors?.['required']) {<span>El nombre del cargo es requerido</span>}\n                    @if (getExperienciaControl(i, 'nombreCargo')?.errors?.['maxlength']) {<span>Máximo 255 caracteres</span>}\n                  </mat-error>\n                }\n              </mat-form-field>\n\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\n                <mat-label>Dependencia donde Desempeñó el Cargo</mat-label>\n                <input\n                  matInput\n                  formControlName=\"dependenciaCargo\"\n                  placeholder=\"Ingrese la dependencia\"\n                />\n                <mat-icon matPrefix>account_balance</mat-icon>\n                @if (getExperienciaControl(i, 'dependenciaCargo')?.invalid && getExperienciaControl(i, 'dependenciaCargo')?.touched) {\n                  <mat-error>\n                    @if (getExperienciaControl(i, 'dependenciaCargo')?.errors?.['required']) {<span>La dependencia es requerida</span>}\n                    @if (getExperienciaControl(i, 'dependenciaCargo')?.errors?.['maxlength']) {<span>Máximo 255 caracteres</span>}\n                  </mat-error>\n                }\n              </mat-form-field>\n            </div>\n\n            <!-- Trabajo Actual, Fecha de Inicio y Fecha de Retiro -->\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\n                <mat-label>¿Es su Trabajo Actual?</mat-label>\n                <mat-select \n                  formControlName=\"esTrabajoActual\"\n                  (selectionChange)=\"onTrabajoActualChange(i)\"\n                >\n                  <mat-option\n                    *ngFor=\"let opcion of trabajoActualOptions\"\n                    [value]=\"opcion.value\"\n                  >\n                    {{ opcion.label }}\n                  </mat-option>\n                </mat-select>\n                <mat-icon matPrefix>check_circle</mat-icon>\n                @if (getExperienciaControl(i, 'esTrabajoActual')?.invalid && getExperienciaControl(i, 'esTrabajoActual')?.touched) {\n                  <mat-error>\n                    @if (getExperienciaControl(i, 'esTrabajoActual')?.errors?.['required']) {<span>Debe indicar si es su trabajo actual</span>}\n                  </mat-error>\n                }\n              </mat-form-field>\n\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\n                <mat-label>Fecha de Inicio del Cargo</mat-label>\n                <input\n                  matInput\n                  [matDatepicker]=\"fechaInicioPicker\"\n                  formControlName=\"fechaDesde\"\n                  placeholder=\"DD/MM/AAAA\"\n                />\n                <mat-datepicker-toggle\n                  matIconSuffix\n                  [for]=\"fechaInicioPicker\"\n                ></mat-datepicker-toggle>\n                <mat-datepicker #fechaInicioPicker></mat-datepicker>\n                <mat-icon matPrefix>event</mat-icon>\n                @if (getExperienciaControl(i, 'fechaDesde')?.invalid && getExperienciaControl(i, 'fechaDesde')?.touched) {\n                  <mat-error>\n                    @if (getExperienciaControl(i, 'fechaDesde')?.errors?.['required']) {<span>La fecha de inicio es requerida</span>}\n                  </mat-error>\n                }\n              </mat-form-field>\n\n              @if (!isRetiroDisabled(i)) {\n              <mat-form-field appearance=\"fill\" class=\"form-field\">\n                <mat-label>Fecha de Retiro del Cargo</mat-label>\n                <input\n                  matInput\n                  [matDatepicker]=\"fechaRetiroPicker\"\n                  formControlName=\"fechaHasta\"\n                  placeholder=\"DD/MM/AAAA\"\n                  [min]=\"getExperienciaControl(i,'fechaDesde')?.value\"\n                />\n                <mat-datepicker-toggle matIconSuffix [for]=\"fechaRetiroPicker\"></mat-datepicker-toggle>\n                <mat-datepicker #fechaRetiroPicker></mat-datepicker>\n                <mat-icon matPrefix>event_busy</mat-icon>\n                @if(getExperienciaControl(i,'fechaHasta')?.errors?.matDatepickerMin){\n                <mat-error>\n                  La fecha de retiro debe ser mayor que la fecha de inicio.\n                </mat-error>\n                }\n              </mat-form-field>\n              }\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n      }\n    </div>\n\n    <!-- Botón Agregar Experiencia -->\n    <div class=\"agregar-experiencia-container\">\n      <button\n        type=\"button\"\n        mat-raised-button\n        color=\"primary\"\n        class=\"agregar-experiencia-btn\"\n        (click)=\"agregarExperiencia()\"\n      >\n        <mat-icon>add</mat-icon>\n        Agregar Experiencia\n      </button>\n    </div>\n\n    <!-- Botones de Acción -->\n    <div class=\"form-actions\">\n      <button\n        type=\"submit\"\n        mat-flat-button\n        color=\"primary\"\n      >\n        <mat-icon>save</mat-icon>\n        Guardar\n      </button>\n    </div>\n  </form>\n  }\n</div>\n","import { inject, Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../../../../environments/environment\";\nimport { NotificationService } from \"../../../../../core/services\";\nimport { catchError, map, tap, throwError } from \"rxjs\";\nimport {\n  ExperienciaHvDto,\n  TipoExperienciaDto,\n  UpsertExperienciaHvDto,\n} from \"../interfaces/experiencia.interface\";\nimport moment from \"moment\";\n\n@Injectable({ providedIn: \"root\" })\nexport class ExperienciaService {\n  private readonly http = inject(HttpClient);\n  private readonly notify = inject(NotificationService);\n  private readonly baseUrl = environment.hojaDeVidaApiUrl + \"/experiencia-hv\";\n\n  buscarTiposExperiencia() {\n    return this.http\n      .get<TipoExperienciaDto[]>(`${this.baseUrl}/search-all-tipo-experiencia`)\n      .pipe(\n        map((list) => list.filter((t) => t.habilitado)),\n        catchError((err) =>\n          this.handleError(\n            err,\n            \"No fue posible cargar los tipos de experiencia\"\n          )\n        )\n      );\n  }\n\n  obtenerExperienciasPorPersona(idPersona: number) {\n    return this.http\n      .get<ExperienciaHvDto[]>(\n        `${this.baseUrl}/search-experiencias-by-id-persona/${idPersona}`\n      )\n      .pipe(\n        catchError((err) =>\n          this.handleError(err, \"No fue posible cargar experiencias\")\n        )\n      );\n  }\n\n  guardarExperiencias(lista: UpsertExperienciaHvDto[]) {\n    return this.http\n      .post<ExperienciaHvDto[]>(\n        `${this.baseUrl}/create-experiencia`,\n        this.serializarFechas(lista)\n      )\n      .pipe(\n        tap(() =>\n          this.notify.showSuccess(\"Experiencias guardadas exitosamente\")\n        ),\n        catchError((err) =>\n          this.handleError(err, \"No fue posible guardar experiencias\")\n        )\n      );\n  }\n\n  eliminarExperiencia(id: number) {\n    return this.http\n      .delete<boolean>(`${this.baseUrl}/eliminar-experiencia-hv/${id}`)\n      .pipe(\n        tap(() =>\n          this.notify.showSuccess(\"Experiencia eliminada exitosamente\")\n        ),\n        catchError((err) =>\n          this.handleError(err, \"No fue posible eliminar la experiencia\")\n        )\n      );\n  }\n\n  private serializarFechas(lista: UpsertExperienciaHvDto[]) {\n    return lista.map((e) => ({\n      ...e,\n      fechaDesde: e.fechaDesde ? this.formatFecha(e.fechaDesde) : null,\n      fechaHasta: e.fechaHasta ? this.formatFecha(e.fechaHasta) : null,\n    }));\n  }\n\n  private formatFecha(f: Date | string) {\n    if (!f) return null;\n    if (typeof f === \"string\") return f;\n    return moment(f).format(\"YYYY-MM-DD\");\n  }\n\n  private handleError(error: any, userMessage: string) {\n    console.error(error);\n    this.notify.showError(userMessage);\n    return throwError(() => error);\n  }\n}\n","import {\n  Component,\n  computed,\n  inject,\n} from \"@angular/core\";\nimport { InfoPersonalComponent } from \"../components/info-personal/info-personal.component\";\nimport {\n  MatAccordion,\n  MatExpansionPanel,\n  MatExpansionPanelContent,\n  MatExpansionPanelHeader,\n  MatExpansionPanelTitle,\n} from \"@angular/material/expansion\";\nimport { MatIcon } from \"@angular/material/icon\";\nimport { PerfilAcademicoComponent } from \"../components/perfil-academico\";\nimport { OtrosEstudiosComponent } from \"../components/otros-estudios\";\nimport { ExperienciaComponent } from \"../components/experiencia\";\nimport { selectIdHojaVida, selectIdPersona } from \"../store\";\nimport { Store } from \"@ngrx/store\";\n\n@Component({\n  selector: \"app-section-container-hv\",\n  templateUrl: \"./section-container-hv.component.html\",\n  styleUrl: \"./section-container-hv.component.scss\",\n  imports: [\n    InfoPersonalComponent,\n    MatIcon,\n    MatAccordion,\n    MatExpansionPanel,\n    MatExpansionPanelContent,\n    MatExpansionPanelHeader,\n    MatExpansionPanelTitle,\n    PerfilAcademicoComponent,\n    OtrosEstudiosComponent,\n    ExperienciaComponent,\n  ],\n})\nexport class SectionContainerHvComponent {\n  //esto es para asegurarse que no se muestre el formulario hasta que haya cargado\n  //la infromacion del usuario.\n  idHojaVida = inject(Store).selectSignal(selectIdHojaVida);\n  private readonly store = inject(Store);\n\n  isCreated = computed<boolean>(\n    () => !!this.store.selectSignal(selectIdPersona)()\n  );\n}\n","<img\n  src=\"assets/img/banco_info_perfiles.svg\"\n  alt=\"Banco informacion de perfiles\"\n  class=\"image-banner\"\n/>\n\n<mat-accordion class=\"accordion\" multi>\n  <!-- Sección de Información Personal ------------------------------------------------------------------------------->\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"title-section\">\n        <mat-icon>person</mat-icon>\n        Datos Personales\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-info-personal></app-info-personal>\n  </mat-expansion-panel>\n\n  <mat-expansion-panel [disabled]=\"!isCreated()\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"title-section\">\n        <mat-icon>school</mat-icon>\n        Perfiles academicos\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <ng-template matExpansionPanelContent>\n      <app-perfil-academico></app-perfil-academico>\n    </ng-template>\n  </mat-expansion-panel>\n\n\n  <!-- Sección de Otros Estudios -------------------------------------------------------------------------------------->\n  <mat-expansion-panel [disabled]=\"!isCreated()\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"title-section\">\n        <mat-icon>menu_book</mat-icon>\n        Otros Estudios\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <ng-template matExpansionPanelContent>\n      <app-otros-estudios></app-otros-estudios>\n    </ng-template>\n  </mat-expansion-panel>\n\n  <!-- Sección de Experiencia --------------------------------------------------------------------------------------->\n  <mat-expansion-panel [disabled]=\"!isCreated()\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"title-section\">\n        <mat-icon>work</mat-icon>\n        Experiencia\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <ng-template matExpansionPanelContent>\n      <app-experiencia></app-experiencia>\n    </ng-template>\n  </mat-expansion-panel>\n</mat-accordion>"],"mappings":"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","names":["_c0","_c1","_c2","_c3","_c0","_c1","_c2","_c3","_c4","input","filter","range","_c0","_c1","moment","input","_forTrack0","_c0","_c1","_c2","_c3","_MatThumb","_MatTickMark","input","_c0","_c1","_c2","_c3","import_moment","import_moment","moment","_forTrack0","moment"],"x_google_ignoreList":[0,1,2,3,4,5,6,13]}